// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

do_camera_zoom_out()
{
    if ( isdefined( level.zombieregendelayscaleoutgas ) )
        return;

    level.zombieregendelayscaleoutgas = [];
    var_0 = [[ level.dmzextractcostdecrease ]]();
    var_1 = [[ level.displaycodes ]]();

    if ( var_0.size < 1 || var_1.size < 1 )
        return;

    var_2 = scripts\engine\utility::array_combine( var_0, var_1 );

    foreach ( var_5, var_4 in var_2 )
    {
        if ( !isdefined( level.zombieregendelayscaleoutgas[var_4.checkpoint] ) )
            level.zombieregendelayscaleoutgas[var_4.checkpoint] = [];

        level.zombieregendelayscaleoutgas[var_4.checkpoint][var_5] = var_4;
    }
}

dmzlootleaderupdateonpickup( var_0, var_1 )
{
    if ( !isdefined( level.zombieregendelayscaleingas ) )
        level.zombieregendelayscaleingas = [];

    level.zombieregendelayscaleingas[var_0] = var_1;
}

dmztut_endgame( var_0 )
{
    setdvar( "restart_checkpoint", var_0 );
    setdvar( level.mapname + "_start_obj", "" );
    setomnvar( "ui_cp_checkpoint", 1 );
}

distort_fx( var_0, var_1 )
{
    var_2 = level.zombieregendelayscaleoutgas[var_0];

    foreach ( var_4 in var_2 )
    {
        if ( var_4.type != var_1 )
            continue;

        if ( var_4.checkpoint != var_0 )
            continue;

        if ( isdefined( var_4.inuse ) )
            continue;

        switch ( var_1 )
        {
            case "player_spawn":
                var_4.inuse = 1;
                return var_4;
            case "carepackage_munitions":
            case "carepackage":
                return var_4;
        }
    }
}

dmzminextractcost( var_0 )
{
    var_0 scripts\engine\utility::_id_12E3F( "spawned_player", "disconnect" );

    while ( scripts\cp\utility::any_player_nearby( self.origin, 64 ) )
        wait 1;

    self.inuse = undefined;
}

displaydelayedmissioncompletesplash( var_0 )
{
    level endon( "game_ended" );

    if ( !isdefined( level.zombieregendelayscaleingas[var_0] ) )
        return;

    var_1 = distort_fx( var_0, "carepackage" );
    var_2 = spawn( "script_model", var_1.origin );
    var_2.angles = var_1.angles;
    var_2 setmodel( "military_carepackage_01_friendly" );
    var_3 = getent( "care_package_col", "targetname" );
    var_4 = spawn( "script_model", var_1.origin );
    var_4.angles = var_1.angles;
    var_4 clonebrushmodeltoscriptmodel( var_3 );
    var_4 linkto( var_2 );
    var_5 = spawn( "script_model", var_1.origin + ( 0, 0, 35 ) );
    var_5 setmodel( "tag_origin" );
    var_5 scripts\cp\utility::sethintobject( undefined, "HINT_BUTTON", undefined, &"CP_STRIKE/EDIT_LOADOUT", 25, "duration_short", "hide", 256, 75, 128, 75 );
    var_5.headicon = deleteheadicon( var_2 );
    setheadiconfriendlyimage( var_5.headicon, "hud_icon_survival_weapon" );
    setheadicondrawthroughgeo( var_5.headicon, 0 );
    setheadiconsnaptoedges( var_5.headicon, 1024 );
    setheadiconmaxdistance( var_5.headicon, 256 );
    addclienttoheadiconmask( var_5.headicon, -5 );
    var_2.collision = var_4;
    var_2.interaction = var_5;
    var_5 thread display_who_broke_stealth_message( var_2 );
    return var_2;
}

display_who_broke_stealth_message( var_0 )
{
    self endon( "death" );
    var_0 endon( "death" );

    for (;;)
    {
        self waittill( "trigger", var_1 );

        if ( !var_1 scripts\cp\utility::is_valid_player() )
            continue;

        var_1 thread displaysplashtoplayers( self );
    }
}

displaysplashtoplayers( var_0 )
{
    self endon( "disconnect" );
    self endon( "last_stand" );
    level endon( "game_ended" );
    var_0 disableplayeruse( self );
    level thread scripts\mp\trials\mp_trl_floorislava::score_event_headshot( self, var_0 );
    self setclientomnvar( "cp_open_cac", -1 );
    self setclientomnvar( "ui_options_menu", 2 );
    scripts\engine\utility::_id_12E3F( "loadout_given", "loadout_menu_closed" );
    wait 1;
    self setclientomnvar( "cp_open_cac", -2 );
    var_0 enableplayeruse( self );
}

displayplunderloss( var_0, var_1, var_2, var_3 )
{
    level endon( "game_ended" );
    var_4 = 0;

    if ( istrue( level.getsuperrefforsuperextraweapon ) )
    {
        switch ( var_0 )
        {
            case "convoy4_secure_tower":
            case "tmtyl_p1":
            case "arms_race_p1":
            case "apce_p1":
            case "ml_p3":
            case "ml_p2":
            case "ml_p1":
            case "tow_p1":
                var_4 = 1;
                break;
        }

        if ( var_4 )
            return;
    }

    var_5 = distort_fx( var_0, "carepackage_munitions" );

    if ( !isdefined( var_5 ) || !isdefined( var_5.origin ) )
        return;

    var_6 = spawn( "script_model", var_5.origin );
    var_6.angles = var_5.angles;
    var_7 = ( 0, 0, 35 );
    var_8 = "show";
    var_9 = undefined;
    var_10 = undefined;

    if ( !istrue( var_3 ) )
    {
        var_6 setmodel( "military_carepackage_01_uk" );
        var_11 = getent( "care_package_col", "targetname" );
        var_12 = spawn( "script_model", var_5.origin );
        var_12.angles = var_5.angles;
        var_12 clonebrushmodeltoscriptmodel( var_11 );
        var_12 linkto( var_6 );
        var_6.collision = var_12;

        if ( isdefined( var_0 ) && var_0 == "strongbox" )
        {
            level.checkpoint = "strongbox";
            var_7 = var_7 + ( -10, 25, 0 );
            var_9 = ( 10, -25, 35 );
        }
    }
    else
    {
        var_6 setmodel( "military_hq_crate_01_proxy_cp_spawnable" );
        var_6 setscriptablepartstate( "main", "on" );
        var_6._id_12B60 = 1;
        var_7 = var_7 + rotatevector( ( 18.5, 16.6, 2 ), var_6.angles );
        var_8 = "hide";
        var_9 = ( 0, 0, 35 ) + rotatevector( ( 18.5, -14.6, 2 ), var_6.angles );
    }

    level thread display_timer( var_9, var_5, var_6, var_1, var_2, var_3, var_8 );
    var_13 = spawn( "script_model", var_5.origin + var_7 );
    var_13 setmodel( "tag_origin" );
    var_13 scripts\cp\utility::sethintobject( undefined, "HINT_BUTTON", undefined, &"CP_STRIKE/EDIT_MUNITIONS", 1, "duration_short", var_8, 256, 75, 128, 75 );
    var_6.interaction = var_13;
    var_13.delete_dropped_weapon = var_6;
    var_13.spawn_parking_guys = var_1;
    var_13.spawn_paratrooper_ac130 = var_2;
    var_13._id_12B60 = var_3;
    var_13 thread display_welcome( var_6 );
    return var_6;
}

display_timer( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    level endon( "game_ended" );

    if ( isdefined( var_0 ) )
    {
        var_7 = spawn( "script_model", var_1.origin + var_0 );
        var_7 setmodel( "tag_origin" );

        if ( !isdefined( var_6 ) )
            var_6 = "hide";

        var_7 scripts\cp\utility::sethintobject( undefined, "HINT_BUTTON", undefined, &"CP_STRIKE/EDIT_ROLE", 1, "duration_short", var_6, 256, 75, 128, 75 );
        var_2._id_11B68 = var_7;
        var_7.delete_dropped_weapon = var_2;
        var_7.spawn_parking_guys = var_3;
        var_7.spawn_paratrooper_ac130 = var_4;
        var_7._id_12B60 = var_5;
        var_7 thread display_wave_num( var_2 );
    }
}

display_welcome( var_0 )
{
    self endon( "death" );
    var_0 endon( "death" );
    thread displaysquadmessagetoplayer();
    thread displaysquadmessagetoteam();

    for (;;)
    {
        self waittill( "trigger", var_1 );

        if ( !var_1 scripts\cp\utility::is_valid_player() )
            continue;

        if ( istrue( var_1.getteamplunderhud ) )
            continue;

        var_1 thread displaysplashtoplayersinradius( self );
    }
}

display_wave_num( var_0, var_1 )
{
    self endon( "death" );
    var_0 endon( "death" );
    thread dist_sq_to_ref();

    for (;;)
    {
        self waittill( "trigger", var_2 );

        if ( !var_2 scripts\cp\utility::is_valid_player() )
            continue;

        if ( istrue( var_2.getteamplunderhud ) )
            continue;

        var_2 thread dist_miles( self );
    }
}

dist_sq_to_ref()
{
    level endon( "game_ended" );
    level waittill( "close_munitions_store" );
    self makeunusable();
}

displaysquadmessagetoteam()
{
    level endon( "game_ended" );
    level endon( "close_munitions_store" );

    for (;;)
    {
        level waittill( "player_spawned", var_0 );
        level thread displaywelcome( var_0, self );
    }
}

displaysquadmessagetoplayer()
{
    level endon( "game_ended" );
    scripts\engine\utility::flag_wait( "objectives_registered" );
    scripts\engine\utility::flag_wait( "strike_init_done" );
    var_0 = 38;

    if ( istrue( self._id_12B60 ) )
        var_0 = 22;

    self.objicon = scripts\cp\cp_objectives::requestworldid( "munitions_purchase", 25 );
    objective_setplayintro( self.objicon, 0 );
    objective_setbackground( self.objicon, 1 );
    objective_state( self.objicon, "invisible" );
    objective_icon( self.objicon, "hud_icon_survival_killstreak_small" );
    var_1 = self.origin;

    if ( isdefined( level.checkpoint ) && level.checkpoint == "strongbox" )
    {
        var_0 = 75;
        var_1 = self.delete_dropped_weapon.origin;
    }

    objective_position( self.objicon, var_1 + ( 0, 0, var_0 ) );
    objective_setshowdistance( self.objicon, 0 );
    objective_sethot( self.objicon, 0 );
    objective_setpinned( self.objicon, 0 );
    objective_hidefromplayersinmask( self.objicon );
    objective_removeallfrommask( self.objicon );
    scripts\engine\utility::flag_wait( "player_spawned_with_loadout" );
    wait 2.5;
    var_2 = 1;
    var_3 = 60;
    var_4 = 0.1;

    if ( isdefined( self.spawn_paratrooper_ac130 ) )
        var_3 = self.spawn_paratrooper_ac130;

    var_5 = var_4 / var_3;

    if ( isdefined( self.spawn_parking_guys ) )
        level waittill( self.spawn_parking_guys );

    objective_showprogressforteam( self.objicon, "allies" );

    while ( var_2 > 0 )
    {
        objective_setprogress( self.objicon, var_2 );
        wait( var_4 );
        var_2 = var_2 - var_5;

        if ( var_2 < 0 )
            var_2 = 0;
    }

    level notify( "close_munitions_store" );
    self makeunusable();

    foreach ( var_7 in level.players )
    {
        if ( var_7 getclientomnvar( "cp_open_cac" ) == 3 )
            var_7 setclientomnvar( "cp_open_cac", -2 );
    }

    if ( istrue( self._id_12B60 ) )
        self.delete_dropped_weapon setscriptablepartstate( "main", "off" );
    else
    {
        self.delete_dropped_weapon setscriptablepartstate( "anims", "capture", 0 );
        self.delete_dropped_weapon setscriptablepartstate( "capture", "start", 0 );
        self.delete_dropped_weapon.collision delete();
    }

    scripts\cp\cp_objectives::freeworldid( "munitions_purchase" );
}

displaywelcome( var_0, var_1 )
{
    level endon( "game_ended" );
    var_0 endon( "death_or_disconnect" );
    level endon( "close_munitions_store" );

    if ( istrue( var_0._id_127DB ) )
        return;

    var_0._id_127DB = 1;
    wait 3;

    for (;;)
    {
        var_2 = distance2dsquared( var_0.origin, var_1.origin );

        if ( isdefined( var_2 ) && var_2 > 262144 )
        {
            if ( !istrue( var_0.ownerxuid ) )
            {
                objective_addclienttomask( var_1.objicon, var_0 );
                var_0.ownerxuid = 1;
            }
        }
        else if ( isdefined( var_2 ) && var_2 <= 262144 )
        {
            if ( isdefined( var_0.ownerxuid ) )
            {
                objective_removeclientfrommask( var_1.objicon, var_0 );
                var_0.ownerxuid = undefined;
            }
        }

        wait 0.5;
    }
}

displaysplashtoplayersinradius( var_0 )
{
    self endon( "disconnect" );
    self endon( "last_stand" );
    level endon( "game_ended" );
    level endon( "close_munitions_store" );
    var_0 disableplayeruse( self );
    self setclientomnvar( "cp_open_cac", 3 );
    wait 1;
    var_0 enableplayeruse( self );
}

dist_miles( var_0 )
{
    self endon( "disconnect" );
    self endon( "last_stand" );
    level endon( "game_ended" );
    level endon( "close_munitions_store" );
    var_0 disableplayeruse( self );
    self._id_11B67 = 1;
    self setclientomnvar( "cp_open_cac", 5 );
    wait 1;
    var_0 enableplayeruse( self );
}

display_relics_splash( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.origin = var_1;
    var_3.angles = var_2;
    var_3.type = "player_spawn";
    var_3.checkpoint = var_0;
    return var_3;
}

display_ready_for_sequence( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.origin = var_1;
    var_3.angles = var_2;
    var_3.type = "carepackage";
    var_3.checkpoint = var_0;
    return var_3;
}

display_reinforcement_called_icon( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.origin = var_1;
    var_3.angles = var_2;
    var_3.type = "carepackage_munitions";
    var_3.checkpoint = var_0;
    return var_3;
}
