// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

brmini_initdialog( var_0, var_1 )
{
    if ( brmini_cleanupents( var_1 ) )
    {
        bronloadoutcratedestroyed( var_1 );

        if ( !brking_watchcircletimers( var_0, var_1 ) )
            bronattackerdamagenottracked( var_1 );
    }

    if ( brmodevariantrewardcullfunc( var_0 ) )
        brmini_initpostmain( var_0, var_1, 0 );
}

brrebirth_initdialog( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\cp_mp\vehicles\vehicle_occupancy::_id_12CB7( var_0, var_2 );
    var_5 = brmini_addtoc130infil( var_0, var_1 );
    brpreplayerdamaged( var_0, var_1, var_3 );
    brmayconsiderplayerdead( var_1 );

    if ( var_4 )
    {
        if ( !var_5 )
        {
            broadcast_health( var_0 );
            brprewaitandspawnclient( var_0, var_1 );
        }

        if ( brmodevariantrewardcullfunc( var_0 ) )
            brmini_initfeatures( var_0 );

        if ( !brlootchoppercratedestroycallback( var_0 ) )
            var_1 thread brplayerhudoutlineforteammatesupdate( var_1, var_0 );
    }
}

brmini_initexternalfeatures( var_0, var_1, var_2 )
{
    broadcast_carry_items( var_0.brrebirth_playernakeddroploadout, var_1, 0 );
    brpreplayerdamaged( var_0, var_1, var_2 );
    brmayconsiderplayerdead( var_1 );
    var_3 = brmini_addtoc130infil( var_0, var_1 );

    if ( var_3 )
    {
        broadcast_health( var_0 );
        brking_playerwelcomesplashes( var_0 );
    }
}

brmini_createc130pathstruct( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "disconnect" );

    for (;;)
    {
        brplayerkilledspawn( var_0 );
        wait 0.5;
    }
}

brprewaitandspawnclient( var_0, var_1 )
{
    var_0.brrebirth_initfeatures = [];
    var_0.brrebirth_triggerrespawnoverlay = var_1;
    var_0.brrebirth_playernakeddroploadout = "";

    if ( brmissiontypescompleted( var_0, var_1 ) )
        brprewaitandspawnclientcleanup( var_0, var_1, 1, 9 );
    else
        brprewaitandspawnclientcleanup( var_0, var_1, 0, 9 );

    var_0.brrebirth_initfeatures = scripts\engine\utility::array_randomize( var_0.brrebirth_initfeatures );
}

brprewaitandspawnclientcleanup( var_0, var_1, var_2, var_3 )
{
    for ( var_4 = var_2; var_4 <= var_3; var_4++ )
    {
        var_5 = brloot_ammo( var_0, var_1, var_4 );

        if ( isdefined( var_5 ) && var_5 > 1 )
        {
            var_6 = brloadoutcratefirstactivation( var_5 );

            if ( var_6 != "" )
            {
                var_0.brrebirth_initfeatures = scripts\engine\utility::array_add( var_0.brrebirth_initfeatures, var_6 );
                brmodeaddtoteamlives( var_0, var_5 );
            }
        }
    }
}

brmodeaddtoteamlives( var_0, var_1 )
{
    var_2 = brleaderdialogteam( var_1 );

    if ( var_0.brrebirth_playernakeddroploadout == "" )
        var_0.brrebirth_playernakeddroploadout = var_2;
    else
    {

    }
}

brmissiontypescompleted( var_0, var_1 )
{
    var_2 = brloot_ammo( var_0, var_1, 0 );
    return isdefined( var_2 ) && var_2 == 1;
}

brloot_ammo( var_0, var_1, var_2 )
{
    var_3 = brloadoutcratedestroycallback( var_0 );

    if ( isdefined( var_3 ) )
    {
        var_4 = var_1 getplayerdata( level.loadoutsgroup, "customizationSetup", "vehicleCustomization", var_3, "tracks", var_2 );
        return var_4;
    }
    else
        return undefined;
}

brloadoutcratefirstactivation( var_0 )
{
    var_1 = tablelookup( "mp_cp/vehicletracks.csv", 0, var_0, 7 );
    return var_1;
}

brleaderdialogteam( var_0 )
{
    var_1 = tablelookup( "mp_cp/vehicletracks.csv", 0, var_0, 8 );
    return var_1;
}

brmini_initfeatures( var_0 )
{
    var_1 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getalloccupants( var_0, 1 );

    foreach ( var_3 in var_1 )
        brmini_initpostmain( var_0, var_3, 0 );
}

broadcast_health( var_0 )
{
    var_1 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getalloccupants( var_0, 1 );

    foreach ( var_3 in var_1 )
        broadcast_carry_items( var_0.brrebirth_playernakeddroploadout, var_3, 0 );
}

brmini_initpostmain( var_0, var_1, var_2 )
{
    var_3 = brmini_addtoc130infil( var_0, var_1 );

    if ( isdefined( var_0.brrebirth_playernakeddroploadout ) && isdefined( var_0.brrebirth_initfeatures ) && isdefined( var_1 ) )
    {
        if ( isdefined( var_0.brrebirth_triggerrespawnoverlay ) && ( var_3 || var_2 || var_1 getwartrackpassengerenabled() ) )
        {
            var_4 = brleaderdialogplayer( var_0 );

            if ( !brlootchoppercrateactivatecallback( var_0, var_1, var_4 ) )
            {
                var_1.brrebirth_playernakeddroploadout = var_0.brrebirth_playernakeddroploadout;
                var_1.brrebirth_initpostmain = var_4;
                var_1 setplayermusicstate( var_0.brrebirth_playernakeddroploadout, var_0.brrebirth_initfeatures );
            }
        }

        if ( !var_3 && !var_2 )
            var_1 thread brlootchoppercratecapturecallback( var_1, var_0 );
    }
}

brlootchoppercrateactivatecallback( var_0, var_1, var_2 )
{
    if ( !isdefined( var_1.brrebirth_playernakeddroploadout ) )
        return 0;

    if ( !isdefined( var_1.brrebirth_initpostmain ) )
        return 0;

    return var_1.brrebirth_playernakeddroploadout == var_0.brrebirth_playernakeddroploadout && var_1.brrebirth_initpostmain == var_2;
}

broadcast_carry_items( var_0, var_1, var_2 )
{
    if ( brmini_cleanupents( var_1 ) )
    {
        if ( isdefined( var_0 ) && isdefined( var_1 ) )
        {
            var_1.brrebirth_playernakeddroploadout = undefined;
            var_1.brrebirth_initpostmain = undefined;
            var_1 stopplayermusicstate( var_0 );

            if ( !var_2 )
                var_1 notify( "stop_battle_tracks_option_watch" );
        }
    }
}

brmini_cleanupents( var_0 )
{
    return isdefined( var_0.brrebirth_playernakeddroploadout ) && isdefined( var_0.brrebirth_initpostmain );
}

brmini_addtoc130infil( var_0, var_1 )
{
    return isdefined( var_0.brrebirth_triggerrespawnoverlay ) && var_0.brrebirth_triggerrespawnoverlay == var_1;
}

brking_playerwelcomesplashes( var_0 )
{
    var_0.brrebirth_triggerrespawnoverlay = undefined;
    var_0.brrebirth_initfeatures = undefined;
    var_0.brrebirth_playernakeddroploadout = undefined;
}

brlootchoppercratedestroycallback( var_0 )
{
    if ( !isdefined( var_0.brrebirth_initfeatures ) )
        return 1;

    if ( var_0.brrebirth_initfeatures.size == 0 )
        return 1;

    return 0;
}

brplayerhudoutlineforteammatesupdate( var_0, var_1 )
{
    var_0 notify( "stop_battle_tracks_toggle_think" );
    var_0 endon( "stop_battle_tracks_toggle_think" );
    var_0 endon( "death_or_disconnect" );
    var_0 endon( "last_stand_start" );
    brplayerhudoutlineupdatefromnotify( var_0 );
    var_2 = brloadoutupdateammo( var_0 );
    brrebirth_brmayconsiderplayerdead( var_0, var_1, var_2 );

    if ( var_0 scripts\engine\utility::is_player_gamepad_enabled() )
        var_0 notifyonplayercommand( "update_battle_tracks_toggle_state", "+stance" );
    else
        var_0 notifyonplayercommand( "update_battle_tracks_toggle_state", "nightvision" );

    for (;;)
    {
        var_0 waittill( "update_battle_tracks_toggle_state" );
        var_3 = brleaderdialogteamexcludeplayer( var_0 );
        brrebirth_brmayconsiderplayerdead( var_0, var_1, var_3 );
    }
}

brrebirth_brmayconsiderplayerdead( var_0, var_1, var_2 )
{
    switch ( var_2 )
    {
        case "on":
            brplayerhudoutlineforteammates( var_0, var_1 );
            break;
        case "off":
            brplacementchallengeallowed( var_0, var_1 );
            break;
    }
}

brplayerhudoutlineforteammates( var_0, var_1 )
{
    brmoderemovefromteamlives( var_0, "on" );
    brmini_initfeatures( var_1 );
}

brplacementchallengeallowed( var_0, var_1 )
{
    brmoderemovefromteamlives( var_0, "off" );
    broadcast_health( var_1 );
}

brleaderdialogteamexcludeplayer( var_0 )
{
    switch ( var_0.pers["battleTracksToggleState"] )
    {
        case "on":
            return "off";
        case "off":
            return "on";
    }
}

brplayerhudoutlineupdatefromnotify( var_0 )
{
    if ( !isdefined( var_0.pers["battleTracksToggleState"] ) )
        brmoderemovefromteamlives( var_0, "on" );
}

brmoderemovefromteamlives( var_0, var_1 )
{
    var_0.pers["battleTracksToggleState"] = var_1;
    var_2 = var_0 getclientomnvar( "ui_veh_battle_tracks_toggle_state" );

    switch ( var_1 )
    {
        case "on":
            var_0 setclientomnvar( "ui_veh_battle_tracks_toggle_state", 1 );
            break;
        case "off":
            var_0 setclientomnvar( "ui_veh_battle_tracks_toggle_state", 2 );
            break;
    }
}

brmayconsiderplayerdead( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_1 = var_0 getclientomnvar( "ui_veh_battle_tracks_toggle_state" );
        var_0 setclientomnvar( "ui_veh_battle_tracks_toggle_state", 0 );
    }
}

brloadoutupdateammo( var_0 )
{
    return var_0.pers["battleTracksToggleState"];
}

brplayerhudoutlineforteammatessafe( var_0, var_1 )
{
    return isdefined( var_0.pers["battleTracksToggleState"] ) && var_0.pers["battleTracksToggleState"] == var_1;
}

brpreplayerdamaged( var_0, var_1, var_2 )
{
    var_3 = isdefined( var_2 ) && scripts\cp_mp\vehicles\vehicle_occupancy::_id_12CB7( var_0, var_2 );

    if ( var_3 )
        var_1 brpickupscriptableid( var_1 );
}

brpickupscriptableid( var_0 )
{
    var_0 notify( "stop_battle_tracks_toggle_think" );
}

brloadoutcratepostcapture()
{
    var_0 = level.gametype;

    if ( var_0 == "br" )
    {
        var_1 = getdvar( "scr_br_gametype", "" );

        if ( var_1 != "" )
            return var_1;
    }

    return var_0;
}

brmodevariantrewardcullfunc( var_0 )
{
    if ( brloadoutcratepostcapture() == "x2" )
        return 0;

    if ( brlootchoppercratedestroycallback( var_0 ) )
        return 0;

    if ( isdefined( var_0.brrebirth_triggerrespawnoverlay ) && brplayerhudoutlineforteammatessafe( var_0.brrebirth_triggerrespawnoverlay, "off" ) )
        return 0;

    return 1;
}

brloadoutcratedestroycallback( var_0 )
{
    switch ( var_0.targetname )
    {
        case "apc_russian":
            return "apc";
        case "atv":
            return "atv";
        case "cargo_truck_mg":
        case "cargo_truck":
            return "cargo_truck";
        case "jeep":
            return "jeep";
        case "little_bird_mg":
        case "little_bird":
            return "little_bird";
        case "tac_rover":
            return "tac_rover";
        case "light_tank":
            if ( isdefined( var_0.spawndata.usealtmodel ) )
                return "tank_east";
            else
                return "tank_west";
        case "motorcycle":
            return "motorcycle";
        default:
            return undefined;
    }
}

brplayerkilledspawn( var_0 )
{
    var_1 = var_0 getmovingplatformparent();

    if ( brmodevalidatekillstreakslot( var_1, var_0 ) )
    {
        var_0 thread brneverlanded( var_1, var_0 );

        if ( !brmodifyvehicledamage( var_1, var_0 ) )
        {
            bronattackerdamagenottracked( var_0 );
            brmini_kickplayersatcircleedge( var_1, var_0 );
        }
    }
}

brmini_kickplayersatcircleedge( var_0, var_1 )
{
    brmini_initpostmain( var_0, var_1, 0 );
}

bronattackerdamagenottracked( var_0 )
{
    if ( brmini_cleanupents( var_0 ) )
    {
        bronloadoutcratedestroyed( var_0 );
        broadcast_currency( var_0 );
    }
}

bronloadoutcratedestroyed( var_0 )
{
    var_0 notify( "battle_tracks_standingOnVehicleTimeout" );
}

brneverlanded( var_0, var_1 )
{
    level endon( "game_ended" );
    var_1 endon( "disconnect" );
    var_1 notify( "battle_tracks_standingOnVehicleTimeout" );
    var_1 endon( "battle_tracks_standingOnVehicleTimeout" );
    wait 1;
    broadcast_currency( var_1 );
}

brlootchoppercratecapturecallback( var_0, var_1 )
{
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    var_0 endon( "stop_battle_tracks_option_watch" );
    var_2 = var_0 getwartrackpassengerenabled();

    for (;;)
    {
        wait 0.5;
        var_3 = var_0 getwartrackpassengerenabled();

        if ( var_3 != var_2 )
        {
            if ( var_3 )
            {
                if ( brmodevariantrewardcullfunc( var_1 ) )
                    brmini_initpostmain( var_1, var_0, 1 );
            }
            else
                broadcast_carry_items( var_1.brrebirth_playernakeddroploadout, var_0, 1 );

            var_2 = var_3;
        }
    }
}

broadcast_currency( var_0 )
{
    broadcast_carry_items( var_0.brrebirth_playernakeddroploadout, var_0, 0 );
}

brmodevalidatekillstreakslot( var_0, var_1 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    if ( !var_0 scripts\cp_mp\vehicles\vehicle::isvehicle() )
        return 0;

    if ( !brrebirth_cleanupents( var_0 ) )
        return 0;

    if ( !scripts\cp_mp\vehicles\vehicle::_id_12C95( var_0, var_1 ) )
        return 0;

    if ( !brmodevariantrewardcullfunc( var_0 ) )
        return 0;

    if ( !brmini_ontimelimit( var_0, var_1 ) )
        return 0;

    return 1;
}

brmodifyvehicledamage( var_0, var_1 )
{
    if ( !isdefined( var_1.brrebirth_initpostmain ) )
        return 0;

    var_2 = brleaderdialogplayer( var_0 );
    return var_2 == var_1.brrebirth_initpostmain;
}

brking_watchcircletimers( var_0, var_1 )
{
    if ( brlootchoppercratedestroycallback( var_0 ) )
        return 0;

    return brmodifyvehicledamage( var_0, var_1 );
}

brleaderdialogplayer( var_0 )
{
    var_1 = var_0 getentitynumber() + "";
    var_2 = var_0.brrebirth_triggerrespawnoverlay getentitynumber() + "";
    return var_1 + var_2;
}

brmini_ontimelimit( var_0, var_1 )
{
    switch ( var_0.targetname )
    {
        case "cargo_truck_mg":
        case "cargo_truck":
            return scripts\mp\vehicles\little_bird_mg_mp::quickdropaddtocache( var_1, var_0, "tag_origin", -85, 0, 77, 185, 125, 40 );
        default:
            return 0;
    }
}

brrebirth_cleanupents( var_0 )
{
    if ( isdefined( var_0.targetname ) )
    {
        switch ( var_0.targetname )
        {
            case "cargo_truck_mg":
            case "cargo_truck":
                return 1;
            default:
                return 0;
        }
    }
    else
        return 0;
}
