// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

deletepropsifatmax()
{
    var_0 = scripts\cp_mp\vehicles\vehicle::vehicle_getleveldataforvehicle( "cargo_truck_mg", 1 );
    var_0.destroycallback = ::delete_subway_car;
    var_0._id_129DB = "tur_gun_cargo_truck_mp";
    deletescriptableinstanceaftertime_proc();
    deletescriptableinstance();
    deletesecretstashhud();
    deletequestobjicon();
    deletequestcircle();
    deletescavengerhud();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "cargo_truck_mg", "init" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "cargo_truck_mg", "init" ) ]]();

    deletesmokinggunhud();
    deletescriptableinstanceaftertime();
}

deletescriptableinstanceaftertime()
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "cargo_truck_mg", "initLate" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "cargo_truck_mg", "initLate" ) ]]();
}

deletescriptableinstanceaftertime_proc()
{
    var_0 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getleveldataforvehicle( "cargo_truck_mg", 1 );
    var_0.enterstartcallback = ::delete_smoke_fx;
    var_0.enterendcallback = ::delete_script_object;
    var_0.exitstartcallback = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_exitstartcallback;
    var_0.exitendcallback = ::delete_starting_boxes;
    var_0.reentercallback = ::demoforcesre;
    var_0.restrictions = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getdriverrestrictions();
    var_0.exitextents["front"] = 175;
    var_0.exitextents["back"] = 180;
    var_0.exitextents["left"] = 68;
    var_0.exitextents["right"] = 68;
    var_0.exitextents["top"] = 138;
    var_0.exitextents["bottom"] = 0;
    var_1 = "front";
    var_0.exitoffsets[var_1] = ( 140, 0, 115 );
    var_0.exitdirections[var_1] = "front";
    var_1 = "front_right";
    var_0.exitoffsets[var_1] = ( 65, 23, 115 );
    var_0.exitdirections[var_1] = "right";
    var_1 = "back_right";
    var_0.exitoffsets[var_1] = ( -152, 36, 115 );
    var_0.exitdirections[var_1] = "back";
    var_1 = "side_right";
    var_0.exitoffsets[var_1] = ( -109, 36, 115 );
    var_0.exitdirections[var_1] = "right";
    var_1 = "front_left";
    var_0.exitoffsets[var_1] = ( 65, 23, 115 );
    var_0.exitdirections[var_1] = "left";
    var_1 = "back_left";
    var_0.exitoffsets[var_1] = ( -152, 36, 115 );
    var_0.exitdirections[var_1] = "back";
    var_1 = "side_left";
    var_0.exitoffsets[var_1] = ( -109, 36, 115 );
    var_0.exitdirections[var_1] = "left";
    var_1 = "back";
    var_0.exitoffsets[var_1] = ( -152, 36, 115 );
    var_0.exitdirections[var_1] = "back";
    var_2 = [ "driver", "gunner" ];
    var_3 = "driver";
    var_4 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getleveldataforseat( "cargo_truck_mg", var_3, 1 );
    var_4.seatswitcharray = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_generateseatswitcharray( var_3, var_2 );
    var_4.exitids = [ "front_left", "side_left", "back_left", "front_right", "front" ];
    var_4.animtag = "tag_seat_0";
    var_4.stoppingpower_clearhcrongameended = "ping_vehicle_driver";
    var_3 = "gunner";
    var_4 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getleveldataforseat( "cargo_truck_mg", var_3, 1 );
    var_4.seatswitcharray = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_generateseatswitcharray( var_3, var_2 );
    var_4.exitids = [ "front_right", "side_right", "back_right", "front_left", "front" ];
    var_4.restrictions = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getturretpassengerrestrictions();
    var_4._id_129D5 = getcompleteweaponname( "tur_gun_cargo_truck_mp" );
    var_4.stoppingpower_clearhcrongameended = "ping_vehicle_gunner";
}

deletescriptableinstance()
{
    var_0 = scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_getleveldataforvehicle( "cargo_truck_mg", 1 );
    scripts\cp_mp\vehicles\vehicle_interact::_id_12C7B( "cargo_truck_mg", "single", [ "driver", "gunner" ] );
    scripts\cp_mp\vehicles\vehicle_interact::_id_12C7B( "cargo_truck_mg", "upgrade", [ "tag_screen_left", 1, ::deploy_balloon_nags ] );
    scripts\cp_mp\vehicles\vehicle_interact::_id_12C7B( "cargo_truck_mg", "copyofupgrade", [ "tag_screen_right", 1, ::deploy_balloon_nags ] );
}

deletesecretstashhud()
{
    var_0 = scripts\cp_mp\utility\vehicle_omnvar_utility::_id_12D33( "cargo_truck_mg", 1 );
    var_0.id = 16;
    var_0.seatids["driver"] = 0;
    var_0.seatids["gunner"] = 1;
    var_0._id_11B87[0] = 0;
    var_0._id_11B87[1] = 1;
    var_0._id_11B88["driver"]["cargo_truck_mg_mp"] = 0;
    var_0._id_11B88["driver"]["tur_gun_cargo_truck_mp"] = 1;
    var_0._id_11B88["gunner"]["cargo_truck_mg_mp"] = 0;
    var_0._id_11B88["gunner"]["tur_gun_cargo_truck_mp"] = 1;
}

deletequestobjicon()
{
    var_0 = getdvarfloat( "scr_armored_truck_health_override", 8750 );
    scripts\cp_mp\vehicles\vehicle_damage::_id_12C4B( "cargo_truck_mg", var_0, undefined, undefined, undefined, 30 );
    var_1 = scripts\cp_mp\vehicles\vehicle_damage::vehicle_damage_getleveldataforvehicle( "cargo_truck_mg" );
    var_1.class = "heavy";
    var_2 = scripts\cp_mp\vehicles\vehicle_damage::_id_12C2E( "cargo_truck_mg", "heavy" );
    var_2.stoppingpower_clearhcronperkscleared = ::deletetmtylheadicon;
    var_2.stoppingpower_isvalidprimaryoralt = ::deletex1finhud;
    scripts\cp_mp\vehicles\vehicle_damage::_id_12C1F( "cargo_truck_mg" );
    scripts\cp_mp\vehicles\vehicle_damage::_id_12C57( "cargo_truck_mg", 40 );
    scripts\cp_mp\vehicles\vehicle_damage::_id_12C54( "cargo_truck_mg", ::deletex1stashhud );
    scripts\cp_mp\vehicles\vehicle_damage::_id_12C50( "cargo_truck_mg", ::delete_players_black_screen );
    scripts\cp_mp\vehicles\vehicle_damage::_id_12C52( "cargo_truck_mg", "driver", getdvarfloat( "armor_truck_damage_scale", 0.7 ) );
    scripts\cp_mp\vehicles\vehicle_damage::_id_12C51( "cargo_truck_mg", "driver", getdvarfloat( "armor_truck_damage_clamp", 15 ) );
    scripts\cp_mp\vehicles\vehicle_damage::_id_12C5A( "cargo_truck_mg_mp", 5 );
}

deletequestcircle()
{
    var_0 = _accessreaderscriptableused::_id_12BF1( "cargo_truck_mg", 1 );
    var_0.br_onvehicledeath = 2.16666;
    var_0.get_random_station_names_on_track = 0.70833;
    var_0.gate_closes = 350;
    var_0.gate_flares_think = 525;
    var_0.gasvfxstructs = 875;
    var_0.gcd = 3.75;
    var_0.generate_achievementid = 7.5;
    var_0.gatherstadiumlocs = 15;
    var_0.generatecodestoshow = 0;
    var_0.generatenumbercode = 0;
    var_0.generate_solution = 0;
}

deletescavengerhud()
{
    level._effect["cargo_truck_mg_explode"] = loadfx( "vfx/iw8_mp/vehicle/vfx_cargotr_mp_death_exp.vfx" );
}

deleteable()
{
    var_0 = scripts\cp_mp\vehicles\vehicle::vehicle_getleveldataforvehicle( "cargo_truck_mg" );
    return var_0._id_129DB;
}

delete_on_unloaded( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, 0, 0 );

    if ( !isdefined( var_0.modelname ) )
        var_0.modelname = "veh8_mil_lnd_mkilo23_gunner";

    var_0.targetname = "cargo_truck_mg";

    if ( !isdefined( var_0.vehicletype ) )
        var_0.vehicletype = "mkilo_physics_mg";

    var_2 = scripts\cp_mp\vehicles\vehicle_tracking::_spawnvehicle( var_0, var_1 );

    if ( !isdefined( var_2 ) )
        return undefined;

    var_3 = deleteable();
    var_4 = "veh8_mil_lnd_mkilo23_gunner_turret";

    if ( isdefined( var_0.turretmodel ) )
        var_4 = var_0.turretmodel;

    var_5 = delete_wire_blocker_on_trigger();
    var_6 = delete_pipe_ents( var_2, var_3, var_4, var_5.tag, var_5.tagoffset );
    scripts\cp_mp\vehicles\vehicle::_id_12CDB( var_2, var_6, getcompleteweaponname( var_3 ) );
    scripts\cp_mp\vehicles\vehicle::_id_12C1A( var_2, "cargo_truck_mg", var_0 );
    var_2.objweapon = getcompleteweaponname( "cargo_truck_mg_mp" );
    var_2._id_129DB = var_3;
    var_2.setheadicon_addclienttomask = 3;
    _applydvarstosettings::_id_12C0D( var_2 );
    scripts\cp_mp\vehicles\vehicle::_id_12C1B( var_2, var_0 );
    var_7 = scripts\cp_mp\vehicles\vehicle::vehicle_flippedendcallback;

    if ( isdefined( var_0.isgroundwarsiege ) )
        var_7 = var_0.isgroundwarsiege;

    thread scripts\cp_mp\vehicles\vehicle::vehicle_watchflipped( var_2, undefined, var_7 );
    thread deploy_emp_drone( var_2 );
    var_2 thread depletionrate( var_2 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "cargo_truck_mg", "create" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "cargo_truck_mg", "create" ) ]]( var_2 );

    return var_2;
}

delete_wire_blocker_on_trigger()
{
    var_0 = spawnstruct();

    if ( getdvarint( "cargo_truck_turret_tag_animate", 0 ) == 1 )
    {
        iprintlnbold( "=== tag_body_animate ===" );
        var_0.tag = "tag_body_animate";
        var_0.tagoffset = ( 58.87, 0, 60.052 );
    }
    else
    {
        var_0.tag = "tag_turret";
        var_0.tagoffset = ( 0, 0, 0 );
    }

    return var_0;
}

delete_pipe_ents( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = spawnturret( "misc_turret", var_0 gettagorigin( var_3 ), var_1, 0 );
    var_5 linkto( var_0, var_3, var_4, ( 0, 0, 0 ) );
    var_5 setmodel( var_2 );
    var_5 setmode( "sentry_offline" );
    var_5 setsentryowner( undefined );
    var_5 makeunusable();
    var_5 setdefaultdroppitch( 0 );
    var_5 setturretmodechangewait( 1 );
    var_5.angles = var_0.angles;
    var_5.vehicle = var_0;
    var_5.maxhealth = 999999;
    var_5.health = var_5.maxhealth;
    return var_5;
}

delete_subway_car( var_0, var_1 )
{
    if ( !isdefined( var_0 ) )
    {
        var_0 = spawnstruct();
        var_0.inflictor = self;
        var_0.objweapon = "cargo_truck_mg_mp";
        var_0.meansofdeath = "MOD_EXPLOSIVE";
    }

    if ( !istrue( level.suppressvehicleexplosion ) )
    {
        self notify( "predeath" );
        wait 0.2;
    }

    scripts\cp_mp\vehicles\vehicle_damage::_id_12C43( var_0 );

    if ( !istrue( level.suppressvehicleexplosion ) )
        waitframe();

    scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_killoccupants( self, var_0 );
    scripts\cp_mp\vehicles\vehicle_damage::vehicle_damage_clearvisuals( undefined, undefined, 1 );
    thread delete_race();

    if ( !istrue( level.suppressvehicleexplosion ) )
    {
        var_2 = self gettagorigin( "tag_origin" );
        var_3 = scripts\engine\utility::ter_op( isdefined( var_0.attacker ), var_0.attacker, self );
        self radiusdamage( var_2, 256, 140, 70, var_3, "MOD_EXPLOSIVE", "cargo_truck_mg_mp" );
        playfx( scripts\engine\utility::getfx( "cargo_truck_mg_explode" ), var_2, anglestoforward( self.angles ), anglestoup( self.angles ) );
        playsoundatpos( var_2, "veh_mkilo_mg_explode" );
        earthquake( 0.4, 800, var_2, 0.7 );
        playrumbleonposition( "grenade_rumble", var_2 );
        physicsexplosionsphere( var_2, 500, 200, 1 );
    }
}

delete_race()
{
    scripts\cp_mp\vehicles\vehicle::_id_12C63( self );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "cargo_truck_mg", "delete" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "cargo_truck_mg", "delete" ) ]]( self );

    waitframe();
    scripts\cp_mp\vehicles\vehicle::_id_12C64( self );
}

deletex1stashhud( var_0 )
{
    if ( scripts\cp_mp\vehicles\vehicle_interact::_id_12C8A( self, "armor" ) )
        var_0.damage = var_0.damage * delete_trapfunc();

    if ( isdefined( var_0.damage ) && var_0.damage > 0 )
        self notify( "damage_taken", var_0 );

    return 1;
}

delete_trapfunc()
{
    return 0.8333;
}

delete_players_black_screen( var_0 )
{
    thread delete_subway_car( var_0 );
    return 1;
}

deletetmtylheadicon( var_0, var_1 )
{
    self setscriptablepartstate( "alarm", "engineFailure", 0 );
    scripts\cp_mp\vehicles\vehicle_damage::_id_12C44( var_0, var_1 );
}

deletex1finhud( var_0, var_1 )
{
    self setscriptablepartstate( "alarm", "off", 0 );
    scripts\cp_mp\vehicles\vehicle_damage::_id_12C48( var_0, var_1 );
}

delete_smoke_fx( var_0, var_1, var_2, var_3, var_4 )
{
    if ( var_1 == "gunner" )
    {
        scripts\cp_mp\vehicles\vehicle_occupancy::_id_12CB4( var_3, var_4 );
        scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_giveturret( var_3, var_0._id_129DB, var_4, 1 );
    }
    else if ( isdefined( var_2 ) && var_2 == "gunner" )
        scripts\cp_mp\vehicles\vehicle_occupancy::_id_12CB4( var_3, var_4 );
}

delete_script_object( var_0, var_1, var_2, var_3, var_4 )
{
    if ( istrue( var_4.success ) )
        thread delete_silo_lights( var_0, var_1, var_2, var_3, var_4 );
    else if ( !istrue( var_4.playerdisconnect ) && !istrue( var_4.playerdeath ) )
    {
        if ( var_1 == "gunner" )
        {
            denyascendmessagejugg( var_3 );
            scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_taketurret( var_3, var_0, var_0._id_129DB, var_4, 1 );
        }
    }
}

delete_silo_lights( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = undefined;
    var_6 = undefined;

    if ( isdefined( var_2 ) && var_2 == "gunner" )
    {
        var_5 = "mkilo_physics_mg";
        var_6 = 6;
    }

    if ( var_1 == "driver" )
    {
        var_0 setotherent( var_3 );
        var_0 setentityowner( var_3 );
        var_3 controlslinkto( var_0 );
        var_3 thread scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_animateplayer( var_0, var_1, var_2, undefined, var_5, var_6 );
    }
    else if ( var_1 == "gunner" )
    {
        thread scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_disablefirefortime( var_3, 0 );
        var_7 = scripts\cp_mp\vehicles\vehicle::_id_12C70( var_0, var_0._id_129DB );
        var_7.owner = var_3;
        var_7 setotherent( var_3 );
        var_7 setentityowner( var_3 );
        var_7 setsentryowner( var_3 );
        var_3 disableturretdismount();
        var_3 controlturreton( var_7 );
        delete_objective_on_death( var_3 );
    }

    thread scripts\cp_mp\vehicles\vehicle_occupancy::_id_12CCD( var_4, 1 );
    scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_updateomnvarsonseatenter( var_0, var_2, var_1, var_3 );
    depletiondelay( var_0, undefined );
}

delete_starting_boxes( var_0, var_1, var_2, var_3, var_4 )
{
    if ( istrue( var_4.success ) )
        delete_structs_on_self_death( var_0, var_1, var_2, var_3, var_4 );
}

delete_structs_on_self_death( var_0, var_1, var_2, var_3, var_4 )
{
    if ( var_1 == "driver" )
    {
        var_0 setotherent( undefined );
        var_0 setentityowner( undefined );
    }

    var_5 = !isdefined( var_2 );

    if ( var_1 == "gunner" || var_5 && var_3 hasweapon( var_0._id_129DB ) )
    {
        var_6 = scripts\cp_mp\vehicles\vehicle::_id_12C70( var_0, var_0._id_129DB );

        if ( !istrue( var_4.playerdisconnect ) )
        {
            var_3 enableturretdismount();
            var_3 controlturretoff( var_6 );

            if ( !istrue( var_4.playerdeath ) )
                scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_taketurret( var_3, var_0, var_0._id_129DB, var_4, 1 );

            thread scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_cleardisablefirefortime( var_3, var_4.playerdeath );
        }

        var_6.owner = undefined;
        var_6 setotherent( undefined );
        var_6 setentityowner( undefined );
        var_6 setsentryowner( undefined );
        denyascendmessagejugg( var_3 );
    }

    if ( !istrue( var_4.playerdisconnect ) )
    {
        var_3 controlsunlink();

        if ( istrue( var_4.playerdeath ) )
            var_3 scripts\cp_mp\vehicles\vehicle_occupancy::adddroponplayerdeath();

        var_3 scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_stopanimatingplayer();
        var_7 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_moveplayertoexit( var_3, var_2, var_4 );

        if ( !var_7 )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "handleSuicideFromVehicles" ) )
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "handleSuicideFromVehicles" ) ]]( var_3 );
            else
                var_3 suicide();
        }
    }

    scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_updateomnvarsonseatexit( var_0, var_1, var_2, var_3 );
    depletiondelay( var_0, undefined );
}

delete_objective_on_death( var_0 )
{
    if ( isdefined( var_0.munitions_override_waittill ) )
        return;

    var_0.munitions_override_waittill = 1;
    var_1 = scripts\cp_mp\vehicles\vehicle::vehicle_getleveldataforvehicle( "cargo_truck_mg" );

    if ( istrue( var_1._id_120AF ) )
        return;

    var_0 scripts\cp_mp\utility\damage_utility::adddamagemodifier( "ctmgGunnerMissileRedux", 0.4, 0, ::deleteobjective );
}

denyascendmessagejugg( var_0 )
{
    if ( !isdefined( var_0.munitions_override_waittill ) )
        return;

    var_0.munitions_override_waittill = undefined;
    var_1 = scripts\cp_mp\vehicles\vehicle::vehicle_getleveldataforvehicle( "cargo_truck_mg" );

    if ( istrue( var_1._id_120AF ) )
        return;

    var_0 scripts\cp_mp\utility\damage_utility::removedamagemodifier( "ctmgGunnerMissileRedux", 0 );
}

deleteobjective( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( var_4 != "MOD_PROJECTILE_SPLASH" && var_4 != "MOD_GRENADE_SPLASH" )
        return 1;

    if ( !isdefined( var_5 ) )
        return 1;

    switch ( var_5.basename )
    {
        case "lighttank_tur_mp":
        case "iw8_la_t9launcher_mp":
        case "iw8_la_t9freefire_mp":
        case "iw8_la_rpapa7_mp":
        case "iw8_la_kgolf_mp":
        case "iw8_la_juliet_mp":
        case "iw8_la_gromeo_mp":
        case "iw8_la_gromeoks_mp":
        case "iw8_la_mike32_mp":
        case "tur_gun_cargo_truck_mp":
        case "iw8_la_t9standard_mp":
            return 0;
        default:
            return 1;
    }
}

demoforcesre( var_0, var_1, var_2, var_3, var_4 )
{
    scripts\cp_mp\vehicles\vehicle_occupancy::_id_12CCD( var_4 );
    thread deploy_subway_car_at_station( var_0, var_1, var_2, var_3, var_4 );
}

deploy_subway_car_at_station( var_0, var_1, var_2, var_3, var_4 )
{
    if ( isdefined( var_2 ) && var_2 == "gunner" )
    {
        var_5 = scripts\cp_mp\vehicles\vehicle_occupancy::_id_12CB4( var_3, var_4 );
        scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_taketurret( var_3, var_0, var_0._id_129DB, var_4, 1 );
        scripts\cp_mp\vehicles\vehicle_occupancy::_id_12CCE( var_5 );
    }
}

deploy_emp_drone( var_0 )
{
    var_0 endon( "death" );

    for (;;)
    {
        var_0 waittill( "give_upgrade", var_1, var_2 );

        switch ( var_1 )
        {
            case "armor":
                deleteallglass( var_0 );
                break;
            case "trophy":
                deletecrateimmediate( var_0 );
                break;
            case "uav":
                deletehistoryhud( var_0, var_2 );
                break;
            case "barrel":
                deletecircle( var_0 );
                break;
        }

        depletiondelay( var_0, var_2 );
    }
}

deleteallglass( var_0 )
{
    var_0 setscriptablepartstate( "armor", "show" );
    var_0.spawn_obit_struct = 1.0769;
    var_0.spawn_objective = 0.9411;
    var_1 = scripts\cp_mp\vehicles\vehicle::_id_12C70( var_0, var_0._id_129DB );
    var_1 setscriptablepartstate( "armor", "show" );
    var_0 notify( "upgrade_message", "armor_upgraded" );
}

deletecrateimmediate( var_0 )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_trophy", "init" ) )
    {
        if ( isdefined( var_0._id_1293E ) )
        {
            var_0._id_1293E = 3;
            var_0 notify( "trophy_ammo_refill" );
            var_0 notify( "upgrade_message", "trophy_ammo_refill" );
        }
        else
        {
            var_0._id_1293E = 3;
            var_0 setscriptablepartstate( "trophy", "show" );
            var_1 = scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_trophy", "init" );
            var_0 thread [[ var_1 ]]( 72, 280900, ::_id_12939, ::trophy_protectionsuccessful );

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_trophyCreateExplosion", "init" ) )
                var_0.explosion = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_trophyCreateExplosion", "init" ) ]]( var_0 );

            var_0 notify( "upgrade_message", "trophy_activated" );
        }
    }
}

_id_12939()
{
    return 1;
}

trophy_protectionsuccessful( var_0 )
{
    self._id_1293E--;
    var_1 = var_0.origin;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_trophyDestroyTarget", "init" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_trophyDestroyTarget", "init" ) ]]( var_0 );

    var_2 = trophy_getbesttag( var_1 );
    self setscriptablepartstate( "trophy_detonate", var_2 );
    var_3 = vectortoangles( self gettagorigin( var_2 ) - var_1 );
    var_4 = combineangles( var_3, ( -90, 0, 0 ) );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_trophyExplode", "init" ) )
        self.explosion thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_trophyExplode", "init" ) ]]( var_1, var_4 );

    if ( self._id_1293E == 0 )
    {
        self notify( "upgrade_message", "trophy_no_ammo" );
        self waittill( "trophy_ammo_refill" );
    }
    else
        self notify( "upgrade_message", "trophy_ammo_used" );
}

trophy_getbesttag( var_0 )
{
    var_1 = [ "tag_trophy_1", "tag_trophy_2", "tag_trophy_3", "tag_trophy_4" ];
    var_2 = undefined;
    var_3 = undefined;

    foreach ( var_8, var_5 in var_1 )
    {
        var_6 = self gettagorigin( var_5 );
        var_7 = distancesquared( var_6, var_0 );

        if ( var_8 == 0 || var_7 < var_2 )
        {
            var_2 = var_7;
            var_3 = var_5;
        }
    }

    return var_3;
}

deletehistoryhud( var_0, var_1 )
{
    denyascendmessagelaststand( var_0, var_1 );
    var_0.watchherodrop = 1;
    var_0 setscriptablepartstate( "radar", "show" );
    var_0 thread _id_11A12();
    var_0 notify( "upgrade_message", "uav_activated" );
}

denyascendmessagelaststand( var_0, var_1 )
{
    var_2 = getdvarint( "scr_truck_mg_uav_type", 0 );

    if ( var_2 == 0 )
        var_0 _meth_87A9();
    else if ( isdefined( var_1 ) )
    {
        var_3 = spawn( "script_model", var_0.origin );
        var_3 setmodel( "tag_origin" );
        var_3 linkto( var_0 );
        var_3 makeportableradar( var_1 );
        var_0.radar = var_3;
        level thread demotehvt( var_0, var_1 );
    }
}

demo_update_hint_logic( var_0, var_1 )
{
    if ( isdefined( var_0.radar ) )
        var_0.radar delete();
    else if ( istrue( var_0.watchherodrop ) )
        var_0 _meth_87AA();

    if ( istrue( var_0.watchherodrop ) )
        denyascendmessagelaststand( var_0, var_1 );
}

demotehvt( var_0, var_1 )
{
    var_0 endon( "death" );
    var_0.radar endon( "death" );
    var_2 = var_1.team;
    var_1 waittill( "disconnect" );
    var_3 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getFriendlyPlayers" ) ]]( var_2, 0 );
    var_4 = undefined;

    if ( isdefined( var_3 ) && var_3.size > 0 )
        var_4 = var_3[0];

    level thread demo_update_hint_logic( var_0, var_4 );
}

_id_11A12()
{
    level endon( "game_ended" );
    self waittill( "death" );

    if ( isdefined( self.radar ) )
        self.radar delete();
}

deletecircle( var_0 )
{
    var_1 = scripts\cp_mp\vehicles\vehicle::_id_12C70( var_0, var_0._id_129DB );
    var_1 setscriptablepartstate( "barrel", "show" );
    var_2 = getdvarfloat( "truck_turret_upgrade_heat_acc", 0.033 );
    var_3 = getdvarfloat( "truck_turret_upgrade_heat_dsipt", 0.155 );
    var_1 _meth_87AB( var_2 );
    var_1 _meth_87AD( var_3 );
    var_0 notify( "upgrade_message", "barrel_activated" );
}

depletionrate( var_0 )
{
    var_0 endon( "death" );
    var_0.use_vehicle_turret = [];

    for (;;)
    {
        foreach ( var_2 in var_0.use_vehicle_turret )
            deploy_balloon_nags( var_0, var_2 );

        wait 0.1;
    }
}

deploy_balloon_nags( var_0, var_1 )
{
    var_2 = 0;

    if ( scripts\cp_mp\vehicles\vehicle_interact::_id_12C8A( var_0, "uav" ) )
        var_2 = var_2 + 1;

    if ( scripts\cp_mp\vehicles\vehicle_interact::_id_12C8A( var_0, "armor" ) )
        var_2 = var_2 + 2;

    if ( scripts\cp_mp\vehicles\vehicle_interact::_id_12C8A( var_0, "trophy" ) )
        var_2 = var_2 + 4;

    if ( scripts\cp_mp\vehicles\vehicle_interact::_id_12C8A( var_0, "barrel" ) )
        var_2 = var_2 + 8;

    if ( isdefined( var_0._id_1293E ) && var_0._id_1293E == 3 )
        var_2 = var_2 + 16;

    if ( var_0.health == var_0.maxhealth )
        var_2 = var_2 + 32;

    var_1 scripts\mp\trials\trial_target_utility::_id_11E8D( "ui_armored_truck_status", var_2 );
}

depletiondelay( var_0, var_1 )
{
    if ( !getdvarint( "scr_cargo_truck_mg_update_upgrade_team", 0 ) )
        return;

    var_2 = deletetimedrunhud( var_0 );
    var_3 = delete_track( var_0, var_2, var_1 );

    if ( var_3 == "neutral" )
        return;

    if ( !isdefined( var_0._id_12954 ) )
        var_0._id_12954 = var_3;

    if ( var_0._id_12954 == var_3 )
        return;

    var_0._id_12954 = var_3;
    var_4 = demo_debug_nuke( var_0, var_1 );
    var_0 demo_update_hint_logic( var_0, var_4 );
}

deletetimedrunhud( var_0 )
{
    var_1 = var_0.occupants["driver"];

    if ( isdefined( var_1 ) )
        return var_1.team;

    var_2 = var_0.occupants["gunner"];

    if ( isdefined( var_2 ) )
        return var_2.team;

    return "neutral";
}

delete_track( var_0, var_1, var_2 )
{
    if ( var_1 != "neutral" )
        return var_1;

    if ( isdefined( var_2 ) )
        return var_2.team;

    return var_0.team;
}

demo_debug_nuke( var_0, var_1 )
{
    if ( isdefined( var_1 ) )
        return var_1;

    var_2 = var_0.occupants["driver"];

    if ( isdefined( var_2 ) )
        return var_2;

    var_3 = var_0.occupants["gunner"];

    if ( isdefined( var_3 ) )
        return var_3;

    return undefined;
}

deletesmokinggunhud()
{
    var_0 = scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_getleveldataforvehicle( "cargo_truck_mg", 1 );
    var_0.maxinstancecount = 2;
    var_0.priority = 75;
    var_0.getspawnstructscallback = ::delete_undeployed_subway_cars;
    var_0.spawncallback = scripts\cp_mp\utility\script_utility::getsharedfunc( "cargo_truck_mg", "spawnCallback" );
    var_0.clearancecheckradius = 185;
    var_0.clearancecheckheight = 138;
    var_0.clearancecheckminradius = 185;
}

delete_undeployed_subway_cars()
{
    var_0 = scripts\engine\utility::getstructarray( "cargotruckmg_spawn", "targetname" );

    if ( var_0.size > 0 )
    {
        var_0 = scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_removespawnstructswithflag( var_0, 1 );

        if ( var_0.size > 1 )
            var_0 = scripts\engine\utility::array_randomize( var_0 );
    }

    return var_0;
}
