// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    level.escalation_level = 0;
    level.escalation_counter = 0;
    level.min_escalation_level_override = getdvarint( "scr_min_escalation_level", 0 );
}

escalation_level_clamp( var_0 )
{
    return clamp( var_0, get_min_escalation_level(), get_max_escalation_level() );
}

increment_escalation_level()
{
    level.escalation_level = int( escalation_level_clamp( level.escalation_level + 1 ) );
}

decrement_escalation_level()
{
    level.escalation_level = int( escalation_level_clamp( level.escalation_level - 1 ) );
}

set_to_max_escalation()
{
    level.escalation_level = int( escalation_level_clamp( get_max_escalation_level() ) );
}

set_to_min_escalation()
{
    level.escalation_level = int( escalation_level_clamp( get_min_escalation_level() ) );
}

get_max_escalation_level()
{
    return getdvarint( "scr_max_escalation_level", 5 );
}

get_max_escalation_decay_start()
{
    return getdvarint( "scr_max_escalation_decay_start", 10 );
}

get_max_escalation_decay_rate()
{
    return getdvarint( "scr_max_escalation_decay_rate", 1 );
}

get_min_escalation_level()
{
    var_0 = getdvarint( "scr_min_escalation_level", 0 );

    if ( level.min_escalation_level_override != var_0 )
        var_0 = level.min_escalation_level_override;

    return var_0;
}

get_escalation_counter()
{
    return level.escalation_counter;
}

increase_minimum_escalation_level( var_0 )
{
    level.min_escalation_level_override = escalation_level_clamp( var_0 );
}

increase_escalation_counter()
{
    var_0 = level.escalation_counter + 0.1;
    level.escalation_counter = escalation_level_clamp( var_0 );

    if ( int( level.escalation_counter ) > level.escalation_level )
        increment_escalation_level();
}

decrease_escalation_counter()
{
    var_0 = level.escalation_counter - 0.1;
    level.escalation_counter = escalation_level_clamp( var_0 );

    if ( int( level.escalation_counter ) < level.escalation_level )
        decrement_escalation_level();
}

handle_escalation_on_death()
{
    level endon( "game_ended" );
    level notify( "handle_escalation_on_death" );
    level endon( "handle_escalation_on_death" );
    increase_escalation_counter();
    wait( get_max_escalation_decay_start() );

    while ( get_escalation_counter() > 0 )
    {
        decrease_escalation_counter();
        wait( get_max_escalation_decay_rate() );
    }
}
