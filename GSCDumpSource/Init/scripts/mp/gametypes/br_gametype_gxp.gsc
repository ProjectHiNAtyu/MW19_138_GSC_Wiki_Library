// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    scripts\mp\gametypes\br_gxp_fear.gsc::init();
    scripts\mp\gametypes\br_gxp_hallucination.gsc::init();
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "onPlayerConnect", ::onplayerconnect );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "onPlayerDamaged", ::onplayerdamaged );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "onLastStandEnter", ::streamforslamzoomonspawn );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "onLastStandRevive", ::streampoint );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "onPlayerKilled", ::onplayerkilled );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "onArmorPlate", ::stop_end_breach_fx );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "onContractEnd", ::stop_priming_gesture );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "onKillstreakDanger", ::streakmatchlifeid );
    thread playerregendelayspeed();
}

playerregendelayspeed()
{
    while ( !isdefined( level.onplayerspawncallbacks ) )
        waitframe();

    scripts\mp\utility\spawn_event_aggregator::registeronplayerspawncallback( ::onplayerspawned );
}

onplayerconnect( var_0 )
{
    scripts\mp\gametypes\br_gxp_fear.gsc::onplayerconnect( var_0 );
    scripts\mp\gametypes\br_gxp_hallucination.gsc::onplayerconnect( var_0 );
}

onplayerspawned( var_0 )
{
    scripts\mp\gametypes\br_gxp_fear.gsc::onplayerspawned();
    scripts\mp\gametypes\br_gxp_hallucination.gsc::onplayerspawned();
}

onplayerdamaged( var_0 )
{
    scripts\mp\gametypes\br_gxp_fear.gsc::intstruct( "onPlayerDamaged", var_0 );
}

onplayerkilled( var_0 )
{
    var_1 = var_0.victim;
    var_2 = var_0.attacker;

    if ( isdefined( var_1 ) )
    {
        var_3 = scripts\mp\gametypes\br_public.gsc::minigunbackup( var_1.team, var_1.squadindex );

        foreach ( var_5 in var_3 )
            var_5 scripts\mp\gametypes\br_gxp_fear.gsc::intstruct( "onTeammateKilled", var_0 );
    }

    if ( isdefined( var_2 ) && isplayer( var_2 ) )
        var_2 scripts\mp\gametypes\br_gxp_fear.gsc::intstruct( "onPlayerKilled", var_0 );
}

streamforslamzoomonspawn()
{
    var_0 = scripts\mp\gametypes\br_public.gsc::minigunbackup( self.team, self.squadindex );

    foreach ( var_2 in var_0 )
        var_2 scripts\mp\gametypes\br_gxp_fear.gsc::intstruct( "onLastStandEnter", self );
}

streampoint( var_0 )
{
    if ( isdefined( var_0 ) && var_0 != self )
        var_0 scripts\mp\gametypes\br_gxp_fear.gsc::intstruct( "onLastStandRevive", self );
}

stop_end_breach_fx()
{
    scripts\mp\gametypes\br_gxp_fear.gsc::intstruct( "onArmorPlate" );
}

stop_priming_gesture( var_0 )
{
    scripts\mp\gametypes\br_gxp_fear.gsc::intstruct( "onContractEnd", var_0 );
}

streakmatchlifeid( var_0 )
{
    scripts\mp\gametypes\br_gxp_fear.gsc::intstruct( "onKillstreakDanger", var_0 );
}

_id_119D9( var_0 )
{
    if ( !isdefined( level.teamdata[var_0]["aliveCountHuman"] ) )
        return level.teamdata[var_0]["aliveCount"];
    else
        return level.teamdata[var_0]["aliveCountHuman"];
}
