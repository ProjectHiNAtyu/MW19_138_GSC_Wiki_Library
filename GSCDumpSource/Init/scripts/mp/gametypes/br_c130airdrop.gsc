// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    scripts\cp_mp\utility\script_utility::registersharedfunc( "br_c130Airdrop", "c130Airdrop_onCrateUse", ::cypher_current_string );
    level.cypher_signal_strength_nag = [];
    level.cypher_vo_hack_progress = [];
    level.cyber_bot_pickup_emp = getdvarint( "scr_bmo_airdropCrateHeightOverride", 12000 );
}

cycle_thrust_fx()
{
    level endon( "game_ended" );
    var_0 = 1;
    level waittill( "br_prematchEnded" );

    for (;;)
    {
        var_1 = getdvarint( "scr_dmz_airdrop_active", 1 );

        if ( !var_1 )
        {
            waitframe();
            continue;
        }

        var_2 = getdvarint( "scr_dmz_airdrop_max_c130_spawns", 3 );
        var_3 = getdvarint( "scr_dmz_airdrop_max_crates", 12 );
        var_4 = getdvarint( "scr_dmz_airdrop_spawn_cooldown_min", 240 );
        var_5 = getdvarint( "scr_dmz_airdrop_spawn_cooldown_max", 360 );
        var_6 = randomintrange( var_4, var_5 );

        if ( istrue( level._id_12B8A ) && istrue( var_0 ) )
            scripts\mp\flags::gameflagwait( "activate_cash_drops" );
        else
            wait( var_6 );

        if ( isdefined( level.br_level ) )
            level.br_level.c130_speedoverride = 3044;

        var_7 = level.cypher_vo_hack_progress.size;

        if ( var_7 < var_3 )
        {
            var_8 = getdvarint( "scr_dmz_airdrop_num_crates_per", 3 );
            var_9 = var_3 - var_7;

            if ( !istrue( var_0 ) )
                var_2 = 1;

            var_10 = min( var_2, ceil( var_9 / var_8 ) );
            var_11 = var_9;

            for ( var_12 = 0; var_12 < var_10; var_12++ )
            {
                var_13 = min( var_8, var_11 );
                var_11 = var_11 - var_13;
                var_14 = custom_putongroundfunc( var_12 );
                var_15 = distance( var_14.startpt, var_14.endpt );
                var_16 = scripts\mp\gametypes\br_c130.gsc::getc130speed();
                var_17 = var_15 / var_16;
                var_18 = cypher_iconid( var_14, var_15, var_16, var_17 );

                if ( var_12 == 0 )
                    scripts\mp\gametypes\br_gametype_dmz.gsc::_id_1205D( "br_c130airdrop_incoming" );

                var_18 cypher_id_pool( var_13 );

                if ( istrue( level._id_12B8A ) )
                    wait( randomintrange( 4, 8 ) );
            }

            if ( istrue( var_0 ) )
                var_0 = 0;
        }
    }
}

custom_putongroundfunc( var_0, var_1, var_2 )
{
    if ( isdefined( level.br_level.br_mapcenter ) && isdefined( level.br_level.br_mapsize ) )
        var_3 = custom_shouldtakedamage( var_0, var_1, var_2 );
    else
        var_3 = scripts\mp\gametypes\br_c130.gsc::spawnc130pathstruct( var_1 );

    return var_3;
}

custom_shouldtakedamage( var_0, var_1, var_2 )
{
    var_3 = undefined;
    var_4 = level.br_level.br_mapcenter;

    if ( isdefined( var_1 ) )
        var_4 = var_1;

    var_5 = scripts\mp\gametypes\br_c130.gsc::method_for_calling_reinforcemen();
    var_6 = ( 0, randomfloat( 360 ), 0 );

    if ( !isdefined( var_0 ) || var_0 == 0 )
    {
        if ( !istrue( var_2 ) )
        {
            var_7 = cutscenedone();
            var_8 = customusefunc( var_7 );
            var_6 = vectortoangles( var_4 - var_8 * ( 1, 1, 0 ) );
            level.cypher_vo_complete = var_6;
        }

        var_4 = var_4 + ( 0, 0, scripts\cp_mp\parachute::lootleadermarkweakvalue() );
    }
    else
    {
        if ( isdefined( level.cypher_vo_complete ) )
        {
            var_6 = level.cypher_vo_complete;
            var_9 = 1;

            if ( var_0 == 2 )
                var_9 = -1;

            var_10 = anglestoright( var_6 ) * ( var_5 * var_9 );
            var_11 = randomint( 2 );
            var_12 = randomfloat( 360 );
            var_6 = ( 0, var_12, 0 );
            var_6 = scripts\engine\utility::ter_op( var_11, var_6, var_6 + ( 0, 180, 0 ) );
        }
        else
        {
            var_12 = randomfloat( 360 );
            var_10 = anglestoforward( ( 0, var_12, 0 ) );
            var_10 = var_10 * ( var_5 * randomfloatrange( -1, 1 ) );
        }

        var_10 = var_10 + ( 0, 0, scripts\cp_mp\parachute::lootleadermarkweakvalue() );
        var_4 = var_4 + var_10;
    }

    var_3 = scripts\mp\gametypes\br_c130.gsc::_id_12290( var_4, var_6 );
    return var_3;
}

cutscenedone()
{
    var_0 = undefined;
    var_1 = scripts\mp\gamescore::modeaddtoteamlives();
    var_2 = [];

    foreach ( var_4 in level.teamnamelist )
    {
        var_5 = scripts\mp\utility\teams::getteamdata( var_4, "players" );

        if ( var_5.size > 0 )
        {
            var_6 = 0;

            foreach ( var_8 in var_5 )
            {
                if ( !isdefined( var_8 ) )
                    continue;

                if ( scripts\mp\utility\player::isreallyalive( var_8 ) )
                {
                    var_6 = 1;
                    break;
                }
            }

            if ( !istrue( var_6 ) )
                continue;

            var_10 = var_1[var_4];

            if ( !isdefined( var_0 ) || var_10 >= var_0 )
            {
                var_0 = var_10;
                var_11 = var_2.size;
                var_2[var_11] = spawnstruct();
                var_2[var_11].team = var_4;
                var_2[var_11].players = var_5;
            }
        }
    }

    if ( var_2.size > 0 )
    {
        var_11 = 0;

        if ( var_2.size > 1 )
            var_11 = randomint( var_2.size );

        return var_2[var_11];
    }

    return;
}

customusefunc( var_0 )
{
    if ( !isdefined( var_0.players ) )
        return ( randomfloatrange( -1000, 1000 ), 0, 0 );

    var_1 = ( 0, 0, 0 );
    var_2 = 3000;
    var_3 = 1;

    foreach ( var_5 in var_0.players )
    {
        if ( !scripts\mp\utility\player::isreallyalive( var_5 ) )
            continue;

        var_1 = var_5.origin;

        foreach ( var_7 in var_0.players )
        {
            if ( var_7 == var_5 )
                continue;

            if ( !scripts\mp\utility\player::isreallyalive( var_7 ) )
                continue;

            if ( distance2dsquared( var_5.origin, var_7.origin ) <= var_2 * var_2 )
            {
                var_3++;
                var_1 = var_1 + var_7.origin;
                break;
            }
        }

        if ( var_3 >= 2 )
            break;
    }

    var_10 = var_1 / var_3;
    return var_10;
}

cypher_iconid( var_0, var_1, var_2, var_3 )
{
    var_4 = spawn( "script_model", var_0.startpt );
    var_4 setmodel( "veh8_mil_air_acharlie130_magma_animated" );
    var_4 setcandamage( 0 );
    var_4.maxhealth = 100000;
    var_4.health = var_4.maxhealth;
    var_4.startpt = var_0.startpt;
    var_4.endpt = var_0.endpt;
    var_4.centerpt = var_0.centerpt;
    var_4.dir = vectornormalize( var_4.endpt - var_4.startpt );
    var_4.angles = vectortoangles( var_4.dir );
    var_4.technical_initomnvars = var_1;
    var_4.speed = var_2;
    var_4.lifetime = var_3;
    var_4.disable_longdeath_post_stealth = spawn( "script_model", var_4.startpt );
    var_4.disable_longdeath_post_stealth setmodel( "veh8_mil_air_acharlie130_magma_rigid" );
    var_4.disable_longdeath_post_stealth linkto( var_4, "", ( 0, 0, 0 ), ( 0, 0, 0 ) );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "createObjective" ) )
    {
        var_5 = var_4 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "createObjective" ) ]]( "icon_minimap_dropship", undefined, undefined, 1, 1 );
        var_4.minimapid = var_5;
    }

    level.cypher_signal_strength_nag[level.cypher_signal_strength_nag.size] = var_4;
    return var_4;
}

cypher_id_pool( var_0, var_1, var_2, var_3 )
{
    self setscriptablepartstate( "audio_lp_dmz", "on", 0 );
    self moveto( self.endpt, self.lifetime );
    thread custompassengerwaitfunc();
    thread customspeed( var_0, var_1, var_2, var_3 );
}

custompassengerwaitfunc()
{
    self endon( "death" );
    level endon( "game_ended" );
    wait( self.lifetime - 1 );
    var_0 = spawn( "script_model", self.origin );
    var_0 setmodel( "veh8_mil_air_acharlie130_magma_scriptable" );
    var_0 setscriptablepartstate( "audio_exit_dmz", "on", 0 );
    var_0 thread scripts\mp\utility\script::delayentdelete( 10 );
    wait 1;
    level.cypher_signal_strength_nag = scripts\engine\utility::array_remove( level.cypher_signal_strength_nag, self );
    self setscriptablepartstate( "audio_lp_dmz", "off", 0 );

    if ( isdefined( self.minimapid ) )
        scripts\mp\objidpoolmanager::returnobjectiveid( self.minimapid );

    if ( isdefined( self.disable_longdeath_post_stealth ) )
        self.disable_longdeath_post_stealth delete();

    if ( isdefined( self ) )
        self delete();
}

customspeed( var_0, var_1, var_2, var_3 )
{
    self endon( "death" );

    if ( isdefined( self.heli_starts_addstart ) )
        self [[ self.heli_starts_addstart ]]( var_0, var_1, var_2, var_3 );
    else
    {
        var_4 = self.lifetime;
        var_5 = var_4 * 0.4;
        var_6 = var_4 - var_5;
        var_7 = var_5 / 2;
        var_8 = var_6 / max( 1, var_0 - 1 );
        var_9 = 1;
        var_10 = 0;
        var_11 = var_7;
        var_12 = 0;

        while ( var_12 < var_0 )
        {
            if ( !istrue( var_9 ) )
                var_11 = var_8;

            if ( istrue( var_10 ) )
            {
                var_11 = var_8 / 3;
                var_10 = 0;
            }

            wait( var_11 );

            if ( istrue( var_9 ) )
                var_9 = 0;

            var_13 = customturret( self.origin + anglestoforward( self.angles ) * 500 );

            if ( !isdefined( var_13 ) )
            {
                var_10 = 1;
                continue;
            }

            var_14 = scripts\cp_mp\killstreaks\airdrop::heli_convertforplayerfunc( var_13 + ( 0, 0, level.cyber_bot_pickup_emp - 100 ), var_13, self.angles, var_1, var_2 );

            if ( !isdefined( var_14 ) )
            {
                var_10 = 1;
                continue;
            }

            var_12++;
            var_15 = scripts\cp_mp\killstreaks\airdrop::gettriggerobject( var_14 );
            var_15._id_12B9F = 5;
            level.cypher_vo_hack_progress[level.cypher_vo_hack_progress.size] = var_14;
        }
    }
}

customturret( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = var_0 - ( 0, 0, 20000 );
    var_4 = [ self, self.disable_longdeath_post_stealth ];
    var_5 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 0, 1, 1, 1 );
    var_6 = scripts\engine\trace::ray_trace( var_0, var_3, var_4, var_5 );

    if ( isdefined( var_6 ) && var_6["hittype"] != "hittype_none" )
        var_2 = var_6["position"];

    if ( isdefined( var_2 ) && !istrue( var_1 ) )
    {
        var_7 = scripts\mp\gametypes\br_c130.gsc::ispointinbounds( var_2, 1, 0 ) && !cyberteamspawnsetids( var_2 );

        if ( !istrue( var_7 ) )
            var_2 = undefined;
    }

    return var_2;
}

cyberteamspawnsetids( var_0 )
{
    var_1 = 0;
    var_2 = level.cypher_vo_hack_progress;
    var_3 = getdvarint( "scr_dmz_airdrop_min_dist", 10000 );
    var_4 = var_3 * var_3;

    foreach ( var_6 in var_2 )
    {
        if ( distance2dsquared( var_0, var_6.origin ) < var_4 )
        {
            var_1 = 1;
            break;
        }
    }

    return var_1;
}

cypher_current_string( var_0 )
{
    var_1 = "mp/loot_set_airdrop_contents_dmz.csv";
    self.itemsdropped = 0;
    var_2 = [];

    if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
    {
        var_3 = scripts\mp\gametypes\br_lootcache.gsc::chooseandspawnitems( 0, 1, "killstreak", var_1 );
        var_2 = scripts\engine\utility::array_combine( var_2, var_3 );
    }

    var_3 = scripts\mp\gametypes\br_lootcache.gsc::chooseandspawnitems( 4, 1, "weapon", var_1 );
    var_2 = scripts\engine\utility::array_combine( var_2, var_3 );
    var_3 = scripts\mp\gametypes\br_lootcache.gsc::chooseandspawnitems( 0, 2, "health", var_1 );
    var_2 = scripts\engine\utility::array_combine( var_2, var_3 );
    var_3 = scripts\mp\gametypes\br_lootcache.gsc::chooseandspawnitems( 0, 2, "ammo", var_1 );
    var_2 = scripts\engine\utility::array_combine( var_2, var_3 );

    if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() && getdvarint( "scr_dmz_airdrop_drop_tablet", 0 ) == 1 )
    {
        var_3 = scripts\mp\gametypes\br_lootcache.gsc::chooseandspawnitems( 0, 1, "tablet", var_1 );
        var_2 = scripts\engine\utility::array_combine( var_2, var_3 );
    }

    var_4 = randomint( 3 );

    if ( var_4 == 2 )
    {
        var_3 = scripts\mp\gametypes\br_lootcache.gsc::chooseandspawnitems( 0, 1, "revive", var_1 );
        var_2 = scripts\engine\utility::array_combine( var_2, var_3 );
    }

    var_5 = 750;

    if ( isdefined( level.barelem ) )
        var_5 = level.barelem;

    if ( istrue( level.calloutmarkerpingvo_canplaywithspamavoidance ) )
        var_5 = int( var_5 * level.tank_watchpiggybackexploit );

    var_6 = scripts\mp\gametypes\br_pickups.gsc::playersetattractiontime();
    var_6.heli_lookat_monitor = self.itemsdropped;
    var_3 = scripts\mp\gametypes\br_plunder.gsc::dropplunderbyrarity( var_5, var_6 );
    var_2 = scripts\engine\utility::array_combine( var_2, var_3 );

    foreach ( var_8 in var_2 )
        var_8.selfrevivebuttonpressed = "c130_box";

    if ( !isdefined( var_0.select_bunker_courtyard_spawners ) )
        var_0.select_bunker_courtyard_spawners = 1;
    else
        var_0.select_bunker_courtyard_spawners++;

    var_0 scripts\mp\utility\stats::setextrascore1( var_0.select_bunker_courtyard_spawners );
    var_0 thread scripts\mp\utility\points::giveunifiedpoints( "br_c130_box_open" );
}
