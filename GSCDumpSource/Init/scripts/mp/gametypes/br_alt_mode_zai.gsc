// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level thread nuke_addteamrankxpmultiplier();

    if ( getdvarint( "scr_br_zombie_encounters", 0 ) < 1 )
        return;

    level._id_130BD = spawnstruct();
    level._id_130BD._id_13110 = getdvarint( "scr_br_zombie_plunder_on_death_amount_base", 1 );
    level._id_130BD._id_13111 = getdvarint( "scr_br_zombie_plunder_on_death_amount_emp", 2 );
    level._id_130BD._id_13112 = getdvarint( "scr_br_zombie_plunder_on_death_amount_explosion", 2 );
    level._id_130BD._id_13113 = getdvarint( "scr_br_zombie_plunder_on_death_amount_gas", 2 );
    level._id_130BD._id_13114 = getdvarint( "scr_br_zombie_plunder_on_death_amount_weakpoint", 3 );
    level._id_130BD._id_1310E = getdvarint( "scr_br_zombie_plunder_multiplier", 50 );
    level._id_130BD._id_12FFA = getdvarint( "scr_br_zombie_ai_week_number", 1 );
    level._id_130BD.train_minimap_icon_attach = getdvarfloat( "scr_br_zombie_ping_time", 0.5 );
    level._id_130BD.train_minimap_icon_detach = getdvarfloat( "scr_br_zombie_ping_wait_time", 2.5 );
    level._id_130BD.init_trans_1_obj = getdvarfloat( "scr_br_zombie_explosion_damage", 35 );
    level._id_130BD.init_trap_room = getdvarfloat( "scr_br_zombie_explosion_damage_vehicle_percent", 0.95 );
    level._id_130BD.hit = getdvarfloat( "scr_br_zombie_emp_radius", 275 );
    level._id_130BD.initlocs_nonmorsephones = 1;
    level._id_130BD._id_130ED = getdvarint( "scr_br_zombie_enable_variable_speed", 1 );
    level._id_130BD._id_130EC = getdvarint( "scr_br_zombie_enable_variable_health", 1 );
    level._id_130BD._id_130EB = getdvarint( "scr_br_zombie_enable_variable_damage", 1 );
    level._id_130BD.sentry_trap_structs = getdvarint( "scr_br_zombie_ai_damage_low", 15 );
    level._id_130BD.setup_player_marks = getdvarint( "scr_br_zombie_ai_damage_mid", 20 );
    level._id_130BD.packarenaomnvardata = getdvarint( "scr_br_zombie_ai_damage_high", 35 );
    level._id_130BD._id_130DB = getdvarfloat( "scr_br_zombie_ammo_on_death_chance", 0.4 );
    level._id_130BD._id_130DD = getdvarfloat( "scr_br_zombie_armor_on_death_chance", 0.25 );
    level._id_130BD._id_130DC = getdvarint( "scr_br_zombie_ai_armor_drop_amount", 1 );
    level._id_130BD.init_trap_room_spawning_module = getdvarfloat( "scr_br_zombie_ai_explosive_mod_damage_modifier", 5.0 );
    level._id_130BD._id_130FD = 0;
    level._id_130BD.set_relic_mythic = undefined;
    level._id_130BD.set_relic_martyrdom = undefined;

    switch ( level._id_130BD._id_12FFA )
    {
        case 2:
        case 1:
            level._id_130BD.set_relic_mythic = "shipwreck";
            level._id_130BD.set_relic_martyrdom = "ship_tac";
            break;
        case 3:
            level._id_130BD.set_relic_mythic = "prison";
            level._id_130BD.set_relic_martyrdom = "gulag_tac";
            break;
        case 4:
            level._id_130BD.set_relic_mythic = "hospital";
            level._id_130BD.set_relic_martyrdom = "hospital_tac";
            break;
        case 5:
            level._id_130BD.set_relic_mythic = "downtown";
            level._id_130BD.set_relic_martyrdom = "downtown_tac";
            break;
        case 6:
            level._id_130BD.set_relic_mythic = "tvstation";
            level._id_130BD.set_relic_martyrdom = "tvstation_tac";
            break;
        case 7:
            level._id_130BD.set_relic_mythic = "superstore";
            level._id_130BD.set_relic_martyrdom = "super_tac";
            break;
        case 8:
            level._id_130BD.set_relic_mythic = "dam";
            level._id_130BD.set_relic_martyrdom = "dam_tac";
            break;
    }

    level._id_130D6 = "gas_on_death";
    level._id_130D5 = "explosion_on_death";
    level._id_130D4 = "emp";
    level._id_130D8 = "weakpoint";
    level._id_130D3 = "base";
    level._effect["zmb_ai_crawling_out_of_ground"] = loadfx( "vfx/iw8_br/gameplay/zombie_ai/vfx_zai_spawn_ground.vfx" );
    level._effect["zmb_ai_crawling_out_of_vent"] = loadfx( "vfx/iw8_br/gameplay/zombie_ai/vfx_zai_spawn_vent.vfx" );
    level._effect["zmb_ai_base_death"] = loadfx( "vfx/iw8/weap/_impact/flesh/vfx_imp_flesh_fatal_med.vfx" );
    level._effect["zmb_ai_gas_death"] = loadfx( "vfx/iw8_br/gameplay/zombie_ai/vfx_zai_gas_death.vfx" );
    level._effect["zmb_ai_explosion_death"] = loadfx( "vfx/iw8_br/gameplay/zombie_ai/vfx_zai_explode_death.vfx" );
    level._effect["zmb_ai_emp_charge"] = loadfx( "vfx/iw8_br/gameplay/zombie_ai/vfx_zai_emp_amb_pulse_chargeup.vfx" );
    level._effect["zmb_ai_emp_pulse"] = loadfx( "vfx/iw8_br/gameplay/zombie_ai/vfx_zai_emp_amb_pulse.vfx" );
    level._effect["zmb_ai_emp_death"] = loadfx( "vfx/iw8_br/gameplay/zombie_ai/vfx_zai_emp_death.vfx" );
    level._effect["zmb_ai_weakpoint_death"] = loadfx( "vfx/iw8/weap/_impact/flesh/vfx_imp_flesh_fatal_med.vfx" );
    level.activeuavs["team_two_hundred"] = 0;
    level.activeadvanceduavs["team_two_hundred"] = 0;
    level.activecounteruavs["team_two_hundred"] = 0;
    thread stop_all_ascend_anims();
    thread extracthideiconfromplayer();
    thread _id_12903();
    thread _id_130E0();
    thread _id_130C2();
    thread chopperexfil_music_start();
    thread _id_130C4();
}

_id_130C4()
{
    level endon( "game_ended" );
    scripts\mp\flags::gameflagwait( "prematch_done" );

    if ( tableexists( "mp/map_callouts/mp_don3_callouts.csv" ) )
        var_0 = int( tablelookup( "mp/map_callouts/mp_don3_callouts.csv", 1, level._id_130BD.set_relic_martyrdom, 0 ) );
    else
        var_0 = -1;

    setomnvar( "ui_br_zm_marked_area", var_0 );
}

nuke_addteamrankxpmultiplier()
{
    wait 0.1;

    if ( getdvarint( "scr_br_zombie_encounters", 0 ) < 1 )
        is_dead();
    else
        is_dead( level._id_130EE );
}

is_dead( var_0 )
{
    if ( !isdefined( var_0 ) )
    {
        level thread _id_130BE();
        return;
    }

    switch ( var_0 )
    {
        case "br_zombies_zone1":
            break;
        case "br_zombies_zone7":
        case "br_zombies_zone6":
        case "br_zombies_zone_tvstation":
        case "br_zombies_zone5":
        case "br_zombies_zone4":
        case "br_zombies_zone3":
        default:
            level thread _id_130BE();
            break;
    }
}

stop_all_ascend_anims()
{
    for (;;)
        level waittill( "add_to_team", var_0 );
}

_id_13121( var_0 )
{
    level notify( "zai_round_over" );
    level._id_130E3 _id_12901();
    level._id_130E3 = undefined;
    _id_1313D();
    thread _id_13123( var_0 );
}

_id_13124()
{
    _id_13121();

    foreach ( var_1 in level._id_13125 )
    {
        if ( isalive( var_1 ) )
        {
            var_1.shutdown = 1;
            var_1 suicide();
        }
    }
}

_id_13122( var_0 )
{
    if ( getdvarint( "scr_br_zombie_ai_enable_drop_loot", 1 ) )
    {
        var_1 = scripts\mp\gametypes\br_pickups.gsc::playersetattractiontime();
        var_2 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_1, var_0.origin, var_0.angles, var_0 );
        scripts\mp\gametypes\br_pickups.gsc::spawnpickup( "brloot_access_card_green", var_2 );
    }

    var_3 = scripts\mp\utility\player::getplayersinradius( var_0.origin, 6000 );

    if ( level._id_130BD.initlocs_nonmorsephones == 1 )
    {
        foreach ( var_5 in var_3 )
            var_5 scripts\mp\hud_message::showsplash( "br_zai_round_over" );
    }
    else if ( level._id_130BD.initlocs_nonmorsephones == 2 )
    {
        foreach ( var_5 in var_3 )
            var_5 scripts\mp\hud_message::showsplash( "br_zai_round_over_multiple" );
    }

    level._id_130BD.initlocs_nonmorsephones = 0;
    _id_13121( 6 );

    switch ( level._id_130EE )
    {
        case "br_zombies_zone1":
            thread _id_130BF();

            if ( getdvarint( "scr_br_zombie_open_all_doors", 1 ) )
                thread _id_130BF();

            break;
        case "br_zombies_zone7":
        case "br_zombies_zone6":
        case "br_zombies_zone_tvstation":
        case "br_zombies_zone5":
        case "br_zombies_zone4":
        case "br_zombies_zone3":
        default:
            break;
    }
}

_id_13123( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        level endon( "game_ended" );
        level endon( "zai_computer_used" );
        wait( var_0 );
    }

    foreach ( var_2 in level.players )
    {
        var_2.publiceventsmanager = 0;
        var_2 vehicle_collision_handleevent( level._id_130BD._id_130FD );
    }
}

_id_130F0()
{
    level endon( "game_ended" );
    level endon( "zai_computer_used" );

    for (;;)
    {
        if ( getdvarint( "scr_br_zai_force_round_over", 0 ) )
        {
            var_0 = level.player;

            foreach ( var_2 in level._id_13125 )
            {
                if ( isalive( var_2 ) )
                {
                    var_0 = var_2;
                    break;
                }
            }

            setdvar( "scr_br_zai_force_round_over", 0 );
            _id_13122( var_0 );
        }

        wait 2;
    }
}

_id_1313B( var_0 )
{
    var_1 = self;

    if ( !isdefined( var_1._id_13139 ) )
        var_1._id_13139 = "base";

    var_2 = level._id_130BD._id_13110;

    switch ( var_1._id_13139 )
    {
        case "gas_on_death":
            thread scripts\mp\equipment\gas_grenade::gas_createtrigger( self.origin, undefined, 5.5, 0.5 );
            playfx( level._effect["zmb_ai_gas_death"], var_1 gettagorigin( "j_spineupper" ) );
            var_2 = level._id_130BD._id_13113;
            break;
        case "explosion_on_death":
            playfx( level._effect["zmb_ai_explosion_death"], var_1 gettagorigin( "j_spineupper" ) );
            var_3 = scripts\mp\utility\player::getplayersinradius( var_1.origin, 200 );

            foreach ( var_5 in var_3 )
            {
                if ( var_5 scripts\cp_mp\utility\player_utility::isinvehicle() )
                {
                    if ( var_5.vehicle.health > var_5.vehicle.maxhealth * 0.05 )
                    {
                        var_6 = var_5.vehicle.maxhealth * level._id_130BD.init_trap_room;
                        var_5.vehicle dodamage( var_6, var_5.vehicle.origin, undefined, undefined, "MOD_TRIGGER_HURT", "danger_circle_br" );
                    }
                }

                if ( var_5 scripts\mp\utility\perk::_hasperk( "specialty_br_eod" ) )
                    var_5 dodamage( int( level._id_130BD.init_trans_1_obj * 0.85 ), var_1.origin, var_1, var_5, "MOD_EXPLOSIVE" );
                else
                    var_5 dodamage( level._id_130BD.init_trans_1_obj, var_1.origin, var_1, var_5, "MOD_EXPLOSIVE" );

                var_5 earthquakeforplayer( 0.35, 0.9, self.origin, 200 );
            }

            var_2 = level._id_130BD._id_13112;
            break;
        case "emp":
            playfx( level._effect["zmb_ai_emp_death"], var_1 gettagorigin( "j_spine4" ) );
            var_2 = level._id_130BD._id_13111;
            break;
        case "weakpoint":
            playfx( level._effect["zmb_ai_weakpoint_death"], var_1 gettagorigin( "j_spineupper" ) );
            var_2 = level._id_130BD._id_13114;
            break;
        default:
            playfx( level._effect["zmb_ai_base_death"], var_1 gettagorigin( "j_spineupper" ) );
            var_2 = level._id_130BD._id_13110;
            break;
    }

    var_8 = scripts\mp\gametypes\br_pickups.gsc::playersetattractiontime();

    if ( var_2 > 0 )
    {
        if ( scripts\mp\utility\game::missions_clearinappropriaterewards() == "dmz" )
            var_2 = var_2 * level._id_130BD._id_1310E;

        scripts\mp\gametypes\br_plunder.gsc::heli_leaving_monitor( var_2, var_8 );
    }

    if ( isalive( var_0 ) && isplayer( var_0 ) && randomfloat( 1.0 ) < level._id_130BD._id_130DB )
    {
        var_9 = var_0 getcurrentprimaryweapon();
        var_10 = scripts\mp\gametypes\br_weapons.gsc::br_ammo_type_for_weapon( var_9 );

        if ( !isdefined( var_10 ) )
            return;

        foreach ( var_12 in level.br_ammo_types )
            var_1.br_ammo[var_12] = 0;

        var_1.br_ammo[var_10] = level.br_ammo_clipsize[var_10];
        var_1 scripts\mp\gametypes\br_pickups.gsc::heli_check_player_below_starts( var_8 );
    }

    if ( isalive( var_0 ) && isplayer( var_0 ) && randomfloat( 1.0 ) < level._id_130BD._id_130DD )
    {
        var_14 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_8, var_1.origin, var_1.angles, var_1 );
        scripts\mp\gametypes\br_pickups.gsc::spawnpickup( "brloot_armor_plate", var_14, level._id_130BD._id_130DC, 1 );
    }
}

_id_1313D()
{
    level._id_13126 = 0;

    if ( isdefined( level._id_130BD ) )
        level._id_130BD._id_130FD = 0;

    level.chopperexfil_set_brcircle = getdvarint( "scr_br_zombie_num", -1 );
    level.chopperexfil_sh020_start = getdvarint( "scr_br_zombie_total_num_type_gas", -1 );
    level.chopperexfil_sh010_start = getdvarint( "scr_br_zombie_total_num_type_explosion", -1 );
    level.chopperexfil_sfx_before_sh070 = getdvarint( "scr_br_zombie_total_num_type_emp", -1 );
    level.chopperexfil_sh030_start = getdvarint( "scr_br_zombie_total_num_type_weakpoint", -1 );
}

_id_1310A()
{
    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "terminate_ai_threads" );
    var_0 endon( "death" );

    for (;;)
    {
        var_0 setperk( "specialty_radarblip", 1 );
        wait( level._id_130BD.train_minimap_icon_attach );
        var_0 unsetperk( "specialty_radarblip", 1 );
        wait( level._id_130BD.train_minimap_icon_detach );
    }
}

_id_1312B( var_0 )
{
    var_1 = self;

    if ( !level._id_130BD._id_130ED )
        return;

    if ( !isdefined( var_1._id_11EC3 ) || !isdefined( var_1._id_11EF5 ) )
        return;

    var_2 = randomfloat( 2.0 );

    if ( var_0 == level._id_130D6 || var_0 == level._id_130D5 )
    {
        var_1 [[ var_1._id_11EC3 ]]( "sprint" );
        var_2 = randomfloat( 1.0 );
    }
    else if ( var_0 == level._id_130D4 || var_0 == level._id_130D3 )
        var_1 [[ var_1._id_11EC3 ]]( "run" );
    else if ( var_0 == level._id_130D8 )
        var_1 [[ var_1._id_11EC3 ]]( "walk" );

    var_1 [[ var_1._id_11EF5 ]]( var_2 );
}

_id_13129( var_0 )
{
    var_1 = self;

    if ( !level._id_130BD._id_130EC )
        return;

    if ( var_0 == level._id_130D6 || var_0 == level._id_130D5 )
        var_1.health = 120;
}

_id_1312A( var_0 )
{
    var_1 = self;

    if ( !level._id_130BD._id_130EB )
        return;

    if ( var_0 == level._id_130D8 )
        var_1.setup_backup_respawn_points_in_verdansk = level._id_130BD.packarenaomnvardata;
    else if ( var_0 == level._id_130D3 )
        var_1.setup_backup_respawn_points_in_verdansk = level._id_130BD.setup_player_marks;
    else if ( var_0 == level._id_130D4 || var_0 == level._id_130D6 || var_0 == level._id_130D5 )
        var_1.setup_backup_respawn_points_in_verdansk = level._id_130BD.sentry_trap_structs;
}

_id_130E5( var_0, var_1, var_2, var_3 )
{
    var_4 = self;

    if ( isdefined( var_4._id_13139 ) && isdefined( var_0 ) && isdefined( var_1 ) )
    {
        if ( istrue( var_3 ) )
        {
            if ( isdefined( var_2 ) && var_2 == "head" )
                var_1 thread scripts\mp\damagefeedback::updatedamagefeedback( "hitzombieheadshot", var_0 >= self.health, 1, "hitzombieheadshot" );
            else
                var_1 thread scripts\mp\damagefeedback::updatedamagefeedback( "hitzombieheadshot", var_0 >= self.health, 0, "hitzombieheadshot" );
        }
        else if ( var_4._id_13139 == level._id_130D8 )
        {
            if ( isdefined( var_2 ) && var_2 == "head" )
                var_1 thread scripts\mp\damagefeedback::updatedamagefeedback( "hitarmorheavy", var_0 >= self.health, 1 );
            else
                var_1 thread scripts\mp\damagefeedback::updatedamagefeedback( "hitarmorheavy", var_0 >= self.health );
        }
        else if ( isdefined( var_2 ) && var_2 == "head" )
            var_1 thread scripts\mp\damagefeedback::updatedamagefeedback( "standard", var_0 >= self.health, 1 );
        else
            var_1 thread scripts\mp\damagefeedback::updatedamagefeedback( "standard", var_0 >= self.health );
    }
}

_id_130C2()
{
    waittillframeend;
    level._id_130BD.has_access_card = _id_130C1();

    foreach ( var_1 in level._id_130BD.has_access_card )
    {
        if ( isdefined( var_1.targetname ) )
        {
            if ( var_1.targetname == level._id_130EE )
                continue;
        }

        var_1 delete();
    }

    if ( level.mapname == "mp_don3" && getdvarint( "scr_br_don3_ship_path_fix", 0 ) )
    {
        var_3 = getdvarvector( "scr_br_don3_ship_path_fix_side_a", ( 39256, -42265, -506 ) );
        var_4 = getdvarvector( "scr_br_don3_ship_path_fix_side_b", ( 39348, -42251, -508 ) );
        var_5 = ( 0, vectortoyaw( var_4 - var_3 ), 0 );
        var_6 = spawncovernode( var_3, var_5, "Begin", 0, undefined, undefined, "zombie" );
        createnavlink( "zombie_hack", var_3, var_4, var_6 );
        var_5 = ( 0, vectortoyaw( var_3 - var_4 ), 0 );
        var_6 = spawncovernode( var_4, var_5, "Begin", 0, undefined, undefined, "zombie" );
        createnavlink( "zombie_hack", var_4, var_3, var_6 );
    }

    if ( level.mapname == "mp_don3" )
    {
        if ( getdvarint( "scr_br_zombie_open_all_doors_at_start", 1 ) )
            _id_130BF();
        else
        {
            var_7 = getdvarfloat( "scr_br_don3_ship_door_obstacle_size", 0.0 );

            if ( var_7 > 0.0 )
            {
                if ( level._id_130EE == "br_zombies_zone1" || level._id_130EE == "br_zombies_zone1" )
                {
                    var_8 = _id_130C1( "boat_doors_round1" );

                    foreach ( var_10 in var_8 )
                    {
                        var_11 = anglestoforward( var_10.angles ) * 26.0;
                        var_10.startdeadsilence = createnavbadplacebyshape( var_10.origin + var_11, 6, var_7, 20 );
                    }
                }
            }
        }
    }
}

_id_130C1( var_0 )
{
    var_1 = getentarray( level._id_130EE, "targetname" );

    if ( !isdefined( var_0 ) )
        return var_1;

    if ( !var_1.size )
        return undefined;

    var_2 = [];

    foreach ( var_4 in var_1 )
    {
        if ( isdefined( var_4.script_noteworthy ) && var_4.script_noteworthy == var_0 )
            var_2[var_2.size] = var_4;
    }

    return var_2;
}

_id_130C3( var_0 )
{
    if ( isdefined( var_0.script_linkto ) )
    {
        if ( isdefined( var_0.startdeadsilence ) )
            destroynavobstacle( var_0.startdeadsilence );

        var_0 setscriptablepartstate( "br_zai_door", "open" );
        var_0 moveto( scripts\engine\utility::getstruct( var_0.script_linkto, "script_linkname" ).origin, 2.5, 0.5, 0.5 );
    }
}

vehicle_collision_handleevent( var_0 )
{
    var_1 = self;

    if ( !isdefined( var_1.publiceventsmanager ) )
        var_1.publiceventsmanager = 0;

    var_2 = _id_130C0( var_1.publiceventsmanager, level._id_130BD.initlocs_nonmorsephones, var_0 );
    var_1 setclientomnvar( "ui_br_zai_counter", var_2 );
}

_id_130C0( var_0, var_1, var_2 )
{
    var_3 = int( var_0 ) & 1;
    var_3 = var_3 + ( ( int( var_1 ) & 3 ) << 1 );
    var_3 = var_3 + ( ( int( var_2 ) & 63 ) << 3 );
    return var_3;
}

useautorespawn( var_0 )
{
    level endon( "game_ended" );
    level endon( "zai_round_over" );

    for (;;)
    {
        var_1 = scripts\mp\utility\player::getplayersinradius( var_0, 6000 );

        foreach ( var_3 in level.players )
        {
            if ( !isalive( var_3 ) || var_3 scripts\mp\gametypes\br_public.gsc::isplayeringulag() )
                continue;

            if ( scripts\engine\utility::array_contains( var_1, var_3 ) )
            {
                if ( !istrue( var_3.publiceventsmanager ) )
                    var_3 unrescuable_fail();

                var_3.publiceventsmanager = 1;
            }

            var_3 vehicle_collision_handleevent( level._id_130BD._id_130FD );
        }

        wait 3;
    }
}

unrescuable_fail()
{
    var_0 = self;

    if ( level._id_130BD.initlocs_nonmorsephones == 1 )
        var_0 scripts\mp\hud_message::showsplash( "br_zai_entering_active_area" );
    else if ( level._id_130BD.initlocs_nonmorsephones == 2 )
        var_0 scripts\mp\hud_message::showsplash( "br_zai_entering_active_area_multiple" );
}

_id_130E9()
{
    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "death" );
    var_0 endon( "terminate_ai_threads" );

    for (;;)
    {
        var_1 = randomint( 5 );
        wait( 5 + var_1 - 2 );
        playfxontag( level._effect["zmb_ai_emp_charge"], var_0, "j_spine4" );
        wait 2;
        var_0 _id_130EA();
    }
}

_id_130EA()
{
    var_0 = 60;
    var_1 = 1;
    var_2 = 64;
    var_3 = var_2 * var_2;
    var_4 = level._id_130BD.hit * level._id_130BD.hit;
    var_5 = "zxp_emp_fire_plr";
    var_6 = self;
    var_7 = anglestoforward( var_6.angles );
    playfx( level._effect["zmb_ai_emp_pulse"], var_6 gettagorigin( "j_spineupper" ), var_7 );
    var_8 = getcompleteweaponname( "emp_drone_non_player_mp" );
    var_9 = getcompleteweaponname( "emp_drone_non_player_direct_mp" );
    var_10 = scripts\cp_mp\emp_debuff::get_emp_ents();

    foreach ( var_12 in var_10 )
    {
        var_13 = var_12.owner;

        if ( isdefined( var_13 ) )
        {
            if ( var_13 != var_6 && !scripts\cp_mp\utility\player_utility::playersareenemies( var_6, var_13 ) )
                continue;
        }

        var_14 = distancesquared( var_6.origin, var_12.origin );

        if ( var_14 > var_4 )
            continue;

        var_15 = scripts\engine\utility::ter_op( var_14 > var_3, var_8, var_9 );
        var_12 dodamage( 1, var_6.origin, var_6, var_6, "MOD_EXPLOSIVE", var_15 );
        var_16 = scripts\cp_mp\utility\damage_utility::packdamagedata( var_6, var_12, 1, var_15, "MOD_EXPLOSIVE", var_6, var_6.origin );
        thread vehicle_compass_instanceisregistered( var_16 );
    }

    var_18 = getcompleteweaponname( "emp_drone_player_mp" );
    var_19 = undefined;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "getPlayersInRadius" ) )
        var_19 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "getPlayersInRadius" ) ]]( var_6.origin, level._id_130BD.hit );

    foreach ( var_21 in var_19 )
    {
        if ( !var_21 scripts\cp_mp\emp_debuff::can_emp_player() )
            continue;

        if ( var_21 != var_6 && !scripts\cp_mp\utility\player_utility::playersareenemies( var_6, var_21 ) )
            continue;

        var_21 dodamage( 1, var_6.origin, var_6, var_6, "MOD_EXPLOSIVE", var_18 );
        var_21 earthquakeforplayer( 0.2, 0.7, self.origin, level._id_130BD.hit );
        var_16 = scripts\cp_mp\utility\damage_utility::packdamagedata( var_6, var_21, 1, var_18, "MOD_EXPLOSIVE", var_6, var_6.origin );
        thread vehicle_compass_instanceisregistered( var_16 );
    }
}

vehicle_compass_instanceisregistered( var_0 )
{
    var_1 = 5;
    var_2 = 2;
    scripts\cp_mp\emp_debuff::apply_emp_struct( var_0 );
    var_3 = var_1;

    if ( isplayer( var_0.victim ) )
    {
        var_0.victim.propminigamesetting = 1;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "perk", "hasPerk" ) )
        {
            if ( var_0.victim != self && var_0.victim [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "perk", "hasPerk" ) ]]( "specialty_emp_resist" ) )
            {
                var_3 = var_2;

                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "damage", "updateDamageFeedback" ) )
                    self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "damage", "updateDamageFeedback" ) ]]( "hittacresist" );
            }
        }
    }

    his_removequestinstance( var_0, var_3 );

    if ( isdefined( var_0.victim ) )
    {
        var_0.victim.propminigamesetting = undefined;
        var_0.victim scripts\cp_mp\emp_debuff::remove_emp();
    }
}

his_removequestinstance( var_0, var_1 )
{
    var_0.victim endon( "death_or_disconnect" );
    level endon( "game_ended" );
    var_2 = scripts\engine\utility::waittill_notify_or_timeout_return( "emp_cleared", var_1 );

    if ( var_2 != "emp_cleared" )
        var_0.empremoved = 1;
}

extracthideiconfromplayer()
{
    level._id_130CC = spawnstruct();
    level._id_130CC._id_11CC2 = [ "off", "offline", "low", "medium", "high", "critical" ];
    level._id_130CC._id_12B45 = [ "disabled", "enabled" ];
    level._id_130CC._id_11CC5 = getdvarfloat( "scr_br_zombie_con_comp_screen_update_time", 10.0 );
    level._id_130CC._id_1202C = getdvarint( "scr_br_zombie_con_comp_show_disabled_hint", 1 );
    waittillframeend;
    level._id_130CC.exposed_to_chopper_boss_time = getentitylessscriptablearrayinradius( "scriptable_containment_computer_01_screen_scripted", "classname" );
    scripts\engine\scriptable::_id_11CDB( "containment_computer_usable", ::extraction_helicoptor_num_completed );
    var_0 = getdvarint( "scr_br_zombie_con_comp_screen_prematch", 0 );
    var_1 = getdvarint( "scr_br_zombie_con_comp_usable_prematch", 0 );
    extraction_balloon_num_completed( var_0, var_1 );

    if ( !getdvarint( "scr_br_enable_zai_button_in_prematch", 0 ) )
        scripts\mp\flags::gameflagwait( "prematch_done" );

    var_0 = getdvarint( "scr_br_zombie_con_comp_screen", 2 );
    var_1 = getdvarint( "scr_br_zombie_con_comp_usable", 0 );
    extraction_balloon_num_completed( var_0, var_1 );
}

extraction_balloon_num_completed( var_0, var_1 )
{
    level._id_130CC._id_11CC3 = var_0;

    foreach ( var_3 in level._id_130CC.exposed_to_chopper_boss_time )
    {
        var_3 notify( "containmentComputersScreenRestore" );
        extractingplayers( var_3, var_0, var_1 );
    }
}

extractingplayers( var_0, var_1, var_2 )
{
    var_0._id_11CC4 = var_1;
    var_3 = level._id_130CC._id_11CC2[var_1];
    var_0 setscriptablepartstate( "containment_computer_screen", var_3 );

    if ( isdefined( var_2 ) )
    {
        var_0._id_12B46 = var_2;
        var_4 = level._id_130CC._id_12B45[var_2];
        var_0 setscriptablepartstate( "containment_computer_usable", var_4 );

        if ( level._id_130CC._id_1202C )
            var_0 setscriptablepartstate( "containment_computer_not_usable", var_4 );
    }
}

extraction_helicoptor_num_completed( var_0, var_1, var_2, var_3, var_4 )
{
    if ( isdefined( level.br_circle ) )
        var_5 = 2;
    else
        var_5 = 3;

    var_3 setclientomnvar( "ui_br_purchase_file_override", var_5 );
    var_3 thread scripts\mp\gametypes\br_armory_kiosk.gsc::_runpurchasemenu( var_0, 1 );
    var_3 waittill( "purchase_menu_closed", var_6 );

    if ( var_6 == 1 )
        extracthelipadwatchforhelileaving( var_0 );
}

extracthelipadusecallback( var_0 )
{
    var_1 = level.teamdata[var_0]["players"];

    foreach ( var_3 in var_1 )
        extractgroundpos( var_3 );
}

extractgroundpos( var_0 )
{
    if ( !isdefined( var_0.checkshouldplaymusic ) )
        return;

    if ( var_0.checkshouldplaymusic.classname != "scriptable_containment_computer_01_screen_scripted" )
        return;

    var_0 notify( "force_exit" );
}

extracthelipadwatchforhelileaving( var_0 )
{
    if ( var_0._id_11CC4 <= 1 )
        return;

    extractingplayers( var_0, var_0._id_11CC4 - 1 );
    extracting( var_0 );
}

extracting( var_0 )
{
    var_0 notify( "containmentComputersScreenRestore" );
    var_0 endon( "containmentComputersScreenRestore" );

    while ( var_0._id_11CC4 < level._id_130CC._id_11CC3 )
    {
        wait( level._id_130CC._id_11CC5 );
        extractingplayers( var_0, var_0._id_11CC4 + 1 );
    }
}

extraction_balloon_total_plunder( var_0 )
{
    var_1 = var_0 scripts\mp\gametypes\br_public.gsc::obj_a_behavior( "brloot_access_card_green" );

    foreach ( var_3 in level._id_130CC.exposed_to_chopper_boss_time )
    {
        if ( var_1 )
        {
            var_3 enablescriptablepartplayeruse( "containment_computer_usable", var_0 );
            var_3 disablescriptablepartplayeruse( "containment_computer_not_usable", var_0 );
            continue;
        }

        var_3 disablescriptablepartplayeruse( "containment_computer_usable", var_0 );
        var_3 enablescriptablepartplayeruse( "containment_computer_not_usable", var_0 );
    }
}

stompeenemyprogressupdate( var_0 )
{
    var_1 = self;

    if ( !isdefined( level._id_130BD ) )
        return;

    if ( !isdefined( var_0 ) )
        return;

    if ( var_0 == "brloot_access_card_green" )
    {
        var_2 = 225000000;

        for ( var_3 = 0; var_3 < level._id_130BD.damageendtime.size; var_3++ )
        {
            if ( distancesquared( level._id_130BD.damagefactorhigh[var_3].origin, var_1.origin ) < var_2 )
            {
                scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( level._id_130BD.damageendtime[var_3], var_1 );
                return;
            }
        }
    }
}

suicideandskydive( var_0 )
{
    if ( !isdefined( level._id_130BD ) )
        return;

    if ( !isdefined( var_0 ) )
        return;

    if ( var_0 == "brloot_access_card_green" )
    {
        foreach ( var_2 in level._id_130BD.damageendtime )
            scripts\mp\objidpoolmanager::objective_playermask_hidefrom( var_2, self );
    }
}

_id_12903()
{
    var_0 = getentitylessscriptablearrayinradius( "scriptable_scriptable_test_victor_event_button", "classname" );

    if ( !getdvarint( "scr_br_enable_zai_button_in_prematch", 0 ) )
        scripts\mp\flags::gameflagwait( "prematch_fade_done" );

    wait 4;

    foreach ( var_2 in var_0 )
    {
        if ( var_2.targetname == level._id_130EE )
        {
            var_2 setscriptablepartstate( "button", "usable" );
            var_3 = anglestoforward( var_2.angles );
            var_2._id_11CC1 = easepower( "scriptable_test_victor_event_button_screen", var_2.origin + var_3, var_2.angles );
            var_2 _id_12901();
        }
    }
}

_id_12901()
{
    if ( isdefined( self._id_11CC1 ) )
        self._id_11CC1 setscriptablepartstate( "screen", "green" );
}

_id_12900()
{
    if ( isdefined( self._id_11CC1 ) )
        self._id_11CC1 setscriptablepartstate( "screen", "red_100" );
}

_id_130E0()
{
    level._id_130BD.damagefactor = scripts\engine\utility::getstructarray( "zombie_cache_loc", "targetname" );

    switch ( level.script )
    {
        case "mp_br_mechanics":
            break;
        default:
            break;
    }

    level._id_130BD.damagefactorhigh = [];
    level._id_130BD.damageendtime = [];
    scripts\mp\flags::gameflagwait( "prematch_done" );

    foreach ( var_1 in level._id_130BD.damagefactor )
    {
        if ( isdefined( var_1.script_noteworthy ) && level._id_130EE != var_1.script_noteworthy )
            continue;

        if ( !isdefined( var_1.angles ) )
            var_1.angles = ( 0, 0, 0 );

        var_2 = easepower( "br_loot_cache_zom", var_1.origin, var_1.angles );
        var_2.delay_spawn_tanks = ::_id_130DF;
        var_2._id_12B71 = ::_id_130E1;
        var_2._id_11CFD = "cache_zom";
        var_2.semtex_stuckplayer = 1;
        var_3 = scripts\mp\objidpoolmanager::requestobjectiveid( 1 );

        if ( var_3 != -1 )
        {
            scripts\mp\objidpoolmanager::objective_add_objective( var_3, "current", var_2.origin + ( 0, 0, 15 ), "ui_mp_br_mapmenu_icon_zmb_event_dropbox" );
            scripts\mp\objidpoolmanager::update_objective_setbackground( var_3, 1 );
            scripts\mp\objidpoolmanager::objective_playermask_hidefromall( var_3 );
            level._id_130BD.damageendtime[level._id_130BD.damageendtime.size] = var_3;
        }
        else
        {

        }

        level._id_130BD.damagefactorhigh[level._id_130BD.damagefactorhigh.size] = var_2;
    }
}

_id_130DE( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.origin = var_0;
    var_3.angles = var_1;
    var_3.script_noteworthy = var_2;
    level._id_130BD.damagefactor[level._id_130BD.damagefactor.size] = var_3;
}

_id_130DF( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !var_3 scripts\mp\gametypes\br_public.gsc::obj_a_behavior( "brloot_access_card_green" ) )
    {
        var_3 scripts\mp\hud_message::showerrormessage( "MP_BR_INGAME/ZOMBIE_CACHE_DENY_CARD" );
        var_3 playlocalsound( "br_pickup_deny" );
        return 0;
    }

    return 1;
}

_id_130E1( var_0, var_1, var_2, var_3, var_4 )
{
    var_3 scripts\mp\gametypes\br_pickups.gsc::_id_11A15();

    if ( !isdefined( var_0._id_11CFE ) )
        var_0._id_11CFE = 0;
    else
        var_0._id_11CFE = ( var_0._id_11CFE + 1 ) % 10;

    for ( var_5 = 0; var_5 < level._id_130BD.damageendtime.size; var_5++ )
    {
        if ( var_0 == level._id_130BD.damagefactorhigh[var_5] )
            scripts\mp\objidpoolmanager::objective_playermask_hidefrom( level._id_130BD.damageendtime[var_5], var_3 );
    }

    ai_dropgren_weapontype( var_0.origin );

    if ( getdvarint( "scr_bombardment_killswitch", 0 ) == 0 )
        var_0 scripts\mp\gametypes\br.gsc::set_customizable_values( "brloot_access_card_purple" );

    wait( getdvarfloat( "scr_br_zombie_cache_wait", 5.0 ) );
    var_0 setscriptablepartstate( var_1, "closing" );
}

ai_dropgren_weapontype( var_0 )
{
    var_1 = getdvarint( "scr_br_zombie_cache_delete_nearby_loot_radius", 128 );

    if ( var_1 == 0 )
        return;

    var_2 = canceljoins( undefined, undefined, var_0, var_1 );

    if ( isdefined( var_2 ) )
    {
        foreach ( var_4 in var_2 )
        {
            if ( var_4.type == "br_loot_cache" || var_4.type == "br_loot_cache_lege" || var_4.type == "brloot_escape_radio" || var_4.type == "br_cargotrain" || var_4.type == "br_cargotrain_engine" )
                continue;

            if ( var_4 getscriptableisreserved() && !isdefined( var_4.combo_duration_calculate ) )
                continue;

            scripts\mp\gametypes\br_pickups.gsc::select_patrol_one_spawners( var_4 );
        }
    }
}

_id_130BF()
{
    if ( !isdefined( level._id_130BD.isanytutorialorbotpracticematch ) )
        level._id_130BD.isanytutorialorbotpracticematch = 1;

    if ( !isdefined( level._id_130BD.has_been_turned_on ) )
        level._id_130BD.has_been_turned_on = 0;

    var_0 = [];

    if ( !level._id_130BD.has_been_turned_on )
    {
        if ( level._id_130BD.isanytutorialorbotpracticematch )
        {
            var_0 = _id_130C1( "boat_doors_round1" );
            level._id_130BD.isanytutorialorbotpracticematch = 0;
        }
        else
        {
            var_0 = _id_130C1( "boat_doors_round2" );
            level._id_130BD.has_been_turned_on = 1;
        }

        if ( isdefined( var_0 ) )
        {
            foreach ( var_2 in var_0 )
                thread _id_130C3( var_2 );
        }
    }
}

_id_130BE()
{
    var_0 = getentarray( "boat_doors_round1", "script_noteworthy" );
    var_0 scripts\engine\utility::array_combine( var_0, getentarray( "boat_doors_round2", "script_noteworthy" ) );

    foreach ( var_2 in var_0 )
        var_2 delete();
}

chopperexfil_music_start()
{
    wait 5.0;
    scripts\mp\utility\sound::anim_spawnposition_override( "br_zmb_sfx" );
}
