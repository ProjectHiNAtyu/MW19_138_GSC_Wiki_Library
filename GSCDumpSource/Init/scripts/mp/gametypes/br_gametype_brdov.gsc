// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.cleanup_fake_ai_on_death = spawnstruct();
    level.cleanup_fake_ai_on_death._id_12D46 = getdvarint( "scr_brdov_version", 0 );

    switch ( level.cleanup_fake_ai_on_death._id_12D46 )
    {
        case 3:
            player_connect_fade_in_logic();
            break;
        case 2:
            player_completed();
            break;
        case 1:
            player_complete_trial();
            break;
        case 0:
        default:
            player_closes_in();
            break;
    }
}

player_closes_in( var_0 )
{
    scripts\mp\gametypes\br_gametypes.gsc::give_fists( "infil" );
    scripts\mp\gametypes\br_gametypes.gsc::give_fists( "waitLoadoutDone" );
    scripts\mp\gametypes\br_gametypes.gsc::hostdamagepercentmedium( "allowLateJoiners" );
    scripts\mp\gametypes\br_gametypes.gsc::give_fists( "plunderSites" );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "getInfilPlayers", ::manualturret_toggleallowuseactions );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "onPlayerConnect", ::onplayerconnect );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "prematchSpawnMaxLocations", ::votesys_update_playercount );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "prematchSpawnNumTeamsPerLocation", ::votesys_update_time );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "maySpawn", ::mayspawn );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "playerWelcomeSplashes", ::vehicle_compass_deregisterinstance );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "initialPrespawnZOffset", ::playerstartpowers );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "disableLastManStandingDialog", ::give_intel_data );
    level.prematchperiodend = 0;
    level.br_infils_disabled = 1;
    level._id_120B6 = 1;
    level.checkforammoquickdrop = 1;
    level.disablespawning = 1;

    if ( !istrue( var_0 ) )
        thread playerzombiecleanuphud();
}

playerzombiecleanuphud()
{
    waittillframeend;
    var_0 = getdvarfloat( "scr_brdov_prematch_spawn_radius", 1500 );

    if ( level.mapname == "mp_br_mechanics" )
        level.chopper_boss_player_monitor = [ scripts\mp\gametypes\br.gsc::createspawnlocation( ( -6906, -4478, 66 ), 0, var_0 ), scripts\mp\gametypes\br.gsc::createspawnlocation( ( 4622, -301, 50 ), 0, var_0 ), scripts\mp\gametypes\br.gsc::createspawnlocation( ( -2348, 1391, 58 ), 0, var_0 ), scripts\mp\gametypes\br.gsc::createspawnlocation( ( -3787, 2022, 58 ), 0, var_0 ), scripts\mp\gametypes\br.gsc::createspawnlocation( ( 14913, 16178, 58 ), 0, var_0 ) ];
    else
        level.chopper_boss_player_monitor = [ scripts\mp\gametypes\br.gsc::createspawnlocation( ( 28653, 2355, -688 ), 0, var_0 ), scripts\mp\gametypes\br.gsc::createspawnlocation( ( 26797, 20510, 1384 ), 0, var_0 ), scripts\mp\gametypes\br.gsc::createspawnlocation( ( 31359, 36450, 640 ), 0, var_0 ), scripts\mp\gametypes\br.gsc::createspawnlocation( ( -22839, 49175, 2747 ), 0, var_0 ), scripts\mp\gametypes\br.gsc::createspawnlocation( ( -22047, 15388, -6 ), 0, var_0 ), scripts\mp\gametypes\br.gsc::createspawnlocation( ( 21694, -16289, 1970 ), 0, var_0 ), scripts\mp\gametypes\br.gsc::createspawnlocation( ( 50956, -39269, 1412 ), 0, var_0 ), scripts\mp\gametypes\br.gsc::createspawnlocation( ( 46948, -10375, 125 ), 0, var_0 ), scripts\mp\gametypes\br.gsc::createspawnlocation( ( -5574, 8168, -269 ), 0, var_0 ) ];
}

votesys_update_playercount()
{
    return 0;
}

votesys_update_time()
{
    return 1;
}

manualturret_toggleallowuseactions()
{
    return [];
}

onplayerconnect( var_0 )
{
    var_0.br_infilstarted = 1;
    var_0.obj_room_fire_07 = 0;
    var_0.cleanup_goal_population = gettime();
    var_0 setclientomnvar( "ui_br_infiled", 1 );
    thread onplayerspawn( var_0 );
    var_0 setsoundsubmix( "mp_br_event_dovp2_don4_infil", 0.5 );
}

onplayerspawn( var_0 )
{
    var_0 endon( "disconnect" );
    var_0 waittill( "br_spawned" );
    var_0 setplayermusicstate( game["music"]["br_infil_intro"][0] );
    var_0 clearsoundsubmix( "mp_br_event_dovp2_don4_infil", 3 );

    if ( getdvarint( "scr_brdov_update_circle_on_first_spawn", 1 ) )
        level notify( "update_circle_hide" );

    waittillframeend;
    var_0 scripts\mp\gametypes\br_armor.gsc::monitor_truck();
    var_0 scripts\mp\gametypes\br_weapons.gsc::br_ammo_give_type( var_0, "brloot_ammo_919", 30, 0 );
}

mayspawn()
{
    return 1;
}

vehicle_compass_deregisterinstance()
{
    self endon( "disconnect" );
    self waittill( "spawned_player" );
    thread vehicle_compass_friendlystatuschangedcallback();

    while ( !self isonground() )
        waitframe();

    scripts\mp\gametypes\br_analytics.gsc::choppersupport_watchleashrange( self );
}

vehicle_compass_friendlystatuschangedcallback()
{
    self endon( "disconnect" );
    wait( getdvarfloat( "scr_brdov_welcome_splash_delay", 5.0 ) );
    scripts\mp\hud_message::showsplash( "br_prematch_welcome_brdov" );

    if ( getdvarint( "scr_brdov_update_circle_on_welcome", 1 ) )
        level notify( "update_circle_hide" );

    wait( getdvarfloat( "scr_brdov_welcome_vo_delay", 0.5 ) );
    scripts\mp\gametypes\br_public.gsc::cloud_cover( "primary_objective", self, 0 );
}

playerstartpowers()
{
    return getdvarint( "scr_brdov_prematch_spawn_z_offset", 2000 );
}

give_intel_data( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 1;

    var_1 = ( gettime() - var_0.cleanup_goal_population ) / 1000;
    return var_1 < getdvarfloat( "scr_brdov_disable_last_man_standing_time", 30.0 );
}

player_complete_trial()
{
    thread playerzombiecleanupkeybindings();
}

playerzombiecleanupkeybindings()
{
    waittillframeend;
}

player_completed()
{
    player_closes_in( 1 );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "preCalcSafeCircleCenters", ::vo_manifest_scanned );
    scripts\mp\gametypes\br_gametypes.gsc::give_fists( "randomizePrematchSpawnOriginNextIdx" );
    level.cleanup_fake_ai_on_death._id_120A5 = getdvarint( "scr_brdov2_skip_circles", 1 );
    level.checkpoint_carepkg_spawns_func = ::checkpoint_carepkg_spawns;
    thread playerzombiecleanuppowers();
}

playerzombiecleanuppowers()
{
    waittillframeend;
    var_0 = getdvarint( "scr_brdov2_num_spawns", 10 );
    var_1 = getdvarint( "scr_brdov2_spawn_circle", 1 );
    var_2 = level.br_level.checkpoint_create_carepackage[var_1];
    var_3 = level.br_level.br_circleradii[var_1];
    var_2 = ( var_2[0], var_2[1], 3000 );
    var_4 = physics_createcontents( [ "physicscontents_playertrigger" ] );
    var_5 = ( 0, 0, 0 );
    var_6 = physics_raycast( var_2, var_2 + ( var_3, 0, 0 ), var_4, undefined, 0, "physicsquery_all" );
    var_5 = var_5 + ( var_3 * addpowerbutton( var_6 ), 0, 0 );
    var_6 = physics_raycast( var_2, var_2 - ( var_3, 0, 0 ), var_4, undefined, 0, "physicsquery_all" );
    var_5 = var_5 - ( var_3 * addpowerbutton( var_6 ), 0, 0 );
    var_6 = physics_raycast( var_2, var_2 + ( 0, var_3, 0 ), var_4, undefined, 0, "physicsquery_all" );
    var_5 = var_5 + ( 0, var_3 * addpowerbutton( var_6 ), 0 );
    var_6 = physics_raycast( var_2, var_2 - ( 0, var_3, 0 ), var_4, undefined, 0, "physicsquery_all" );
    var_5 = var_5 - ( 0, var_3 * addpowerbutton( var_6 ), 0 );
    var_5 = var_5 / 2.0;
    var_5 = var_5 + var_2;
    level.chopper_boss_player_monitor = [];
    ammostructreplenish( var_5, var_2, var_3, var_0, 0 );
    ammostructreplenish( var_5, var_2, var_3, var_0, 360 / var_0 / 2.0 );
}

ammostructreplenish( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = getdvarfloat( "scr_brdov2_spawn_circle_offset", 500.0 );
    var_6 = physics_createcontents( [ "physicscontents_playertrigger" ] );
    var_7 = [];

    for ( var_8 = 0; var_8 < var_3; var_8++ )
    {
        var_9 = var_8 * ( 360 / var_3 ) + var_4;
        var_10 = anglestoforward( ( 0, var_9, 0 ) );
        var_11 = var_0;
        var_12 = var_11 + 2.0 * var_10 * var_2;
        var_13 = scripts\mp\gametypes\br_c130.gsc::rungwperif_planes( var_11, var_12, var_1, var_2 );

        if ( vectordot( var_10, var_13[0] - var_11 ) > 0 )
            var_12 = var_13[0];
        else
            var_12 = var_13[1];

        var_14 = distance( var_11, var_12 );
        var_15 = physics_raycast( var_11, var_12, var_6, undefined, 0, "physicsquery_all" );
        var_16 = addpowerbutton( var_15 );
        var_7[var_7.size] = var_11 + var_10 * ( var_14 * var_16 - var_5 );
    }

    var_7 = scripts\engine\utility::array_randomize( var_7 );

    for ( var_8 = 0; var_8 < var_7.size; var_8++ )
    {
        var_17 = vectortoangles( var_0 - var_7[var_8] );
        var_17 = ( 0, var_17[1], 0 );
        var_18 = scripts\mp\gametypes\br.gsc::createspawnlocation( var_7[var_8], 0, 100 );
        var_18.angles = var_17;
        level.chopper_boss_player_monitor[level.chopper_boss_player_monitor.size] = var_18;
    }
}

addpowerbutton( var_0 )
{
    var_1 = 1.0;

    foreach ( var_3 in var_0 )
    {
        var_4 = var_3["entity"];

        if ( isdefined( var_4 ) && isdefined( var_4.targetname ) && var_4.targetname == "OutOfBounds" )
        {
            var_1 = var_3["fraction"];
            break;
        }
    }

    return var_1;
}

vo_manifest_scanned()
{
    for ( var_0 = 0; var_0 < level.cleanup_fake_ai_on_death._id_120A5; var_0++ )
    {
        scripts\mp\gametypes\br_circle.gsc::getcashnags( 0 );
        level.br_level.checkpoint_create_carepackage = scripts\engine\utility::bot_get_stored_custom_classes( level.br_level.checkpoint_create_carepackage, 0 );
    }

    if ( !isdefined( level.br_level.cheesewedge ) )
        level.br_level.cheesewedge = 0;

    level.br_level.cheesewedge = level.br_level.cheesewedge - level.cleanup_fake_ai_on_death._id_120A5;
}

checkpoint_carepkg_spawns()
{
    level.br_level.br_circleclosetimes = [ 270, 180, 140, 80, 70, 50, 50, 100 ];
    level.br_level.br_circledelaytimes = [ 220, 80, 70, 55, 55, 40, 30, 0 ];
    level.br_level.checkpoint_edit_loadout = [ 220, 0, 0, 0, 0, 0, 0, 0 ];
    level.br_level.checkpoint_edit_munitions = [ 0, 0, 0, 0, 0, 0, 0, 0 ];
    level.br_level.br_circleminimapradii = [ 10500, 10500, 10500, 10500, 10500, 9000, 8000, 5500 ];
    level.br_level.br_circleradii = [ 81600, 50000, 37000, 20000, 12300, 6000, 3000, 1500, 0 ];
}

player_connect_fade_in_logic()
{
    thread scripts\mp\gametypes\br_gametype_mini.gsc::init();
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "overrideQuestSearchParams", ::tank_east );
}

tank_east( var_0 )
{
    return 1;
}
