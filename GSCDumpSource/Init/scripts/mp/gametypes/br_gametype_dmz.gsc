// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    scripts\mp\gametypes\br_gametypes.gsc::give_fists( "circle" );
    scripts\mp\gametypes\br_gametypes.gsc::give_fists( "gulag" );
    scripts\mp\gametypes\br_gametypes.gsc::give_fists( "dropbag" );

    if ( getdvarint( "scr_bmo_use_spawn_fix", 1 ) == 0 )
        scripts\mp\gametypes\br_gametypes.gsc::give_fists( "teamSpectate" );

    scripts\mp\gametypes\br_gametypes.gsc::hostdamagepercentmedium( "allowLateJoiners" );
    scripts\mp\gametypes\br_gametypes.gsc::give_fists( "oneLife" );

    if ( getdvarint( "scr_bmo_useKiosks", 1 ) == 0 )
        scripts\mp\gametypes\br_gametypes.gsc::give_fists( "kiosk" );

    if ( getdvarint( "scr_bmo_enableTabletReplace", 1 ) == 1 )
        scripts\mp\gametypes\br_gametypes.gsc::hostdamagepercentmedium( "tabletReplace" );

    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "playerDropPlunderOnDeath", ::playerdropplunderondeath );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "playerShouldRespawn", ::usingtacmap );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "playerWelcomeSplashes", ::vehicle_compass_deregisterinstance );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "spawnHandled", ::_id_122C5 );
    level._id_12692 = getdvarint( "scr_dmz_teamPlunder", 0 );

    if ( level._id_12692 )
    {

    }

    level.cleanupswaploadoutflags.setbrokenoverlaymaterial = getdvarint( "scr_br_extract_max_extractions", 5 );
    level.cleanupswaploadoutflags.start_chants_on_movement = 0;
    level.cleanupswaploadoutflags.isassaultdrone = "tie";
    level.br_prematchffa = 0;
    setdvar( "scr_br_allowLoadout", 1 );
    level._id_1277F = [];
    level.select_top_roof_spawners = [];
    level.init_tape_machine_animations = [];
    level.dead_target_count = 0;
    level.deadblue = 0;
    level.deadgray = 0;
    var_0 = getdvarint( "scr_dmz_win_cost", 1000 );

    if ( var_0 > 0 )
    {
        var_0 = var_0 * 10;
        var_0 = var_0 * 100;
        setdvar( "scr_br_scorelimit", var_0 );
        scripts\mp\utility\game::registerscorelimitdvar( scripts\mp\utility\game::getgametype(), var_0 );
    }

    setdvar( "scr_br_magcount", 3 );
    setdvar( "scr_br_loadout_option", "nothing" );
    setdvarifuninitialized( "scr_br_respawnMaxTeammateOffset", 10000 );
    setomnvar( "ui_br_circle_state", 4 );
    setomnvar( "ui_gulag_state", 1 );
    setomnvar( "ui_hide_redeploy_timer", 1 );
    setdvarifuninitialized( "scr_br_bank_alarm", 1 );
    level.monitor_hack_prox = getdvarint( "scr_dmz_giveLoadoutEveryTime", 1 );
    level.playscorestatusdialog = getdvarint( "scr_bmo_instantBleedOutSquadWipe", 1 );
    level.checkbluemassacre = getdvarint( "scr_bmo_bottomPercentageToAdjustEconomy", 50 );
    level._id_1277D = getdvarint( "scr_bmo_topPercentageToAdjustEconomy", 5 );
    level._id_12B8A = getdvarint( "scr_bmo_useMilestonePhases", 1 );
    level.setup_trap_consoles = getdvarint( "scr_bmo_milestonePhase_VIPs", 10 );
    level.setup_train_entarray_composite = getdvarint( "scr_bmo_milestonePhase_LZs", 30 );
    level.setup_train_array = getdvarint( "scr_bmo_milestonePhase_Drops", 50 );
    level.setup_train_entarray = getdvarint( "scr_bmo_milestonePhase_Helis", 75 );
    level.barelem = getdvarint( "scr_dmz_airdrop_base_cash_amount", 750 );
    level.overridepointsneeded = getdvarint( "scr_bmo_hidePlacementUntilPercent", 10 );
    level.override_minimap_hide = getdvarint( "scr_bmo_hideLeaderHashUntilPercent", 0 );
    level._id_12052 = getdvarint( "scr_bmo_progressSplashesAndMusic", 1 );
    level._id_11D2F = getdvarint( "scr_bmo_secondsBeforePlacementUpdates", 60 );
    level.give_launchers_xmags = getdvarint( "scr_bmo_disable_perc_announcements", 0 );
    level.select_patrol_two_spawners = getdvarint( "scr_dmz_loot_leader_mark_count", 3 );
    level.setbuybackpingmessage = getdvarint( "scr_dmz_loot_leader_mark_count", 3 );
    level.select_players_not_in_killzone_only = getdvarint( "scr_bmo_loot_leader_mark_size", 5000 );
    level.select_stairway_spawners = getdvarint( "scr_dmz_loot_leader_one_per_team", 1 ) == 1;
    level.select_random_card_location = getdvarint( "scr_bmo_loot_leader_mark_size_dynamic", 1 );
    level.select_spot_light_nodes_from = getdvarint( "scr_bmo_loot_leader_mark_info_strong_size", 2000 );
    level.select_stadium_one_spawners = getdvarint( "scr_bmo_loot_leader_mark_info_strong_value", 5000 );
    level.select_stadium_three_spawners = getdvarint( "scr_bmo_loot_leader_mark_info_weak_size", 5000 );
    level.select_stadium_two_spawners = getdvarint( "scr_bmo_loot_leader_mark_info_weak_value", 1000 );
    level.init_swivelroom_obj = getdvarint( "scr_bmo_loot_leader_expired_enabled", 0 ) == 1;
    level.select_reception_spawners = getdvarint( "scr_bmo_loot_leader_mark_top_teams", 2 );
    level.vehicle_spawn_waitandrespawn = getdvarfloat( "scr_bmo_music_first", 0.3 );
    level.vehicle_stop_moving = getdvarfloat( "scr_bmo_music_second", 0.5 );
    level.vehicle_tracker = getdvarfloat( "scr_bmo_music_third", 0.75 );
    level.vehicle_spawn_watchabandoned = getdvarfloat( "scr_bmo_music_fourth", 0.9 );
    level._id_12B6A = getdvarint( "scr_dmz_useAutoRespawn", 1 );
    level.brenableagents = getdvarint( "scr_dmz_autoRespawnWaitTime", 20 );
    level._id_1276F = getdvarint( "scr_dmz_tokenRespawnWaitTime", level.brenableagents );
    level.play_player_approach = getdvarint( "scr_dmz_respawn_penalty", 0 );
    level.play_player_disguise_vo = getdvarfloat( "scr_dmz_respawn_penalty_max", 15 );
    level._id_11AA6 = getdvarint( "scr_bmo_respawnHeightOverride", 5000 );
    level._id_11AB2 = getdvarint( "scr_dmz_respawn_time_disable", 0 );
    level.targs_done = getdvarfloat( "scr_bmo_parachuteDeployDelay", 0.5 );
    level.cardstruct = getdvarint( "scr_dmz_bonusDeathPlunder", 200 );
    level.care_packages_unusable_think = getdvarint( "scr_dmz_bonusDeathPlunder_ot", 250 );
    level.setdragonsbreathburning = getdvarint( "scr_bmo_maxPlunderDropOnDeath", 10000 );
    level.short_term_goal = getdvarint( "scr_bmo_minPlunderDropOnDeath", 200 );
    level.tomastrike_findoptimallaunchpos = getdvarint( "scr_bmo_percentagePlunderDrop", 50 );
    level.vehicle_spawn_mp_gamemodesupportsabandonedtimeout = getdvarint( "scr_bmo_plunderFXOnDropThreashold", 750 );
    level.setdeleteabletimer = getdvarint( "scr_bmo_maxPlunderDropInOvertime", 2000 );
    level.init_pipe_room_obj = getdvarfloat( "scr_bmo_executionCashMultiplier", 1 );
    level.branalytics_planepath = getdvarint( "scr_dmz_autoAssignFirstQuest", 0 );
    level.watch_for_driver_death = getdvarint( "scr_bmo_questDomDistMin", 5000 );
    level.watch_for_damage_on_turret = getdvarint( "scr_bmo_questDomDistMax", 10000 );
    level.watch_for_convoy_escape = getdvarint( "scr_bmo_questAssDistMin", 2500 );
    level.watch_for_attack = getdvarint( "scr_bmo_questAssDistMax", 7500 );
    level.watch_for_flash_detonation = getdvarint( "scr_bmo_questScavDistMin", 5000 );
    level.watch_for_driver_spawned = getdvarint( "scr_bmo_questScavDistMax", 8000 );
    level.watch_for_heli_death = getdvarint( "scr_bmo_questScavDistMin", 5000 );
    level.watch_for_heli_bosses_dead = getdvarint( "scr_bmo_questScavDistMax", 8000 );
    level._id_125DD = getdvarfloat( "scr_bmo_questTabletReplaceEveryN", 1.5 );
    level._id_120BE = getdvarint( "scr_bmo_skipWeaponDropOnDeath", 0 );
    level._id_120A9 = getdvarint( "scr_bmo_skipEquipmentDropOnDeath", 1 );
    level.issameteamagent = getdvarint( "scr_bmo_forceArmorDropOnDeath", 1 );
    level.binoculars_hascoldblooded = getdvarint( "scr_bmo_allowFultonDropOnDeath", 1 );
    level._id_1268E = getdvarint( "scr_bmo_score_exfil", 0 ) == 1;
    level._id_1268F = getdvarint( "scr_bmo_exfil_showvipteamonly", 0 ) == 1;
    level._id_12691 = getdvarint( "scr_bmo_vipteam_uav", 0 ) == 1;
    level._id_12690 = getdvarint( "scr_bmo_exfil_timer", 180 );
    level._id_12054 = getdvarint( "scr_bmo_plunderextract_objicon_inworld", 1 ) == 1;
    level._id_1204F = getdvarint( "scr_bmo_extract_objicon_nonscriptable", 0 );
    level._id_1272F = getdvarint( "scr_bmo_timeout_plunderextract", 0 );
    level.spawn_elevator_gate = getdvarint( "scr_bmo_move_plunderextract_onuse", 0 ) == 1;
    level.initial_forward = int( getdvarint( "scr_bmo_extract_heli_health", 999 ) * 100 );
    level.initial_right = getdvarint( "scr_bmo_extract_heli_invulnerable", 1 );
    level.brking_cleanupents = getdvarint( "scr_bmo_extract_plunder_instant", 1 );
    level.vehicle_spawn_gamemodesupportsabandonedtimeout = getdvarint( "scr_bmo_plunder_extract_alert", 1 );
    level.set_vehicle_anims_decho_rebel = getdvarint( "scr_bmo_matchstart_extractsitedelay", 120 );
    level.outline_enemy_ai_for_duration = getdvarint( "scr_bmo_plunderextract_hide_unused", 1 );
    level._id_11F64 = scripts\engine\utility::ter_op( getdvar( "mapname" ) == "mp_br_mechanics", 0, getdvarint( "scr_bmo_plunderextract_distribution", 1 ) );
    level._id_11CB4 = getdvarint( "scr_bmo_score_requires_banking", 0 );
    level.give_secondary_attachments_only = getdvarint( "scr_bmo_disable_win_on_score", 0 );
    level.gulagwinnertableloadout = getdvarint( "scr_bmo_eom_ot_timer", 30 );
    level._id_11E80 = level.gulagwinnertableloadout > 0;
    level.tank_watchforgameend = getdvarint( "scr_bmo_ot_as_match_time", 1 );
    level.brking_addtoc130infil = getdvarint( "scr_bmo_eom_bank_to_end", 0 );
    level.set_relic_explodedmg = getdvarint( "scr_dmz_mapEdgeExtractionLocs", 0 );
    level.show_deposit_hint = ::validateprojectileent;
    level.hvi_vehicle_rider_special_setup = getdvarint( "scr_bmo_endMatchCameraTransitions", 1 );
    level.tank_watchpiggybackexploit = getdvarfloat( "scr_bmo_overtimeCashMultiplier", 2 );
    setomnvar( "ui_br_overtime_cash_multiplier", level.tank_watchpiggybackexploit );
    level.give_killstreak_sentry = getdvarint( "scr_bmo_disable_one_mil_announce", 0 );
    level.grenade_owner_name = getdvarint( "scr_dmz_loot_leader_update_on_pickup", 0 ) == 1;
    level.ground_detection_think = getdvarint( "scr_dmz_win_cost", 1000 ) * 1000;
    level.grenade_menu_kill = getdvarint( "scr_br_extract_cost", 300 );
    level.grenade_structs = getdvarint( "scr_br_extract_cost_min", 40 );
    level.grenade_obj = getdvarint( "scr_br_extract_cost_decrease", 20 );
    level.shot_by_player = getdvarint( "br_min_plunder_extractions", 7 );
    level.setdragonsbreathcorpseflare = getdvarint( "br_max_plunder_extractions", 7 );
    level.clean_up_rocket = 1;
    thread scripts\mp\gametypes\br_lootchopper.gsc::init();
    thread playerzombiedelayturnonfx();
    thread playerscoreeventvalue();
}

playerzombiedelayturnonfx()
{
    waittillframeend;
    level.uavsettings["uav"].timeout = 60;
    scripts\mp\flags::gameflaginit( "collect_done", 0 );
    scripts\mp\flags::gameflaginit( "helipad_wait_done", 0 );
    scripts\mp\flags::gameflaginit( "placement_updates_allowed", 0 );
    scripts\mp\flags::gameflaginit( "activate_cash_lzs", 0 );
    scripts\mp\flags::gameflaginit( "activate_cash_drops", 0 );
    scripts\mp\flags::gameflaginit( "activate_cash_helis", 0 );
    level.shouldmodelognotify = ::codenumber;
    level.collision_damage_watcher = ::should_enter_combat_after_checking_decoy_grenade;
    level.ononeleftevent = ::ononeleftevent;
    level.onplayerkilled = ::onplayerkilled;
    level.successfulteam = ::successfulteam;
    level.ontimelimit = ::ontimelimit;
    scripts\mp\utility\spawn_event_aggregator::registeronplayerspawncallback( ::updatecallback );
    scripts\mp\utility\disconnect_event_aggregator::registerondisconnecteventcallback( ::onplayerdisconnect );
    thread _id_11F7D();
    thread scripts\mp\gametypes\br_lootchopper.gsc::select_hostage_room_three_spawners();
    thread scripts\mp\gametypes\br_c130airdrop.gsc::cycle_thrust_fx();
    level.select_players_in_killzone_only = [];
    level.init_tactical_boxes = [];

    for ( var_0 = 0; var_0 < level.select_patrol_two_spawners; var_0++ )
    {
        if ( level.select_reception_spawners > 0 && var_0 == 0 )
        {
            var_1 = 1;
            var_2 = 5;
        }
        else
        {
            var_1 = 1;
            var_2 = 4;
        }

        var_3 = spawnstruct();
        var_3.modifier = "";
        var_3 scripts\mp\gametypes\br_quest_util.gsc::force_ai_to_drop_thermites( var_1, var_2 );
        var_3 scripts\mp\gametypes\br_quest_util.gsc::_id_11EBE( level.select_players_not_in_killzone_only );
        level.select_players_in_killzone_only[var_0] = var_3;
        var_3 = spawnstruct();
        var_3.modifier = "";
        var_3 scripts\mp\gametypes\br_quest_util.gsc::force_ai_to_drop_thermites( var_1, var_2, 2 );
        var_3 scripts\mp\gametypes\br_quest_util.gsc::_id_11EBE( level.select_players_not_in_killzone_only );
        level.init_tactical_boxes[var_0] = var_3;
    }

    if ( !istrue( level._id_12B8A ) )
        level thread transient_world_proxy_cull_playspace_proxies();

    thread _id_12E03();
    level thread scripts\mp\gametypes\br_analytics.gsc::playerrespawncleanup();
    cleanupents();

    if ( level._id_12692 )
    {
        if ( getdvarfloat( "scr_dmz_loot_leader_update_interval", 15.0 ) > 0.0 )
            level thread _id_12B09();
    }

    if ( level._id_12054 && level._id_1204F )
        level thread fngetplayerdrone();

    if ( level._id_1272F > 0 )
    {
        scripts\mp\flags::gameflagwait( "prematch_done" );

        if ( level.set_vehicle_anims_decho_rebel > 0 )
            wait( level.set_vehicle_anims_decho_rebel );

        level thread _id_1249F();
    }

    if ( istrue( level.set_relic_explodedmg ) )
        level thread playersetiszombie();

    level._id_12BC4 = [];
    level._id_12BC4[0] = "assassination";
    level._id_12BC4[1] = "domination";
    level._id_12BC4[2] = "scavenger";
    level thread init_bomb_objective();

    if ( istrue( level.hvi_vehicle_rider_special_setup ) )
        level thread playersetignoreattractions();

    var_4 = getdvarint( "scr_bmo_c130OverrideSpeed", -1 );

    if ( var_4 > 0 )
        level.br_level.c130_speedoverride = var_4;

    level thread disable_bomb_detonator_interactivity();

    if ( level.gulagwinnertableloadout && level.tank_watchforgameend )
        level thread disable_hilltop_roof_traversal();
}

disable_bomb_detonator_interactivity()
{
    level endon( "game_ended" );

    if ( scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
        return;

    level endon( "end_circlestate_timer" );
    scripts\mp\flags::gameflagwait( "prematch_done" );
    var_0 = getdvarint( "scr_br_timelimit" );
    setomnvar( "ui_br_circle_state", 5 );
    setomnvar( "ui_hardpoint_timer", gettime() + int( var_0 * 1000 ) );
    wait( int( max( var_0 - 300, 0 ) ) );
    setomnvar( "ui_br_circle_state", 6 );
}

disable_hilltop_roof_traversal()
{
    level endon( "game_ended" );
    scripts\mp\flags::gameflagwait( "prematch_done" );
    var_0 = getdvarint( "scr_br_timelimit" );
    var_1 = int( max( var_0 - level.gulagwinnertableloadout, 0 ) );

    if ( var_1 <= 0 )
        return;

    wait( var_1 );
    level notify( "end_circlestate_timer" );
    level thread _id_1292A( undefined, undefined, 1 );
}

_id_12E02()
{
    level endon( "game_ended" );
    level.allassassin_updatecircle = [];
    level.allassassin_updatecircle["uktl"] = "dx_bra_uktl_respawning_enemy_in_area";
    level.allassassin_updatecircle["rutl"] = "dx_bra_rutl_respawning_enemy_in_area";
    level.team_revive_kbm_override = getdvarint( "scr_parachute_overhead_warning_timeout_ms", 45000 );
    level.tarmac_techo_start_first = getdvarint( "scr_parachute_overhead_warning_prematch_timeout_ms", 20000 );
    level.team_planted_bomb = getdvarint( "scr_parachute_overhead_warning_radius", 2000 );
    level.tarmac_techo_start = getdvarint( "scr_parachute_overhead_warning_height", 3000 );
    level thread _id_12F5A( level.tarmac_techo_start_first );
    scripts\mp\flags::gameflagwait( "prematch_done" );
    level notify( "cancel_watch_parachuters_overhead" );
    waitframe();
    level thread _id_12F5A( level.team_revive_kbm_override );
}

_id_12E03()
{
    level endon( "game_ended" );
    scripts\mp\flags::gameflagwait( "prematch_done" );
    thread vehicle_travel_player_connect_monitor();
}

cleanupents()
{
    scripts\cp_mp\utility\game_utility::_id_11A27( "delete_on_load", "targetname" );
    scripts\cp_mp\utility\game_utility::_id_11A28( "door_prison_cell_metal_mp", 1 );
    scripts\cp_mp\utility\game_utility::_id_11A28( "door_wooden_panel_mp_01", 1 );
    scripts\cp_mp\utility\game_utility::_id_11A28( "me_electrical_box_street_01", 1 );
}

onplayerdisconnect( var_0 )
{
    if ( isdefined( var_0 ) && scripts\mp\flags::gameflag( "prematch_done" ) )
    {
        var_0 scripts\mp\gametypes\br_pickups.gsc::droponplayerdeath();

        if ( isdefined( level.grenade_exploded_during_stealth_listener ) )
        {
            if ( level.teamdata[var_0.team]["players"].size == 0 )
                level.grenade_exploded_during_stealth_listener--;
        }
        else
            dangercircleenthidefromplayers();
    }
}

ononeleftevent( var_0 )
{

}

vehicle_compass_deregisterinstance( var_0 )
{
    self endon( "disconnect" );
    self waittill( "spawned_player" );
    wait 1;
    scripts\mp\hud_message::showsplash( "br_prematch_welcome_dmz" );

    if ( !istrue( level.br_infils_disabled ) )
        self waittill( "joining_Infil" );
    else
        scripts\mp\flags::gameflagwait( "prematch_done" );

    wait 1;
    level thread dangercircleenthidefromplayers();

    if ( soundexists( "dx_bra_uktl_bm_tut_earn_cash" ) )
        level scripts\mp\gametypes\br_public.gsc::cloud_cover( "bm_tut_earn_cash", self );

    scripts\mp\hud_message::showsplash( "br_gametype_dmz_welcome" );

    if ( istrue( self.progression_main ) )
        level scripts\mp\gametypes\br_public.gsc::cloud_cover( "deploy_squad_leader", self, 1, 0, 4.5 );

    if ( istrue( level.branalytics_planepath ) && istrue( level.br_prematchstarted ) )
        branalytics_plunder_extraction_failure( self );
}

_id_122C5( var_0 )
{
    return istrue( var_0.br_infilstarted ) && scripts\mp\flags::gameflag( "prematch_done" );
}

make_javelin_interact()
{

}

_id_127EC()
{
    level endon( "game_ended" );
    scripts\mp\flags::gameflagwait( "prematch_done" );
    var_0 = 0;
    var_1 = 0;
    var_2 = 0;

    if ( scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
        return;

    for (;;)
    {
        wait 1;
        var_3 = scripts\mp\gamelogic::gettimeremaining() / 1000;

        if ( istrue( level.calloutmarkerpingvo_canplaywithspamavoidance ) )
            break;

        if ( var_3 <= 600 && !var_0 )
        {
            var_0 = 1;
            setomnvar( "ui_br_circle_state", 1 );

            foreach ( var_5 in level.players )
                var_5 scripts\mp\utility\lower_message::setlowermessageomnvar( 69, undefined, 10 );

            continue;
        }

        if ( var_3 <= 300 && !var_1 )
        {
            var_1 = 1;
            setomnvar( "ui_br_circle_state", 2 );

            foreach ( var_5 in level.players )
                var_5 scripts\mp\utility\lower_message::setlowermessageomnvar( 70, undefined, 10 );

            continue;
        }

        if ( var_3 <= 0 && !var_2 )
        {
            var_2 = 1;

            if ( level._id_12692 )
                return;

            setomnvar( "ui_nuke_countdown_active", 0 );
            level.setup_level_for_nightvision = 1;
            var_9 = is_killstreak_valid_for_swat();

            if ( isplayer( var_9 ) )
            {
                var_9 scripts\mp\trials\trial_race::tryusenuke();
                wait 10;
                var_10 = is_position_open();
                level thread scripts\mp\gamelogic::endgame( var_10, game["end_reason"]["mercy_win"], game["end_reason"]["mercy_loss"], 0, 1 );
            }
            else
            {
                var_10 = is_position_open();
                level thread scripts\mp\gamelogic::endgame( var_10, game["end_reason"]["mercy_win"], game["end_reason"]["mercy_loss"], 0, 1 );
            }
        }
    }
}

dangercircleenthidefromplayers()
{
    level.grenade_exploded_during_stealth_listener = 0;

    foreach ( var_1 in level.teamdata )
    {
        if ( var_1["players"].size > 0 )
            level.grenade_exploded_during_stealth_listener++;
    }
}

is_killstreak_valid_for_swat()
{
    var_0 = getarraykeys( level.teamdata );

    foreach ( var_2 in var_0 )
    {
        if ( level.teamdata[var_2]["alivePlayers"].size > 0 )
            return level.teamdata[var_2]["alivePlayers"][0];
    }

    return undefined;
}

is_position_open()
{
    var_0 = getarraykeys( level.teamdata );

    foreach ( var_2 in var_0 )
    {
        if ( level.teamdata[var_2]["players"].size == 0 )
            return var_2;
    }

    return "tie";
}

onplayerkilled( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    scripts\mp\gametypes\br.gsc::onplayerkilled( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );

    if ( scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
        return;

    var_10 = getdvarint( "scr_bmo_mode_splash_window", 7500 );

    if ( isdefined( level._id_12341 ) && level._id_12341 + var_10 > gettime() )
        scripts\mp\hud_message::showsplash( "bm_vips_marked" );

    if ( isdefined( level._id_12340 ) && level._id_12340 + var_10 > gettime() )
        scripts\mp\hud_message::showsplash( "bm_extract_heli_start" );

    if ( isdefined( level._id_1233E ) && level._id_1233E + var_10 > gettime() )
        scripts\mp\hud_message::showsplash( "br_c130airdrop_incoming" );

    if ( isdefined( level._id_1233F ) && level._id_1233F + var_10 > gettime() )
        scripts\mp\hud_message::showsplash( "br_lootchopper_incoming" );
}

codenumber( var_0 )
{
    return 1;
}

playerrespawn()
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    if ( istrue( level.gameended ) )
        return;

    if ( getdvarint( "scr_bmo_use_spawn_fix", 1 ) == 1 )
        self endon( "brWaitAndSpawnClientComplete" );

    var_0 = scripts\mp\utility\teams::getteamdata( self.team, "teamCount" );

    if ( !istrue( self._id_1238B ) || var_0 == 1 )
    {
        var_1 = 1.0;
        wait( var_1 );
    }

    if ( istrue( self.hasrespawntoken ) && isdefined( level._id_1276F ) )
        var_2 = level._id_1276F;
    else if ( level.play_player_approach > 0.0 )
        var_2 = clamp( self.pers["deaths"] * level.play_player_approach, 0.0, level.play_player_disguise_vo );
    else if ( isdefined( level.brenableagents ) )
        var_2 = level.brenableagents;
    else
        var_2 = getdvarint( "scr_br_extract_spawn_wait", 20 );

    var_3 = getdvarfloat( "scr_bmo_respawn_predict_hint_time", 10.0 );

    if ( var_2 < var_3 )
        var_2 = var_3;

    if ( level._id_11AB2 != 0 )
        var_2 = 0;

    var_4 = getdvarfloat( "scr_bmo_squad_wiped_stream_time", 5.0 );
    scripts\engine\utility::ent_flag_init( "playerRespawn_intermission_spawned" );
    self.plunder_repositoryclearcountdown = undefined;
    self.plunder_repositoryenableuserestrictions = undefined;

    if ( istrue( self._id_1238B ) || var_0 == 1 )
    {
        var_5 = scripts\mp\gametypes\br_gulag.gsc::unsetreduceregendelayonkills();
        var_6 = scripts\mp\gametypes\br_gulag.gsc::updatex1stashhud( var_5 );
        thread initusage( 0.0, var_0 > 1 );
        wait( var_4 );
    }
    else if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
    {
        scripts\mp\utility\lower_message::setlowermessageomnvar( 9, int( gettime() + var_2 * 1000 ) );
        var_7 = var_2 - var_3;
        var_8 = var_2 - var_7;
        var_9 = var_2 - getdvarfloat( "scr_bmo_respawn_intermission_time", 6.0 );
        thread initusage( var_9 );
        var_10 = scripts\engine\utility::waittill_notify_or_timeout_return( "squad_wipe_death", var_7 );

        if ( var_10 == "squad_wipe_death" )
        {
            var_5 = scripts\mp\gametypes\br_gulag.gsc::unsetreduceregendelayonkills();
            var_6 = scripts\mp\gametypes\br_gulag.gsc::updatex1stashhud( var_5 );
            thread initusage( 0.0, 1 );
            wait( var_4 );
        }
        else
        {
            thread _id_12B1D();
            var_10 = scripts\engine\utility::waittill_notify_or_timeout_return( "squad_wipe_death", var_8 );

            if ( var_10 == "squad_wipe_death" )
            {
                var_5 = scripts\mp\gametypes\br_gulag.gsc::unsetreduceregendelayonkills();
                var_6 = scripts\mp\gametypes\br_gulag.gsc::updatex1stashhud( var_5 );
                thread initusage( 0.0, 1 );
                wait( var_4 );
            }
        }
    }

    self notify( "stop_updatePrestreamRespawn" );
    var_5 = scripts\mp\gametypes\br_gulag.gsc::unsetreduceregendelayonkills();
    var_6 = scripts\mp\gametypes\br_gulag.gsc::updatex1stashhud( var_5 );

    if ( istrue( self._id_1238B ) )
    {
        self._id_1238B = 0;

        if ( var_0 > 1 && !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
            scripts\mp\hud_message::showsplash( "bm_your_squad_wiped" );
    }

    if ( reaper_missile_reload_end_time( self.team ) )
        return;

    if ( istrue( self.hasrespawntoken ) )
    {
        thread scripts\mp\gametypes\br_gulag.gsc::_id_1292D( 4 );
        self._id_1276E = 1;
        scripts\mp\gametypes\br_pickups.gsc::removerespawntoken();
    }

    if ( reaper_missile_reload_end_time( self.team ) )
        return;

    if ( getdvarint( "scr_skip_respawn_gate", 1 ) == 0 )
        scripts\mp\gametypes\br_public.gsc::vehicle_collision_updateinstanceend();

    scripts\engine\utility::ent_flag_clear( "playerRespawn_intermission_spawned" );
    self.plunder_repositoryclearcountdown = undefined;
    self.plunder_repositoryenableuserestrictions = undefined;
    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
    scripts\mp\playerlogic::spawnplayer( undefined, 0 );
    scripts\cp_mp\execution::_clearexecution();
    scripts\mp\gametypes\br_pickups.gsc::initplayer();

    if ( scripts\mp\gametypes\br_public.gsc::prophasclonesleft() && isdefined( level.tv_station_boss ) )
        var_5 = scripts\engine\utility::getstruct( level.tv_station_boss, "targetname" );

    scripts\mp\gametypes\br_gulag.gsc::gulagwinnerrespawn( 1, undefined, var_5, 1, var_6, 1 );
    scripts\mp\gametypes\br.gsc::_id_12A58( self );
    level thread scripts\mp\battlechatter_mp::trysaylocalsound( self, "player_respawn" );
    scripts\mp\trials\trial_target_utility::_id_11E8D( "ui_br_transition_type", 0 );
    scripts\mp\damage::resetplayervariables();
}

usingtacmap( var_0 )
{
    return 1;
}

_id_12B1D()
{
    self endon( "disconnect" );
    self endon( "spawned_player" );
    self endon( "stop_updatePrestreamRespawn" );

    for (;;)
    {
        if ( scripts\engine\utility::ent_flag( "playerRespawn_intermission_spawned" ) )
        {
            var_0 = scripts\mp\gametypes\br_gulag.gsc::unsetreduceregendelayonkills();
            var_1 = gettime();

            if ( var_1 - self.plunder_repositoryenableuserestrictions >= getdvarfloat( "scr_bmo_spawn_fallback_hint_delay", 2.0 ) * 1000 )
            {
                var_0 = scripts\mp\gametypes\br_gulag.gsc::unsetreduceregendelayonkills( 1 );
                var_2 = scripts\mp\gametypes\br_gulag.gsc::updatex1stashhud( var_0 );
            }
        }
        else
        {
            var_0 = scripts\mp\gametypes\br_gulag.gsc::unsetreduceregendelayonkills();
            var_2 = scripts\mp\gametypes\br_gulag.gsc::updatex1stashhud( var_0 );
        }

        wait 1.0;
    }
}

initusage( var_0, var_1 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "spawned_player" );
    self notify( "fadeToGearingUp" );
    self endon( "fadeToGearingUp" );

    if ( isdefined( var_0 ) && var_0 > 0 )
        wait( var_0 );

    var_2 = 1.0;
    thread fadeoutin();
    wait( var_2 - 0.25 );
    scripts\mp\gametypes\br.gsc::convoy_left_gulag_monitor();

    if ( istrue( var_1 ) )
        scripts\mp\trials\trial_target_utility::_id_11E8D( "ui_br_transition_type", 6 );
    else
        scripts\mp\trials\trial_target_utility::_id_11E8D( "ui_br_transition_type", 2 );

    wait 0.25;

    if ( getdvarint( "scr_bmo_use_spawn_intermission_fix", 1 ) == 1 )
    {
        scripts\mp\gametypes\br_public.gsc::unload_vehicles_on_weapons_free_thread();
        var_3 = scripts\mp\gametypes\br_gulag.gsc::unsetreduceregendelayonkills();
        scripts\mp\gametypes\br_spectate.gsc::unload_vehicles_on_weapons_free();
        scripts\mp\gametypes\br.gsc::spawnintermission( var_3.origin, var_3.angles );
        scripts\mp\spectating::setdisabled();
        self.plunder_repositoryclearcountdown = var_3.origin;
        self.plunder_repositoryenableuserestrictions = gettime();
        scripts\engine\utility::ent_flag_set( "playerRespawn_intermission_spawned" );
    }
}

fadeoutin()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    scripts\mp\gametypes\br_gulag.gsc::gulagfadetoblack();
    self waittill( "spawned_player" );
    scripts\mp\gametypes\br_gulag.gsc::gulagfadefromblack();
}

_id_11F7D()
{
    level.cleanupswaploadoutflags.initial_timer = make_solution_struct();
    thread set_cp_vehicle_health_values();
}

make_solution_struct()
{
    var_0 = 2500;
    var_1 = level.br_level.br_mapcenter;
    var_2 = ( 0, randomfloatrange( 0, 360 ), 0 );
    var_3 = anglestoforward( var_2 );
    var_4 = level.br_level.br_circleradii[0] * 2;
    var_5 = var_1 + var_3 * var_4;
    var_5 = scripts\mp\gametypes\br_c130.gsc::_id_120ED( var_1, var_5 );
    var_6 = getent( "airstrikeheight", "targetname" );
    var_7 = ( var_5[0], var_5[1], var_6.origin[2] );
    var_8 = tracegroundpoint( var_7 );
    var_5 = var_8 + ( 0, 0, var_0 );
    return var_5;
}

set_cp_vehicle_health_values()
{
    var_0 = scripts\mp\objidpoolmanager::requestobjectiveid( 1 );
    level.cleanupswaploadoutflags.objectiveiconid = var_0;

    if ( var_0 != -1 )
    {
        scripts\mp\objidpoolmanager::objective_add_objective( var_0, "current", level.cleanupswaploadoutflags.initial_timer, "icon_waypoint_koth" );
        scripts\mp\objidpoolmanager::update_objective_setbackground( var_0, 0 );
        scripts\mp\objidpoolmanager::objective_playermask_hidefromall( var_0 );
    }
}

_id_11F7E()
{
    scripts\mp\flags::gameflagwait( "prematch_done" );
    var_0 = make_emp_config();
    var_1 = scripts\mp\gametypes\br_quest_util.gsc::getquesttableindex( "gt_extract_1" );

    foreach ( var_3 in level.players )
    {
        var_3 scripts\mp\gametypes\br_quest_util.gsc::_id_11EEB( var_1 );
        var_3 scripts\mp\gametypes\br_quest_util.gsc::uiobjectivesetparameter( var_0 );
    }
}

make_emp_config()
{
    var_0 = getdvarint( "scr_br_extract_xp", 5000 );
    var_1 = getdvarint( "scr_br_extract_xp_min", 2000 );
    var_2 = getdvarint( "scr_br_extract_xp_decrease", 200 );

    if ( var_1 > 0 )
        var_0 = int( max( var_1, var_0 - level.cleanupswaploadoutflags.start_chants_on_movement * var_2 ) );

    return var_0;
}

_id_12043( var_0 )
{
    var_1 = level.teamdata[var_0]["players"];

    foreach ( var_3 in var_1 )
        scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( level.cleanupswaploadoutflags.objectiveiconid, var_3 );
}

outofboundswatcher( var_0 )
{
    var_1 = level.teamdata[var_0]["players"];

    foreach ( var_3 in var_1 )
        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( level.cleanupswaploadoutflags.objectiveiconid, var_3 );
}

has_saw()
{
    level.cleanupswaploadoutflags.start_chants_on_movement++;
    level.cleanupswaploadoutflags.phaseindex setvalue( level.cleanupswaploadoutflags.start_chants_on_movement );
    level.cleanupswaploadoutflags.phaseindex thread phase_three_combat();
    level.cleanupswaploadoutflags.phase_zero_combat thread phase_three_combat();
    var_0 = make_c4_pick_up_interact();
    level.cleanupswaploadoutflags.ph_setfinalkillcamwinner setvalue( var_0 * 100 );

    foreach ( var_3, var_2 in level.teamdata )
    {
        if ( level scripts\mp\utility\game::recharge_equipment_update_state( var_3 ) )
            continue;

        if ( isdefined( var_2["teamCount"] ) && var_2["teamCount"] > 0 )
            _id_12B31( var_3 );
    }

    var_4 = make_emp_config();

    foreach ( var_6 in level.players )
    {
        if ( !reaper_missile_reload_end_time( var_6.team ) )
        {
            var_6 thread scripts\mp\hud_message::showsplash( "br_gametype_extract_extracted" );
            var_6 scripts\mp\gametypes\br_quest_util.gsc::uiobjectivesetparameter( var_4 );
        }
    }
}

_id_11F02( var_0 )
{
    level.teamdata[var_0]["extracted"] = 1;
}

reaper_missile_reload_end_time( var_0 )
{
    return istrue( level.teamdata[var_0]["extracted"] );
}

brendgame()
{
    wait 1.5;
    handleendgamesplash();
    scripts\mp\gamelogic::endgame_regularmp( level.cleanupswaploadoutflags.isassaultdrone, game["end_reason"]["objective_completed"], game["end_reason"]["br_eliminated"] );
}

handleendgamesplash()
{
    foreach ( var_1 in level.players )
    {
        if ( !reaper_missile_reload_end_time( var_1.team ) )
            var_1 scripts\mp\trials\trial_target_utility::_id_11E8D( "post_game_state", 2 );
    }
}

_id_11F94()
{
    level endon( "game_ended" );
    var_0 = 120;
    scripts\mp\flags::gameflagwait( "prematch_done" );

    if ( !istrue( level.br_infils_disabled ) )
        level waittill( "br_ready_to_jump" );

    waitframe();
    var_1 = fnlookforvehicles( &"MP_BR_INGAME/EXTRACT_COLLECT_PLUNDER", undefined, "CENTER", "CENTER", 0, -170 );
    var_1.alpha = 1;
    var_2 = scripts\mp\hud_util::createservertimer( "default", 1.5 );
    var_2 scripts\mp\hud_util::setpoint( "CENTER", "CENTER", 0, -150 );
    var_3 = getdvarint( "scr_br_extract_timecollect", 180 );

    if ( var_3 > 0 )
    {
        setomnvar( "ui_hardpoint_timer", gettime() + int( var_3 * 1000 ) );
        var_2 settimer( var_3 );
        wait( var_3 );
    }

    scripts\mp\flags::gameflagset( "collect_done" );
    var_4 = getdvarint( "scr_br_extract_timewaitactive", 180 );

    if ( var_4 > 0 )
    {
        var_1.label = &"MP_BR_INGAME/EXTRACT_HELIPADS_ACTIVE";
        var_1 thread phase_three_combat();
        setomnvar( "ui_hardpoint_timer", gettime() + int( var_4 * 1000 ) );
        var_2 settimer( var_4 );
        wait( var_4 );
    }

    scripts\mp\flags::gameflagset( "helipad_wait_done" );
    var_5 = getdvarint( "scr_br_extract_timeextract", 840 );
    var_1.label = &"MP_BR_INGAME/EXTRACT_HELIPAD";
    var_1 thread phase_three_combat();
    setomnvar( "ui_hardpoint_timer", gettime() + int( var_5 * 1000 ) );
    var_2 settimer( var_5 );
    var_6 = max( var_5 - var_0, 0 );
    wait( var_6 );
    var_7 = max( var_5 - var_6, 0 );
    var_2.color = ( 1, 0, 0 );
    var_2 thread phase_three_combat();
    thread endptui( var_7 );
    wait( var_7 );
    var_2 destroy();
    thread brendgame();
}

endptui( var_0 )
{
    level endon( "game_ended" );

    while ( var_0 > 0 )
    {
        var_1 = 0;
        var_2 = scripts\mp\gamelogic::maderecentkill( var_0 );

        if ( var_0 > 60 && var_0 % 10 == 0 || var_0 <= 60 && var_0 > 30 && var_0 % 2 == 0 || var_0 <= 30 )
            var_1 = 1;

        if ( var_1 )
        {
            foreach ( var_4 in level.players )
                var_4 playlocalsound( var_2 );
        }

        var_0 = var_0 - 1;
        wait 1;
    }
}

_id_11F92()
{
    var_0 = 155;
    var_1 = 15;
    var_2 = -3;
    var_3 = 3;

    if ( level._id_12692 )
    {
        var_4 = modifytriggerlocation();
        var_5 = &"MP_BR_INGAME/WIN_COST_TEXT";
        var_6 = var_4;
    }
    else
    {
        var_4 = make_c4_pick_up_interact();
        var_5 = &"MP_BR_INGAME/EXTRACT_COST_TEXT";
        var_6 = var_4 * 100;
    }

    level.cleanupswaploadoutflags.phase_five_combat = fnlookforvehicles( var_5, undefined, "LEFT", "CENTER", var_3, var_0, undefined, undefined, 1 );
    level.cleanupswaploadoutflags.ph_setfinalkillcamwinner = fnlookforvehicles( &"MP_BR_INGAME/EXTRACT_COST_MILLION", undefined, "LEFT", "CENTER", 65 + var_3, var_0, undefined, undefined, 1 );
    level.cleanupswaploadoutflags.phwhistletimer = fnlookforvehicles( &"MP_BR_INGAME/YOUR_TEAM_PLUNDER_TEXT", undefined, "RIGHT", "CENTER", 5 + var_2, var_0, undefined, undefined, 1 );
    var_7 = 0;
    level.cleanupswaploadoutflags.role_interaction = fnlookforvehicles( &"MP_BR_INGAME/LEADER_PLUNDER_TEXT", var_7, "CENTER", "CENTER", 0, var_0 + var_1, undefined, undefined, 1 );

    foreach ( var_9 in level.teamnamelist )
    {
        var_10 = fnlookforvehicles( &"MP_BR_INGAME/EXTRACT_PLUNDER", 0, "RIGHT", "CENTER", 70 + var_2, var_0, undefined, var_9, 1 );
        var_11 = fnlookforvehicles( &"MP_BR_INGAME/ST_PLACE", undefined, "RIGHT", "CENTER", -65 + var_2, var_0, undefined, var_9, 1 );
        var_11 setvalue( 1 );
        var_10.placement = var_11;
        _id_11F05( var_9, var_10 );
    }

    scripts\mp\flags::gameflagwait( "prematch_done" );

    if ( !istrue( level.br_infils_disabled ) )
        level waittill( "br_ready_to_jump" );

    level.cleanupswaploadoutflags.phase_five_combat.alpha = 1;
    level.cleanupswaploadoutflags.ph_setfinalkillcamwinner.alpha = 1;
    level.cleanupswaploadoutflags.phwhistletimer.alpha = 1;
    level.cleanupswaploadoutflags.role_interaction.alpha = 1;

    foreach ( var_9 in level.teamnamelist )
    {
        var_10 = mode_can_play_ending( var_9 );
        var_10.alpha = 1;
        var_10.placement.alpha = 1;
    }
}

_id_11F05( var_0, var_1 )
{
    level.teamdata[var_0]["hudPlunder"] = var_1;
    var_1.plundercount = 0;
    var_1.vehicle_showvalidlittlebirds = 0;
}

mode_can_play_ending( var_0 )
{
    return level.teamdata[var_0]["hudPlunder"];
}

fnlookforvehicles( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    if ( !isdefined( var_8 ) )
        var_8 = 1.5;

    if ( isdefined( var_7 ) )
        var_10 = newteamhudelem( var_7 );
    else if ( isdefined( var_9 ) )
        var_10 = newclienthudelem( var_9 );
    else
        var_10 = newhudelem();

    var_10.elemtype = "font";
    var_10.font = "default";
    var_10.fontscale = var_8;
    var_10.basefontscale = var_8;
    var_10.x = 0;
    var_10.y = 0;
    var_10.width = 0;
    var_10.height = int( level.fontheight * var_8 );
    var_10.xoffset = 0;
    var_10.yoffset = 0;
    var_10.children = [];
    var_10 scripts\mp\hud_util::setparent( level.uiparent );
    var_10.hidden = 0;
    var_10.alpha = 0;
    var_10 scripts\mp\hud_util::setpoint( var_2, var_3, var_4, var_5 );

    if ( isdefined( var_0 ) )
        var_10.label = var_0;

    if ( isdefined( var_1 ) )
        var_10 setvalue( var_1 );

    if ( isdefined( var_6 ) )
        var_10.color = var_6;

    return var_10;
}

mlp2_front_truck( var_0 )
{
    var_1 = 0;

    if ( !level._id_11CB4 )
    {
        var_1 = var_1 + level.teamdata[var_0]["plunderTeamTotal"];
        var_1 = var_1 + level.teamdata[var_0]["plunderInDeposit"];
    }

    var_1 = var_1 + level.teamdata[var_0]["plunderBanked"];
    return var_1;
}

mlghitlocrequiresclamp( var_0 )
{
    return level.teamdata[var_0]["plunderTeamTotal"];
}

lootchopper_oncrateuse( var_0 )
{
    return level.teamdata[var_0]["plunderBanked"];
}

_id_12174( var_0, var_1 )
{
    return var_0 > var_1;
}

next_drone_cd( var_0, var_1 )
{
    var_2 = int( min( var_1, 131072 ) );
    scripts\mp\trials\trial_target_utility::_id_11E8D( var_0, var_2 );
}

nextareanags( var_0, var_1 )
{
    var_2 = int( min( var_1, 131072 ) );
    scripts\mp\trials\trial_target_utility::_id_11E8E( var_0, var_2 );
}

vehicle_travel_player_connect_monitor()
{
    level endon( "game_ended" );
    var_0 = 0;
    var_1 = [];
    var_2 = 0;
    var_3 = 0;
    var_4 = 0;
    var_5 = 0;
    var_6 = 0;
    var_7 = 0;
    var_8 = level.override_minimap_hide != 0;
    level._id_12341 = undefined;
    level._id_12340 = undefined;
    level._id_1233E = undefined;
    level._id_1233F = undefined;
    var_9 = gettime();
    var_10 = getdvarfloat( "scr_dmz_print_error_cutoff", 30.0 );

    for (;;)
    {
        waittillframeend;
        var_11 = ( gettime() - var_9 ) / 1000;
        var_12 = level.dead_target_count && level.deadblue && level.deadgray;
        var_13 = modifytriggerlocation();
        var_0 = var_0 + level.framedurationseconds;

        if ( istrue( level._id_12B8A ) )
            var_14 = scripts\mp\flags::gameflag( "placement_updates_allowed" );
        else
            var_14 = var_0 > level._id_11D2F;

        var_15 = level._id_12052 && var_14;
        var_16 = scripts\mp\gamescore::modeaddtoteamlives();
        var_17 = level._id_12692;
        var_18 = undefined;
        var_19 = undefined;
        var_20 = undefined;
        var_21 = [];
        var_22 = [];
        var_23 = [];
        var_24 = "none";
        var_25 = "none";
        var_26 = -1;
        var_27 = -1;

        foreach ( var_29 in level.teamnamelist )
        {
            if ( level scripts\mp\utility\game::recharge_equipment_update_state( var_29 ) )
                continue;

            var_30 = mlp2_front_truck( var_29 );
            var_31 = lootchopper_oncrateuse( var_29 );
            var_32 = _id_12B32( var_30, var_29, level.cleanupswaploadoutflags.isassaultdrone );
            var_33 = migratespectators( var_29 );
            var_34 = var_16[var_29];

            if ( var_30 > var_26 )
            {
                if ( var_26 > var_27 )
                {
                    var_27 = var_26;
                    var_25 = var_24;
                }

                var_26 = var_30;
                var_24 = var_29;
            }
            else if ( var_24 != "none" )
            {
                if ( var_30 > var_27 )
                {
                    var_27 = var_30;
                    var_25 = var_29;
                }
            }

            var_35 = ( var_30 - var_31 ) * 100;
            var_36 = var_30 * 100;
            var_37 = var_36 - var_35;

            if ( var_35 < 0 )
                var_35 = 0;

            if ( var_36 >= var_13 * 0.9 )
                var_18 = var_29;
            else if ( var_36 >= var_13 * 0.75 )
                var_19 = var_29;
            else if ( var_36 >= var_13 * 0.5 )
                var_20 = var_29;

            if ( var_36 >= var_13 * level.vehicle_spawn_watchabandoned )
                thread scripts\mp\music_and_dialog::vehicle_occupancy_isfriendlytoteam();
            else if ( var_36 >= var_13 * level.vehicle_tracker )
                thread scripts\mp\music_and_dialog::vehicle_playerkilledfx();
            else if ( var_36 >= var_13 * level.vehicle_stop_moving )
                thread scripts\mp\music_and_dialog::vehicle_occupancy_hidecashbag();
            else if ( var_36 >= var_13 * level.vehicle_spawn_waitandrespawn )
                thread scripts\mp\music_and_dialog::vehicle_preventplayercollisiondamagefortimeafterexit();

            var_38 = scripts\mp\utility\teams::getfriendlyplayers( var_29, 0 );

            foreach ( var_40 in var_38 )
            {
                var_34 = var_16[var_40.team];

                if ( !var_6 )
                    var_34 = 155;

                var_40 scripts\mp\trials\trial_target_utility::_id_11E8D( "ui_br_team_placement", var_34 );
                var_40 scripts\mp\trials\trial_target_utility::_id_11E8D( "ui_br_player_position", var_34 );
                var_40 next_drone_cd( "ui_br_team_cash_banked", int( var_37 * 0.01 ) );
                var_40 next_drone_cd( "ui_br_team_cash_pockets", int( var_35 * 0.01 ) );
                var_22[var_40.guid] = var_40.plundercount;
                var_23[var_40.guid] = var_40;
            }

            if ( var_15 )
            {
                if ( var_34 == 1 )
                    var_21[var_21.size] = var_29;
                else if ( var_34 <= 5 )
                {
                    if ( var_33 > 5 )
                        showsplashtoteam( var_29, "bm_top_5" );
                }
                else if ( var_34 <= 10 )
                {
                    if ( var_33 > 10 )
                        showsplashtoteam( var_29, "bm_top_10" );
                }
            }

            if ( var_36 >= var_13 )
            {
                branalytics_plunder_placed_into_extraction( var_29 );

                if ( var_17 && level.gulagwinnertableloadout > 0 && !level.give_secondary_attachments_only )
                {
                    level thread _id_1292A( var_29, level.teamdata[var_29]["plunderBanked"] * 1000 >= var_13 );
                    continue;
                }

                if ( var_17 && level.gulagwinnertableloadout > 0 && level.give_secondary_attachments_only )
                {
                    level.playerstoptimerdelete = var_29;
                    continue;
                }

                if ( level._id_1268E && !istrue( level.exfilactive ) )
                {
                    level.exfilactive = 1;
                    level thread _id_12477( var_29 );
                    continue;
                }

                if ( !level._id_1268E && var_17 && !level.give_secondary_attachments_only )
                    level thread monitoraveragevelocityandupdate( var_29 );
            }
        }

        var_43 = [];
        var_44 = [];

        if ( level.select_reception_spawners == 1 )
            var_43 = setteamplacement( game["teamPlacements"], "up" );
        else if ( level.select_reception_spawners == 2 )
        {
            var_43[0] = var_24;
            var_44 = setteamplacement( var_22, "down" );
        }
        else
            var_44 = setteamplacement( var_22, "down" );

        level.cleanupswaploadoutflags.isassaultdrone = var_24;

        if ( var_24 == "none" )
        {
            var_1 = [];
            waitframe();
            continue;
        }

        if ( var_25 != "none" )
            nextareanags( "ui_br_cash_second", int( var_27 ) );

        nextareanags( "ui_br_cash_leader", int( var_26 ) );

        if ( !var_8 && var_26 * 100 >= var_13 * level.override_minimap_hide * 0.01 )
        {
            setomnvar( "ui_br_leader_hash_percentage_hit", 1 );
            var_8 = 1;
        }

        if ( !istrue( var_7 ) && istrue( level._id_12B8A ) )
        {
            if ( !var_2 && var_26 * 100 >= var_13 * level.setup_trap_consoles * 0.01 )
            {
                var_2 = 1;
                level._id_12341 = gettime();
                scripts\mp\flags::gameflagset( "placement_updates_allowed" );

                if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
                    _id_1205D( "bm_vips_marked" );
            }

            if ( !var_3 && ( level._id_11CB4 || var_26 * 100 >= var_13 * level.setup_train_entarray_composite * 0.01 ) )
            {
                var_3 = 1;
                level._id_12340 = gettime();
                scripts\mp\flags::gameflagset( "activate_cash_lzs" );

                if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
                    scripts\mp\gametypes\br_public.gsc::brleaderdialog( "extract_enabled", 0, undefined, undefined, undefined, "bm" );
            }

            if ( !var_4 && var_26 * 100 >= var_13 * level.setup_train_array * 0.01 )
            {
                var_4 = 1;
                level._id_1233E = gettime();
                level.br_level.c130_speedoverride = 3044;
                scripts\mp\flags::gameflagset( "activate_cash_drops" );
            }

            if ( !var_5 && ( istrue( level.calloutmarkerpingvo_canplaywithspamavoidance ) || var_26 * 100 >= var_13 * level.setup_train_entarray * 0.01 ) )
            {
                var_5 = 1;
                level._id_1233F = gettime();
                scripts\mp\flags::gameflagset( "activate_cash_helis" );

                if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
                    scripts\mp\gametypes\br_public.gsc::brleaderdialog( "event_chopper", 0, undefined, undefined, undefined, "bm" );
            }

            if ( !var_6 && var_26 * 100 >= var_13 * level.overridepointsneeded * 0.01 )
                var_6 = 1;

            if ( var_2 && var_3 && var_4 && var_5 )
                var_7 = 1;
        }

        if ( !var_15 || var_26 == 0 )
        {
            waitframe();
            continue;
        }

        if ( level.select_reception_spawners > 0 )
        {
            if ( level.grenade_owner_name || istrue( level.vehiclelinkto ) )
            {
                _id_12B08( var_22, var_44, var_23, var_43 );
                level.vehiclelinkto = 0;
            }
        }
        else if ( level.grenade_owner_name || istrue( level.vehiclelinkto ) )
        {
            _id_12B08( var_22, var_44, var_23 );
            level.vehiclelinkto = 0;
        }

        foreach ( var_29 in var_21 )
        {
            if ( !scripts\engine\utility::array_contains( var_1, var_29 ) )
            {
                if ( istrue( level._id_1277F[var_29] ) )
                {
                    if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
                        showsplashtoteam( var_29, "bm_top_team_regained" );

                    continue;
                }

                if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
                    showsplashtoteam( var_29, "bm_top_team" );

                level._id_1277F[var_29] = 1;
            }
        }

        if ( var_21.size > 0 )
        {
            foreach ( var_29 in var_1 )
            {
                if ( !scripts\engine\utility::array_contains( var_21, var_29 ) )
                    showsplashtoteam( var_29, "bm_top_team_lost" );
            }
        }

        var_1 = var_21;
        level._id_1277E = var_24;
        level.wait_for_next_hack_complete = var_16;

        if ( !var_12 )
        {
            if ( !level.deadgray && isdefined( var_18 ) )
            {
                level.deadgray = 1;

                if ( var_11 < var_10 )
                    level wait_for_tanks_almost_gone( "90 Percent", var_11 );

                if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
                {
                    if ( !level.give_launchers_xmags )
                    {
                        _id_1205E( var_18, "bm_first_to_90_them" );
                        showsplashtoteam( var_18, "bm_first_to_90_us" );
                        level thread scripts\mp\gametypes\br_public.gsc::cloudanimfx( "gamestate_90_perc_first", var_18, 1, undefined, "bm" );

                        foreach ( var_50 in level.teamnamelist )
                        {
                            if ( var_50 != var_18 )
                                level thread scripts\mp\gametypes\br_public.gsc::cloudanimfx( "gamestate_90_perc_enemy", var_50, 1, undefined, "bm" );
                        }
                    }
                }
            }
            else if ( !level.deadblue && isdefined( var_19 ) )
            {
                level.deadblue = 1;

                if ( var_11 < var_10 )
                    level wait_for_tanks_almost_gone( "75 Percent", var_11 );

                if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
                {
                    if ( !level.give_launchers_xmags )
                    {
                        _id_1205E( var_19, "bm_first_to_75_them" );
                        showsplashtoteam( var_19, "bm_first_to_75_us" );
                        level thread scripts\mp\gametypes\br_public.gsc::cloudanimfx( "gamestate_75_perc_first", var_19, 1, undefined, "bm" );

                        foreach ( var_50 in level.teamnamelist )
                        {
                            if ( var_50 != var_19 )
                                level thread scripts\mp\gametypes\br_public.gsc::cloudanimfx( "gamestate_75_perc_enemy", var_50, 1, undefined, "bm" );
                        }
                    }
                }
            }
            else if ( !level.dead_target_count && isdefined( var_20 ) )
            {
                level.dead_target_count = 1;

                if ( var_11 < var_10 )
                    level wait_for_tanks_almost_gone( "50 Percent", var_11 );

                if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
                {
                    if ( !level.give_launchers_xmags )
                    {
                        _id_1205E( var_20, "bm_first_to_50_them" );
                        showsplashtoteam( var_20, "bm_first_to_50_us" );
                        level thread scripts\mp\gametypes\br_public.gsc::cloudanimfx( "gamestate_50_perc_first", var_20, 1, undefined, "bm" );

                        foreach ( var_50 in level.teamnamelist )
                        {
                            if ( var_50 != var_20 )
                                level thread scripts\mp\gametypes\br_public.gsc::cloudanimfx( "gamestate_50_perc_enemy", var_50, 1, undefined, "bm" );
                        }
                    }
                }
            }
        }

        waitframe();
    }
}

branalytics_plunder_placed_into_extraction( var_0 )
{
    if ( !isdefined( level.branalytics_plunder_extraction_success ) )
        level.branalytics_plunder_extraction_success = [];

    if ( scripts\engine\utility::array_contains( level.branalytics_plunder_extraction_success, var_0 ) )
        return;

    var_1 = scripts\mp\utility\teams::getteamdata( var_0, "players" );
    var_2 = scripts\mp\gametypes\br_plunder.gsc::fogenabled();
    var_2.triggereliminatedoverlay = 0;

    foreach ( var_4 in var_1 )
    {
        if ( isdefined( var_4.plundercount ) && var_4.plundercount > 0 )
            var_4 scripts\mp\gametypes\br_plunder.gsc::updatelootleadermarks( var_4.plundercount, undefined, var_2 );
    }

    level.branalytics_plunder_extraction_success[level.branalytics_plunder_extraction_success.size] = var_0;
}

tank_watchpiggybackexploit()
{
    level thread scripts\mp\gametypes\br_plunder.gsc::wait_unload_chopper( level.tank_watchpiggybackexploit );
}

transient_world_proxy_cull_playspace_proxies()
{
    scripts\mp\flags::gameflagwait( "prematch_done" );

    if ( isdefined( level._id_11D2F ) )
        wait( level._id_11D2F );

    scripts\mp\flags::gameflagset( "placement_updates_allowed" );
}

migratespectators( var_0 )
{
    if ( isdefined( level.wait_for_next_hack_complete ) )
        return level.wait_for_next_hack_complete[var_0];

    return -1;
}

_id_1205D( var_0 )
{
    foreach ( var_2 in level.players )
        var_2 scripts\mp\hud_message::showsplash( var_0 );
}

showsplashtoteam( var_0, var_1 )
{
    foreach ( var_3 in level.teamdata[var_0]["players"] )
        var_3 scripts\mp\hud_message::showsplash( var_1 );
}

_id_1205E( var_0, var_1 )
{
    foreach ( var_3 in level.players )
    {
        if ( isdefined( var_3 ) && var_3.team != var_0 )
            var_3 scripts\mp\hud_message::showsplash( var_1 );
    }
}

_id_12929( var_0 )
{
    scripts\mp\gamelogic::resumetimer();
    level.starttime = gettime();
    level.discardtime = 0;
    level.timerpausetime = 0;
    var_1 = getdvarfloat( "scr_bmo_900k_timer", 10 );
    var_2 = "scr_" + scripts\mp\utility\game::getgametype() + "_timelimit";
    level.watchdvars[var_2].value = var_1;
    level.overridewatchdvars[var_2] = var_1;
}

_id_12B31( var_0 )
{
    var_1 = mode_can_play_ending( var_0 );
    var_2 = mlp2_front_truck( var_0 );
    var_3 = make_c4_pick_up_interact();

    if ( var_2 >= var_3 && var_1.color != ( 0, 1, 0 ) )
    {
        var_1.color = ( 0, 1, 0 );
        var_4 = level.teamdata[var_0]["players"];

        foreach ( var_6 in var_4 )
            var_6 playlocalsound( "br_plunder_atm_deposit_gtr" );
    }
}

hacks_started( var_0, var_1 )
{
    var_2 = level.teamdata[var_1]["players"];

    foreach ( var_4 in var_2 )
    {
        if ( var_0 > 0 )
        {
            if ( isdefined( var_4.phsettings ) )
            {
                var_5 = gettime() - var_4.phsettings;

                if ( var_5 <= 6000 )
                    break;
            }

            var_4.phsettings = gettime();

            if ( isalive( var_4 ) )
                var_4 playlocalsound( "br_plunder_atm_use" );

            continue;
        }

        var_4.phsettings = undefined;
        var_4 stoplocalsound( "br_plunder_atm_use" );
    }
}

monitoraveragevelocityandupdate( var_0 )
{
    if ( istrue( level._id_12924 ) )
        return;

    if ( !istrue( level._id_12924 ) )
        level thread wait_for_time_or_notify();

    level._id_12924 = 1;
    level thread scripts\mp\gamelogic::endgame( var_0, game["end_reason"]["dmz_plunder_win"], game["end_reason"]["dmz_plunder_loss"], 0, 1 );
}

playerdropplunderondeath( var_0, var_1 )
{
    if ( scripts\mp\utility\game::questtimerupdate( self ) )
        return 1;

    if ( istrue( level.gameended ) )
        return 1;

    if ( istrue( self.propgetlocation ) )
    {
        var_2 = self.plundercount;
        var_3 = self.plundercount;
        var_4 = 0;
    }
    else
    {
        if ( isdefined( level.short_term_goal ) && self.plundercount < level.short_term_goal )
        {
            var_4 = 0;
            var_2 = self.plundercount;
            var_3 = self.plundercount;
        }
        else
        {
            var_4 = int( self.plundercount * ( ( 100 - level.tomastrike_findoptimallaunchpos ) * 0.01 ) );
            var_2 = self.plundercount - var_4;
            var_3 = var_2;
        }

        if ( istrue( level.calloutmarkerpingvo_canplaywithspamavoidance ) )
        {
            if ( var_2 <= level.care_packages_unusable_think && ( !isdefined( var_1 ) || var_1 != self ) )
                var_2 = level.care_packages_unusable_think;
        }
        else if ( var_2 <= level.cardstruct && ( !isdefined( var_1 ) || var_1 != self ) )
            var_2 = level.cardstruct;

        if ( isdefined( level.setdragonsbreathburning ) )
        {
            if ( var_2 >= level.setdragonsbreathburning )
            {
                var_2 = level.setdragonsbreathburning;
                var_3 = var_2;
                var_4 = self.plundercount - level.setdragonsbreathburning;
            }
        }
    }

    self.plundercountondeath = var_4;

    if ( var_3 > 0 )
        scripts\mp\gametypes\br_plunder.gsc::updateondamagepredamagemodrelics( var_3 );

    if ( var_2 >= level.vehicle_spawn_mp_gamemodesupportsabandonedtimeout )
        playfx( scripts\engine\utility::getfx( "money" ), self.origin + ( 0, 0, 32 ) );

    var_5 = var_2;

    if ( istrue( self._id_12EC8 ) )
        var_5 = int( var_2 * level.init_pipe_room_obj );

    var_6 = var_5;

    if ( istrue( level.calloutmarkerpingvo_canplaywithspamavoidance ) && ( !isdefined( var_1 ) || self != var_1 ) )
    {
        var_6 = int( var_5 * level.tank_watchpiggybackexploit );

        if ( isdefined( level.setdeleteabletimer ) && var_6 > level.setdeleteabletimer )
            var_6 = level.setdeleteabletimer;
    }

    if ( scripts\mp\gametypes\br_public.gsc::prophasclonesleft() && istrue( self.detonation_time ) )
        var_6 = int( var_6 + self.detonation_time );

    var_7 = dropplunderbyrarity( var_6, var_0 );

    foreach ( var_9 in var_7 )
        var_9.selfrevivebuttonpressed = "combat";

    if ( scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
        level notify( "victim_death_drop", self, var_1, var_7 );

    if ( isdefined( var_1 ) && self == var_1 || !level.killcam )
        scripts\mp\trials\trial_target_utility::_id_11E8D( "ui_br_plunder_dropped", var_3 );
    else
        self.vfx = var_3;

    scripts\mp\gametypes\br_analytics.gsc::_id_127D1( self, "combat", var_3 * -1 );

    if ( isdefined( level.select_top_roof_spawners ) && scripts\engine\utility::array_contains( level.select_top_roof_spawners, self ) )
        playfx( scripts\engine\utility::getfx( "money" ), self.origin + ( 0, 0, 64 ) );

    return 1;
}

successfulteam()
{
    if ( isdefined( self.vfx ) )
    {
        scripts\mp\trials\trial_target_utility::_id_11E8D( "ui_br_plunder_dropped", int( self.vfx ) );
        self.vfx = undefined;
    }
}

dropplunderbyrarity( var_0, var_1 )
{
    if ( !istrue( level.br_plunder_enabled ) )
        return;

    var_2 = [];
    var_3 = [];
    var_4 = 0;

    for ( var_5 = level.br_plunder.warp_player_debug.size - 1; var_5 >= 0; var_5-- )
    {
        var_3[var_5] = int( var_0 / level.br_plunder.warp_player_debug[var_5] );
        var_4 = var_4 + var_3[var_5];

        if ( var_0 <= 0 )
            break;
        else
            var_0 = var_0 - var_3[var_5] * level.br_plunder.warp_player_debug[var_5];
    }

    for ( var_6 = level.br_plunder.warp_player_debug.size - 1; var_6 >= 0; var_6-- )
    {
        if ( !isdefined( var_3[var_6] ) )
            continue;

        for ( var_7 = 0; var_7 < var_3[var_6]; var_7++ )
        {
            var_8 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_1, self.origin, self.angles, self );
            var_9 = scripts\mp\gametypes\br_pickups.gsc::spawnpickup( level.br_plunder.names[var_6], var_8, level.br_plunder.warp_player_debug[var_6], 1 );
            scripts\mp\gametypes\br_plunder.gsc::showassassinationtargethud( level.br_plunder.names[var_6], 1 );

            if ( isdefined( var_9 ) )
            {
                var_2[var_2.size] = var_9;

                if ( scripts\mp\gametypes\br_plunder.gsc::inplunderlivelobby() )
                    level.br_plunder_ents[level.br_plunder_ents.size] = var_9;
            }
        }
    }

    level.br_plunder.vehicle_occupancy_isenemytoteam = level.br_plunder.vehicle_occupancy_isenemytoteam + var_4;
    level.br_plunder.vehicle_register_on_level = level.br_plunder.vehicle_register_on_level + var_0;
    level thread scripts\mp\gametypes\br_plunder.gsc::dropplundersounds( self.origin, var_2.size );
    return var_2;
}

make_c4_pick_up_interact()
{
    if ( level.grenade_structs > 0 )
        var_0 = int( max( level.grenade_structs, level.grenade_menu_kill - level.cleanupswaploadoutflags.start_chants_on_movement * level.grenade_obj ) );

    return level.grenade_menu_kill;
}

modifytriggerlocation()
{
    return level.ground_detection_think;
}

vault_assault_infil( var_0 )
{
    if ( self.plundercount < var_0 )
        var_0 = self.plundercount;

    if ( !isdefined( self.vehicle_spawn_initdev ) )
        self.vehicle_spawn_initdev = 0;

    self.vehicle_spawn_initdev = self.vehicle_spawn_initdev + var_0;
    scripts\mp\gametypes\br_plunder.gsc::playersetplundercount( self.plundercount - var_0 );
    return var_0;
}

_id_1267E( var_0 )
{
    var_1 = level.teamdata[var_0]["players"];

    foreach ( var_3 in var_1 )
        var_3.vehicle_spawn_initdev = 0;
}

_id_12694( var_0 )
{
    var_1 = level.teamdata[var_0]["players"];

    foreach ( var_3 in var_1 )
    {
        if ( isdefined( var_3.vehicle_spawn_initdev ) )
        {
            var_3 scripts\mp\gametypes\br_plunder.gsc::updateprestreamrespawn( var_3.vehicle_spawn_initdev );
            var_3.vehicle_spawn_initdev = 0;
            var_3 iprintlnbold( "Extraction refunded, chopper shot down." );
        }
    }
}

phase_three_combat()
{
    self endon( "death" );

    if ( istrue( self.waittillspectating ) )
        return;

    var_0 = 0.5;
    var_1 = 4;
    self.waittillspectating = 1;
    var_2 = self.fontscale;
    self changefontscaleovertime( var_0 );
    self.fontscale = var_1;
    wait( var_0 );
    self changefontscaleovertime( var_0 );
    self.fontscale = var_2;
    self.waittillspectating = undefined;
}

drophelicrate( var_0 )
{
    var_1 = spawn( "script_model", var_0.origin );
    var_1 setmodel( "military_skyhook_backpack" );
    var_2 = var_0.origin;
    var_3 = ( var_2[0], var_2[1], -12000 );
    var_4 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 1, 1, 0 );
    var_5 = scripts\engine\trace::ray_trace( var_2, var_3, var_0, var_4 );
    var_6 = var_5["position"];
    var_7 = var_2[2] - var_6[2];

    if ( var_7 > 0 )
    {
        var_8 = sqrt( 2 * var_7 / 800 );
        var_1 moveto( var_6, var_8, var_8, 0 );
        wait( var_8 );
    }

    var_1.origin = var_6;
    playfx( scripts\engine\utility::getfx( "airdrop_crate_impact" ), var_6 );
    var_1 cratedropplunder();
    var_1 delete();
}

cratedropplunder()
{
    var_0 = make_c4_pick_up_interact();
    var_1 = scripts\mp\gametypes\br_pickups.gsc::playersetattractiontime();
    scripts\mp\gametypes\br_plunder.gsc::dropplunderbyrarity( var_0, var_1 );
}

damagestateref( var_0, var_1, var_2 )
{
    var_3 = var_0 * 0.0000157828;
    var_4 = 0.5 * var_2;
    var_5 = var_1;
    var_6 = -1 * var_3;
    var_7 = ( -1 * var_5 + sqrt( var_5 * var_5 - 4 * var_4 * var_6 ) ) / ( 2 * var_4 );
    var_7 = var_7 * 3600;
    var_7 = var_7 + 1.5;
    return var_7;
}

damagestatedata( var_0 )
{
    var_1 = damagestateref( 30000, 100, 125 );
    var_2 = damagestateref( var_0, 25.0, 31.25 );
    var_3 = var_1 + var_2;
    return var_3;
}

opennukecrate( var_0, var_1 )
{
    var_2 = gettime() + int( var_1 * 1000 );
    var_3 = level.teamdata[self.team]["alivePlayers"];

    foreach ( var_5 in var_3 )
    {
        var_5 scripts\mp\trials\trial_target_utility::_id_11E8D( "ui_br_plunder_extract_state", var_0 );
        var_5 scripts\mp\trials\trial_target_utility::_id_11E8D( "ui_br_plunder_extract_end_time", var_2 );
    }
}

onplayerconnectrisk()
{
    if ( !isdefined( self.plunder ) )
        return;

    level thread scripts\mp\gametypes\br_public.gsc::cloudanimfx( "plunder_extract_success", self.team, 1 );
    var_0 = 0;
    var_1 = 0;

    foreach ( var_3 in self.plunder )
    {
        var_0 = var_0 + var_3.plundercount;

        if ( var_3.player.team != self.team )
            var_1 = 1;
    }

    scripts\mp\gametypes\br_analytics.gsc::cinderblock_damage_monitor( self.plunder.size, var_0, "little_bird", var_1, self.endpoint );
    level.br_plunder.initcprooftopcrate = level.br_plunder.initcprooftopcrate + var_0;
    level.br_plunder.initcpammoarmorcrate++;
    scripts\mp\gametypes\br_plunder.gsc::init_ai_kill_params_for_events();
}

heliusecleanup()
{
    if ( isdefined( self.usable ) )
    {
        level.br_depots = scripts\engine\utility::array_remove( level.br_depots, self.usable );
        self.usable = undefined;
    }
}

helicleanupdepotonleaving( var_0 )
{
    self.usable endon( "death" );
    scripts\engine\utility::waittill_either( "leaving", "death" );
    heliusecleanup();
}

helicreateextractvfx( var_0 )
{
    self.vfxent = spawn( "script_model", var_0 );
    self.vfxent setmodel( "scr_smoke_grenade" );
    self.vfxent.angles = ( 0, 90, 90 );
    self.vfxent playloopsound( "smoke_carepackage_smoke_lp" );
    self.vfxent setscriptablepartstate( "smoke", "on" );
}

helicleanupextract( var_0 )
{
    if ( isdefined( self.vfxent ) )
    {
        self.vfxent stoploopsound();
        self.vfxent delete();
    }

    if ( istrue( var_0 ) && isdefined( self.site ) )
        self.site setscriptablepartstate( self.site.type, self.site.allassassin_updatewait );
}

onriskplayerkilled()
{
    self endon( "death" );

    if ( !isdefined( self.vfxent ) )
        return;

    wait 5;
    self.vfxent endon( "death" );
    self.vfxent setscriptablepartstate( "smoke", "dissipate" );
    self.vfxent playsound( "smoke_canister_tail_dissipate" );
    wait 1;
    self.vfxent stoploopsound();
    wait 4.5;
    self.vfxent delete();
}

spawnheli( var_0, var_1, var_2, var_3 )
{
    var_4 = vectortoangles( var_2 - var_1 );
    var_5 = 99;
    var_6 = scripts\cp_mp\vehicles\vehicle_tracking::_spawnhelicopter( var_0, var_1, var_4, "veh_apache_plunder_mp", "veh8_mil_air_mindia8_plunder_x" );

    if ( !isdefined( var_6 ) )
        return;

    var_7 = var_2 * ( 1, 1, 0 );
    var_6.damagecallback = ::callback_vehicledamage;
    var_6.speed = 50;
    var_6.accel = 99999;
    var_6.health = 1000;
    var_6.maxhealth = var_6.health;
    var_6.team = var_0.team;
    var_6.owner = var_0;
    var_6.defendloc = var_2;
    var_6.lifeid = 0;
    var_6.flaresreservecount = var_5;
    var_6.pathgoal = var_2;
    var_6.teleport_entities_inside_subway_car = var_3;
    var_6.endpoint = var_7;
    var_6.mortars_set_player_targeted = var_4[1];
    var_6.vehiclename = "magma_plunder_chopper";
    var_6 setcandamage( 1 );
    var_6 setmaxpitchroll( 10, 25 );
    var_6 vehicle_setspeed( var_6.speed, var_6.accel );
    var_6 sethoverparams( 50, 100, 50 );
    var_6 setturningability( 0.05 );
    var_6 setyawspeed( 45, 25, 25, 0.5 );
    var_6 setotherent( var_0 );
    _id_122F4( var_6 );
    var_6 thread scripts\mp\killstreaks\flares::flares_handleincomingstinger( undefined, undefined );
    var_6 thread old_accuracy();
    var_6 thread handledestroydamage();
    var_6 thread onprematchstarted2();
    return var_6;
}

_id_122F4( var_0 )
{
    var_1 = spawn( "script_model", ( 0, 0, 0 ) );
    var_1 setmodel( "br_plunder_extraction_delivery_rope" );
    var_1 linkto( var_0, "side_door_l_jnt", ( 11, 20, 42 ), ( 0, 180, 0 ) );
    var_2 = spawn( "script_model", ( 0, 0, 0 ) );
    var_2 setmodel( "br_plunder_extraction_delivery_bag" );
    var_2 linkto( var_1, "dyn_rope_end", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_0.rope = var_1;
    var_0.crate = var_2;
}

onprematchstarted2()
{
    self endon( "heli_gone" );
    self endon( "swapped" );
    var_0 = self.owner;
    var_1 = self.team;
    self waittill( "death", var_2, var_3, var_4, var_5 );
    _id_12694( var_1 );
    onplayerdamaged_func();

    if ( !isdefined( self ) )
        return;

    if ( !isdefined( self.largeprojectiledamage ) && !istrue( self.isdepot ) )
    {
        self vehicle_setspeed( 25, 5 );
        thread onplayerrespawn( 75 );
        scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 2.7 );
    }

    onstun( var_2 );
}

onplayerdamaged_func()
{
    if ( isdefined( self.rope ) )
        self.rope delete();

    if ( isdefined( self.crate ) )
        self.crate delete();
}

onstun( var_0 )
{
    var_1 = self gettagorigin( "tag_origin" ) + ( 0, 0, 40 );
    self radiusdamage( var_1, 256, 140, 70, var_0, "MOD_EXPLOSIVE" );
    playfx( scripts\engine\utility::getfx( "little_bird_explode" ), var_1, anglestoforward( self.angles ), anglestoup( self.angles ) );
    playsoundatpos( var_1, "veh_chopper_support_crash" );
    earthquake( 0.4, 800, var_1, 0.7 );
    playrumbleonposition( "grenade_rumble", var_1 );
    physicsexplosionsphere( var_1, 500, 200, 1 );
    self notify( "explode" );
    wait 0.35;
    level thread scripts\mp\gametypes\br.gsc::_id_1269B( "br_gametype_extract_heli_shot_down", self.owner, self.owner.team );
    helicleanupextract( 1 );
    onprematchfadedone2();
}

onprematchfadedone2()
{
    scripts\cp_mp\vehicles\vehicle_tracking::_deletevehicle( self );
}

onplayerrespawn( var_0 )
{
    self endon( "explode" );
    self notify( "heli_crashing" );
    self setvehgoalpos( self.origin + ( 0, 0, 100 ), 1 );
    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 1.5 );
    self setyawspeed( var_0, var_0, var_0 );
    self settargetyaw( self.angles[1] + var_0 * 2.5 );
}

handledestroydamage()
{
    self endon( "death" );
    self endon( "leaving" );
    self endon( "swapped" );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13 );
        var_9 = scripts\mp\utility\weapon::mapweapon( var_9, var_13 );

        if ( ( var_9.basename == "aamissile_projectile_mp" || var_9.basename == "nuke_mp" ) && var_4 == "MOD_EXPLOSIVE" && var_0 >= self.health )
        {
            callback_vehicledamage( var_1, var_1, 9001, 0, var_4, var_9, var_3, var_2, var_3, 0, 0, var_7 );
            helicleanupextract( 1 );
        }
    }
}

callback_vehicledamage( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12 )
{
    if ( isdefined( var_1 ) )
    {
        if ( isdefined( var_1.owner ) )
            var_1 = var_1.owner;
    }

    if ( ( var_1 == self || isdefined( var_1.pers ) && var_1.pers["team"] == self.team && !level.friendlyfire && level.teambased ) && var_1 != self.owner )
        return;

    if ( self.health <= 0 )
        return;

    var_2 = scripts\mp\utility\killstreak::getmodifiedantikillstreakdamage( var_1, var_5, var_4, var_2, self.maxhealth, 3, 4, 5 );
    scripts\mp\killstreaks\killstreaks::killstreakhit( var_1, var_5, self, var_4, var_2 );
    var_1 scripts\mp\damagefeedback::updatedamagefeedback( "" );

    if ( self.health - var_2 <= 900 && ( !isdefined( self.smoking ) || !self.smoking ) )
        self.smoking = 1;

    self vehicle_finishdamage( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11 );
}

onweapondroppickedup()
{
    self endon( "death" );
    self notify( "leaving" );
    self.leaving = 1;
    self setvehgoalpos( self.pathgoal, 1 );
    self settargetyaw( self.mortars_set_player_targeted );
    opennukecrate( 3, self.isloadinggulag );
    self waittill( "goal" );
    self vehicle_setspeed( self.speed, self.accel );
    self setvehgoalpos( self.teleport_entities_inside_subway_car, 1 );
    self settargetyaw( self.mortars_set_player_targeted );
    self waittill( "goal" );
    self stoploopsound();
    onplayerconnectrisk();
    opennukecrate( 0, 0 );
    self notify( "heli_gone" );
    onprematchfadedone2();
}

helidescend( var_0, var_1 )
{
    self endon( "death" );
    var_2 = var_0[0];
    var_3 = var_0[1];
    var_4 = ( var_2, var_3, var_1 );
    self setvehgoalpos( var_4, 1 );
    self settargetyaw( self.mortars_set_player_targeted );
    self vehicle_setspeed( 25.0, 31.25 );
    thread onquesttablethide();
    thread onriotshieldstow_force();
    self waittill( "goal" );
    self sethoverparams( 1, 1 );
    wait 1;
    self sethoverparams( 25, 20, 10 );
}

infiltransistioning()
{
    return isalive( self ) && ( scripts\common\vehicle::isvehicle() || isdefined( self.classname ) && self.classname == "script_vehicle" );
}

onquesttablethide()
{
    self endon( "leaving" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "touch", var_0 );

        if ( isdefined( var_0 ) && var_0 infiltransistioning() )
            var_0 dodamage( var_0.health, self.origin, var_0, var_0, "MOD_CRUSH" );
    }
}

onriotshieldstow_force()
{
    self endon( "leaving" );
    self endon( "death" );
    var_0 = 70;
    var_1 = -80;
    var_2 = 150;
    var_3 = 25;
    var_4 = -100;

    for (;;)
    {
        var_5 = getentarrayinradius( "script_vehicle", "classname", self.origin, getdvarfloat( "test_radius", 400 ) );

        if ( var_5.size <= 1 )
        {
            wait 0.5;
            continue;
        }

        var_6 = scripts\engine\trace::create_vehicle_contents();
        var_7 = anglestoforward( self.angles );
        var_8 = self.origin + var_7 * getdvarfloat( "test_f", var_2 ) + ( 0, 0, getdvarfloat( "test_d", var_1 ) );
        var_9 = scripts\engine\trace::sphere_trace( var_8, var_8 + ( 0, 0, 1 ), var_0, self, var_6 );
        var_10 = var_9["entity"];

        if ( isdefined( var_10 ) && var_10 infiltransistioning() )
        {
            var_10 dodamage( var_10.health, self.origin, var_10, var_10, "MOD_CRUSH" );
            waitframe();
            continue;
        }

        var_8 = self.origin + var_7 * getdvarfloat( "test_m", var_3 ) + ( 0, 0, getdvarfloat( "test_d", var_1 ) );
        var_9 = scripts\engine\trace::sphere_trace( var_8, var_8 + ( 0, 0, 1 ), var_0, self, var_6 );
        var_10 = var_9["entity"];

        if ( isdefined( var_10 ) && var_10 infiltransistioning() )
        {
            var_10 dodamage( var_10.health, self.origin, var_10, var_10, "MOD_CRUSH" );
            waitframe();
            continue;
        }

        var_8 = self.origin + var_7 * getdvarfloat( "test_b", var_4 ) + ( 0, 0, getdvarfloat( "test_d", var_1 ) );
        var_9 = scripts\engine\trace::sphere_trace( var_8, var_8 + ( 0, 0, 1 ), var_0, self, var_6 );
        var_10 = var_9["entity"];

        if ( isdefined( var_10 ) && var_10 infiltransistioning() )
        {
            var_10 dodamage( var_10.health, self.origin, var_10, var_10, "MOD_CRUSH" );
            waitframe();
            continue;
        }

        waitframe();
    }
}

tracegroundheight( var_0 )
{
    var_1 = 125;
    var_2 = tracegroundpoint( var_0, 100, [ self ] );
    var_3 = var_2[2];
    var_4 = var_3 + var_1;
    return var_4;
}

tracegroundpoint( var_0, var_1, var_2 )
{
    var_3 = -99999;
    var_4 = ( var_0[0], var_0[1], var_3 );
    var_5 = scripts\engine\trace::create_world_contents();
    var_6 = undefined;

    if ( isdefined( var_1 ) )
        var_6 = scripts\engine\trace::sphere_trace( var_0, var_4, var_1, var_2, var_5 );
    else
        var_6 = scripts\engine\trace::ray_trace( var_0, var_4, var_2, var_5 );

    return var_6["position"];
}

heliwatchgameendleave()
{
    self endon( "death" );
    self endon( "leaving" );
    level waittill( "game_ended" );
    thread onweapondroppickedup();
}

playersetiszombie()
{
    var_0 = [];

    if ( scripts\cp_mp\utility\game_utility::prophidetime() )
    {
        var_0[var_0.size] = ( -33750, -36000, 155 );
        var_0[var_0.size] = ( -41550, -7950, 515 );
        var_0[var_0.size] = ( -37500, 15350, 1130 );
        var_0[var_0.size] = ( -31950, 52015, 2265 );
        var_0[var_0.size] = ( -18510, 64815, 1940 );
        var_0[var_0.size] = ( 15565, 60050, 2680 );
        var_0[var_0.size] = ( 44400, 39255, -50 );
        var_0[var_0.size] = ( 59780, 13800, 555 );
        var_0[var_0.size] = ( 61200, -8445, 30 );
        var_0[var_0.size] = ( 59325, -38390, -210 );
        var_0[var_0.size] = ( 8660, -36630, -640 );
    }
    else
    {
        switch ( level.mapname )
        {
            case "mp_br_mechanics":
                var_0[var_0.size] = ( 1500, 1500, 0 );
                var_0[var_0.size] = ( 2500, 1500, 0 );
                var_0[var_0.size] = ( 3500, 1500, 0 );
                var_0[var_0.size] = ( 4500, 1500, 0 );
                break;
            case "mp_mb_tut":
                break;
        }
    }

    level.initdismembermentlist = var_0;
    level.initcircledata = [];
    level thread skipscriptable();
}

fly_toward_retreat_struct( var_0 )
{

}

skipscriptable()
{
    scripts\mp\flags::gameflagwait( "prematch_done" );

    foreach ( var_1 in level.initdismembermentlist )
    {
        var_2 = scripts\mp\objidpoolmanager::requestobjectiveid( 1 );

        if ( var_2 != -1 )
        {
            scripts\mp\objidpoolmanager::objective_add_objective( var_2, "active", var_1, "icon_waypoint_flag" );
            scripts\mp\objidpoolmanager::update_objective_setbackground( var_2, 0 );
            scripts\mp\objidpoolmanager::objective_playermask_hidefromall( var_2 );
            scripts\mp\objidpoolmanager::objective_playermask_showtoall( var_2 );
        }

        level thread _id_122BE( var_1 );
    }

    for (;;)
    {
        foreach ( var_1 in level.initdismembermentlist )
        {
            var_5 = scripts\mp\utility\player::getplayersinradius( var_1, 300 );

            foreach ( var_7 in var_5 )
            {
                if ( !scripts\engine\utility::array_contains( level.initcircledata, var_7 ) && !istrue( var_7.initcrossbowusage ) )
                    var_7 init_tut_doors( var_1 );
            }
        }

        foreach ( var_7 in level.initcircledata )
        {
            if ( distancesquared( var_7.origin, var_7.initdialog ) > 90000 )
            {
                var_7 init_trigger_spawners();
                continue;
            }

            var_7.initdropbagvo = var_7.initdropbagvo - level.framedurationseconds;

            if ( var_7.initdropbagvo <= 0.0 )
                var_7 init_turrets();
        }

        waitframe();
    }
}

_id_122BE( var_0 )
{
    var_1 = scripts\engine\utility::drop_to_ground( var_0, 50, -200, ( 0, 0, 1 ) );
    var_2 = spawn( "script_model", var_1 + ( 0, 0, 3 ) );
    var_2 setmodel( "scr_smoke_grenade" );
    wait 1.0;
    playfxontag( scripts\engine\utility::getfx( "vfx_smk_signal_red" ), var_2, "tag_fx" );
    var_2 playloopsound( "mp_flare_burn_lp" );
}

init_tut_doors( var_0 )
{
    self iprintlnbold( "Extraction Start!" );
    level.initcircledata = scripts\engine\utility::array_add( level.initcircledata, self );
    self.initdialog = var_0;
    self.initdropbagvo = 10;
    thread _id_12044();
}

_id_12044()
{
    self endon( "death_or_disconnect" );
    self endon( "extactionCancel" );

    while ( self.initdropbagvo > 0 )
    {
        self iprintlnbold( "Extracting in " + scripts\engine\math::round_float( self.initdropbagvo, 1 ) );
        waitframe();
    }
}

init_trigger_spawners()
{
    self notify( "extactionCancel" );
    self iprintlnbold( "Extraction Canceled!" );
    level.initcircledata = scripts\engine\utility::array_remove( level.initcircledata, self );
    self.initdialog = undefined;
    self.initdropbagvo = undefined;
}

init_turrets()
{
    self iprintlnbold( "Extraction Complete!" );
    level.initcircledata = scripts\engine\utility::array_remove( level.initcircledata, self );
    self.initcrossbowusage = 1;
    kick( self getentitynumber(), "EXE/PLAYERKICKED_EXTRACTED" );
}

branalytics_plunder_extraction_failure( var_0 )
{
    if ( !isdefined( level.questinfo.teamsonquests ) || scripts\engine\utility::array_contains( level.questinfo.teamsonquests, var_0.team ) )
        return;

    var_1 = [];

    foreach ( var_3 in level._id_12BC4 )
        var_1 = scripts\engine\utility::array_combine( var_1, getlootscriptablearrayinradius( "brloot_" + var_3 + "_tablet" ) );

    var_1 = scripts\engine\utility::array_randomize( var_1 );
    var_5 = undefined;
    var_6 = undefined;

    foreach ( var_10, var_8 in var_1 )
    {
        var_9 = scripts\engine\utility::distance_2d_squared( var_0.origin, var_8.origin );

        if ( var_9 <= 16777216 && var_9 >= 16384 )
        {
            var_0 scripts\mp\gametypes\br_quest_util.gsc::_id_12624( var_8 );
            return;
        }

        if ( !isdefined( var_5 ) || var_9 < var_6 )
        {
            var_5 = var_8;
            var_6 = var_9;
        }
    }

    if ( isdefined( var_5 ) )
        var_0 scripts\mp\gametypes\br_quest_util.gsc::_id_12624( var_5 );
}

should_enter_combat_after_checking_decoy_grenade( var_0 )
{
    var_1 = [];

    foreach ( var_4, var_3 in var_0 )
    {
        if ( var_4 == "circle_peek" )
            continue;

        var_1[var_4] = var_3;
    }

    return var_1;
}

nuke_vault_door( var_0 )
{
    var_1 = [];

    if ( isdefined( var_0 ) && var_0 != "tie" )
        var_1 = scripts\mp\utility\teams::getteamdata( var_0, "players" );

    var_2 = scripts\mp\gamelogic::lootleadermarksize();

    foreach ( var_4 in level.players )
    {
        if ( var_1.size > 0 && scripts\engine\utility::array_contains( var_1, var_4 ) )
        {
            var_4 scripts\mp\trials\trial_target_utility::_id_11E8D( "post_game_state", var_2 );
            var_4 scripts\mp\trials\trial_target_utility::_id_11E8D( "ui_br_end_game_splash_type", 11 );
            continue;
        }

        var_4 scripts\mp\trials\trial_target_utility::_id_11E8D( "post_game_state", var_2 );
        var_4 scripts\mp\trials\trial_target_utility::_id_11E8D( "ui_br_end_game_splash_type", 12 );
    }
}

_id_12B32( var_0, var_1, var_2 )
{
    var_3 = scripts\mp\gamescore::_getteamscore( var_1 );
    var_4 = var_0 - var_3;

    if ( var_4 != 0 )
    {
        var_5 = scripts\engine\utility::ter_op( scripts\mp\gametypes\br_public.gsc::prophasclonesleft(), 1, undefined );
        level thread scripts\mp\gamescore::giveteamscoreforobjective( var_1, var_4, 0, undefined, var_5, var_2 );
    }

    return var_4;
}

_id_12B09()
{
    level notify( "restartLootLeaders" );
    level endon( "restartLootLeaders" );
    level endon( "game_ended" );
    var_0 = getdvarfloat( "scr_dmz_loot_leader_update_interval", 15.0 );
    var_1 = getdvarfloat( "scr_dmz_loot_leader_update_interval_blink", 5.0 );
    var_2 = getdvarint( "scr_bmo_circle_pulse_start", 800 );
    var_3 = getdvarint( "scr_bmo_circle_pulse_end", 200 );
    var_4 = var_0 - var_1;
    scripts\mp\flags::gameflagwait( "placement_updates_allowed" );

    for (;;)
    {
        level.vehiclelinkto = 1;
        scripts\engine\utility::waittill_notify_or_timeout( "bmo_overtime_start", var_4 );

        if ( var_1 > 0 )
        {
            foreach ( var_6 in level.select_players_in_killzone_only )
                var_6.mapcircle setmapcirclestyleindex( 2 );

            scripts\engine\utility::waittill_notify_or_timeout( "bmo_overtime_start", var_1 );

            foreach ( var_6 in level.select_players_in_killzone_only )
                var_6.mapcircle setmapcirclestyleindex( 0 );
        }
    }
}

_id_12AEC( var_0, var_1, var_2 )
{
    var_3 = gettime();
    var_2 = var_2 * 1000;
    var_4 = int( var_3 + var_2 );
    var_5 = abs( var_0 - var_1 );

    for (;;)
    {
        var_3 = gettime();
        var_6 = clamp( 1.0 - ( var_4 - var_3 ) / var_2, 0.0, 1.0 );
        var_7 = scripts\engine\utility::ter_op( var_0 < var_1, var_5 * var_6 + var_0, var_0 - var_5 * var_6 );
        setdvar( "PPRTMPMQM", var_7 );

        if ( var_6 == 1.0 )
            break;

        waitframe();
    }
}

_id_12B08( var_0, var_1, var_2, var_3 )
{
    level.select_woods_one_spawners = level.select_top_roof_spawners;
    level.select_top_roof_spawners = [];

    if ( level.select_stairway_spawners )
    {
        if ( istrue( level.calloutmarkerpingvo_canplaywithspamavoidance ) )
        {
            level.select_patrol_two_spawners = animscripted_single_arrive_at();

            foreach ( var_5 in level.select_players_in_killzone_only )
                var_5.mapcircle hide();
        }
    }

    if ( level.select_reception_spawners == 1 )
    {
        for ( var_7 = 0; var_7 < level.select_patrol_two_spawners; var_7++ )
        {
            var_8 = markplayeraseliminated( var_7, var_0, var_3 );

            if ( isdefined( var_8 ) )
            {
                level.select_top_roof_spawners[level.select_top_roof_spawners.size] = var_2[var_8];

                if ( istrue( level.init_swivelroom_obj ) )
                {
                    if ( isdefined( var_2[var_8].init_swivelroom_variables ) )
                        _id_11A2E( var_2[var_8].init_swivelroom_variables );
                }
            }
        }
    }
    else if ( level.select_reception_spawners == 2 )
    {
        var_8 = markplayeraseliminated( 0, var_0, var_3 );

        if ( isdefined( var_8 ) )
        {
            level.select_top_roof_spawners[0] = var_2[var_8];

            if ( istrue( level.init_swivelroom_obj ) )
            {
                if ( isdefined( var_2[var_8].init_swivelroom_variables ) )
                    _id_11A2E( var_2[var_8].init_swivelroom_variables );
            }
        }

        foreach ( var_10 in var_1 )
        {
            var_11 = var_2[var_10];
            var_12 = var_0[var_10];

            if ( var_12 == 0 )
                break;

            if ( scripts\engine\utility::array_contains( level.select_top_roof_spawners, var_11 ) )
                continue;

            level.select_top_roof_spawners[level.select_top_roof_spawners.size] = var_11;

            if ( istrue( level.init_swivelroom_obj ) )
            {
                if ( isdefined( var_11.init_swivelroom_variables ) )
                    _id_11A2E( var_11.init_swivelroom_variables );
            }

            if ( level.select_top_roof_spawners.size == level.select_patrol_two_spawners )
                break;
        }
    }
    else
    {
        foreach ( var_11 in var_1 )
        {
            var_12 = var_0[var_11];

            if ( var_12 == 0 )
                break;

            level.select_top_roof_spawners[level.select_top_roof_spawners.size] = var_2[var_11];

            if ( istrue( level.init_swivelroom_obj ) )
            {
                if ( isdefined( var_2[var_11].init_swivelroom_variables ) )
                    _id_11A2E( var_2[var_11].init_swivelroom_variables );
            }

            if ( level.select_top_roof_spawners.size == level.select_patrol_two_spawners )
                break;
        }
    }

    foreach ( var_11 in level.select_woods_one_spawners )
    {
        if ( isdefined( var_11 ) && !scripts\engine\utility::array_contains( level.select_top_roof_spawners, var_11 ) )
            _id_11A2F( var_11 );
    }

    for ( var_7 = 0; var_7 < level.select_patrol_two_spawners; var_7++ )
    {
        var_18 = level.select_players_in_killzone_only[var_7];

        if ( isdefined( level.select_top_roof_spawners[var_7] ) )
        {
            var_18.targetplayer = level.select_top_roof_spawners[var_7];
            var_18.targetplayer.select_patrol_three_spawners = var_18;
            var_19 = ( var_18.targetplayer.origin[0], var_18.targetplayer.origin[1], level.select_players_not_in_killzone_only );

            if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
                var_19 = var_19 + scripts\engine\math::random_vector_2d() * randomfloatrange( 100, 1000 );

            var_18 scripts\mp\gametypes\br_quest_util.gsc::spawn_elevators( var_19 );

            if ( istrue( level.select_random_card_location ) )
                _id_12B07( var_18 );

            var_20 = scripts\engine\utility::array_contains( level.select_top_roof_spawners, var_18.targetplayer ) && !scripts\engine\utility::array_contains( level.select_woods_one_spawners, var_18.targetplayer );
            var_21 = scripts\mp\utility\teams::getenemyplayers( var_18.targetplayer.team, 0 );

            foreach ( var_11 in var_21 )
                var_18 scripts\mp\gametypes\br_quest_util.gsc::_id_12056( var_11 );

            var_24 = scripts\mp\utility\teams::getfriendlyplayers( var_18.targetplayer.team, 0 );

            foreach ( var_11 in var_24 )
                var_18 scripts\mp\gametypes\br_quest_util.gsc::overrideviewkickscaledmr( var_11 );

            if ( var_20 )
                ammobox_updateheadicononjointeam( var_18 );

            continue;
        }

        var_18.targetplayer = undefined;

        foreach ( var_11 in level.players )
            var_18 scripts\mp\gametypes\br_quest_util.gsc::overrideviewkickscaledmr( var_11 );
    }
}

markplayeraseliminated( var_0, var_1, var_2 )
{
    var_3 = var_2[var_0];
    var_4 = 0;
    var_5 = 0;

    if ( level.teamdata[var_3]["players"].size == 0 )
        return undefined;

    var_6 = level.teamdata[var_3]["players"][0].guid;

    foreach ( var_8 in level.teamdata[var_3]["players"] )
    {
        var_4 = var_1[var_8.guid];

        if ( var_4 > var_5 )
        {
            var_5 = var_4;
            var_6 = var_8.guid;
        }
    }

    return var_6;
}

ammobox_updateheadicononjointeam( var_0 )
{
    var_1 = var_0.targetplayer;

    if ( scripts\mp\utility\player::isreallyalive( var_1 ) )
    {
        if ( !scripts\mp\gametypes\br_public.gsc::prophasclonesleft() )
            var_1 scripts\mp\hud_message::showsplash( "bm_player_marked" );

        var_1 detonatingplayer();

        if ( istrue( level.init_swivelroom_obj ) )
            var_1 thread watchforplayerdeath( var_0 );
    }
}

_id_11A2F( var_0 )
{
    if ( isdefined( var_0.br_endgamesplashcallback ) )
        var_0 detonation_code_omnvar_value();

    if ( isdefined( var_0.select_patrol_three_spawners ) )
    {
        foreach ( var_2 in level.players )
            var_0.select_patrol_three_spawners scripts\mp\gametypes\br_quest_util.gsc::overrideviewkickscaledmr( var_2 );

        var_4 = var_0.select_patrol_three_spawners.dropoff_point_spawner;

        if ( istrue( level.init_swivelroom_obj ) )
            ammobox_tryuseinternal( var_0, var_4 );

        var_0.select_patrol_three_spawners.targetplayer = undefined;
        var_0.select_patrol_three_spawners = undefined;
    }

    level.select_top_roof_spawners = scripts\engine\utility::array_remove( level.select_top_roof_spawners, var_0 );
}

watchforplayerdeath( var_0 )
{
    self endon( "disconnect" );
    self waittill( "death" );
    var_1 = self.select_patrol_three_spawners.dropoff_point_spawner;
    _id_11A2F( self );
    ammobox_tryuseinternal( self, var_1 );
}

ammobox_tryuseinternal( var_0, var_1 )
{
    if ( scripts\engine\utility::array_contains( level.init_tape_machine_animations, var_0 ) )
        return;

    level.init_tape_machine_animations = scripts\engine\utility::array_add( level.init_tape_machine_animations, var_0 );
    var_2 = undefined;

    foreach ( var_4 in level.init_tactical_boxes )
    {
        if ( !isdefined( var_4.targetplayer ) )
        {
            var_2 = var_4;
            break;
        }
    }

    if ( !isdefined( var_2 ) )
    {
        var_6 = undefined;

        foreach ( var_4 in level.init_tactical_boxes )
        {
            if ( !isdefined( var_6 ) || var_4.lastusedtime < var_6 )
            {
                var_6 = var_4.lastusedtime;
                var_2 = var_4;
            }
        }

        var_2.targetplayer notify( "stop_update" );
    }

    var_2.targetplayer = var_0;
    var_2.lastusedtime = gettime();
    var_0.init_swivelroom_variables = var_2;

    if ( isdefined( var_1 ) )
        var_2 scripts\mp\gametypes\br_quest_util.gsc::spawn_elevators( var_1 );
    else
    {
        var_9 = ( var_2.targetplayer.origin[0], var_2.targetplayer.origin[1], level.select_players_not_in_killzone_only );
        var_9 = var_9 + scripts\engine\math::random_vector_2d() * randomfloatrange( 100, 1000 );
        var_2 scripts\mp\gametypes\br_quest_util.gsc::spawn_elevators( var_9 );
    }

    if ( istrue( level.select_random_card_location ) )
        _id_12B07( var_2 );

    var_10 = scripts\mp\utility\teams::getenemyplayers( var_2.targetplayer.team, 0 );

    foreach ( var_4 in var_10 )
        var_2 scripts\mp\gametypes\br_quest_util.gsc::_id_12056( var_4 );

    var_13 = scripts\mp\utility\teams::getfriendlyplayers( var_2.targetplayer.team, 0 );

    foreach ( var_4 in var_13 )
        var_2 scripts\mp\gametypes\br_quest_util.gsc::overrideviewkickscaledmr( var_4 );

    thread _id_12AF4( var_2 );
}

_id_12AF4( var_0 )
{
    var_0.targetplayer endon( "stop_update" );
    wait 5.0;
    _id_11A2E( var_0 );
}

_id_11A2E( var_0 )
{
    var_1 = var_0.targetplayer;
    level.init_tape_machine_animations = scripts\engine\utility::array_remove( level.init_tape_machine_animations, var_0.targetplayer );
    var_0.targetplayer.init_swivelroom_variables = undefined;
    var_0.targetplayer = undefined;

    foreach ( var_3 in level.players )
        var_0 scripts\mp\gametypes\br_quest_util.gsc::overrideviewkickscaledmr( var_3 );

    var_1 notify( "stop_update" );
}

detonatingplayer()
{
    self attach( "accessory_money_bag_large_closed_player", "tag_stowed_back3", 1, 1 );
    self.br_endgamesplashcallback = "accessory_money_bag_large_closed_player";

    if ( self tagexists( "j_bag_left" ) )
        playfxontag( level._effect["vfx_br_cashLeaderBag"], self, "j_bag_left" );

    thread detonatesound();
}

detonation_code_omnvar_value()
{
    if ( isdefined( self ) && isdefined( self.br_endgamesplashcallback ) )
    {
        if ( self tagexists( "j_bag_left" ) )
            stopfxontag( level._effect["vfx_br_cashLeaderBag"], self, "j_bag_left" );

        self detach( self.br_endgamesplashcallback, "tag_stowed_back3" );
        self.br_endgamesplashcallback = undefined;
    }

    self notify( "killthread_bagModelSwap" );
}

detonatesound()
{
    self notify( "cashleader_trackDeath" );
    self endon( "cashleader_trackDeath" );
    self endon( "killthread_bagModelSwap" );
    self waittill( "death" );
    detonation_code_omnvar_value();
}

target_show_dist( var_0 )
{
    if ( scripts\mp\utility\game::missions_clearinappropriaterewards() == "kingslayer" )
        return;

    var_1 = 0;
    var_2 = 0;

    if ( isdefined( self.plundercount ) )
        var_2 = var_2 + self.plundercount;

    if ( isdefined( self.plunderbanked ) )
        var_2 = var_2 + self.plunderbanked;

    var_2 = int( var_2 / 10 );

    if ( var_2 > 4095 )
        var_2 = 4095;

    var_1 = var_2;
    var_3 = 0;

    if ( isdefined( self.should_drop_scavenger_bag ) )
        var_3 = var_3 + self.should_drop_scavenger_bag;

    if ( var_3 > 15 )
        var_3 = 15;

    var_1 = var_1 + ( var_3 << 12 );
    scripts\mp\utility\stats::setextrascore0( var_1 );
}

target_show_damage()
{
    var_0 = 0;
    var_1 = 0;

    if ( isdefined( self.plundercount ) )
        var_1 = var_1 + self.plundercount;

    if ( isdefined( self.plunderbanked ) )
        var_1 = var_1 + self.plunderbanked;

    var_1 = int( var_1 / 10 );

    if ( var_1 > 4095 )
        var_1 = 4095;

    var_0 = var_1;
    var_2 = 0;

    if ( isdefined( self.should_drop_scavenger_bag ) )
        var_2 = var_2 + self.should_drop_scavenger_bag;

    if ( var_2 > 15 )
        var_2 = 15;

    var_0 = var_0 + ( var_2 << 12 );
    return var_0;
}

updatecallback()
{
    self endon( "disconnect" );

    if ( isdefined( level.select_top_roof_spawners ) && scripts\engine\utility::array_contains( level.select_top_roof_spawners, self ) )
    {
        scripts\mp\hud_message::showsplash( "bm_player_marked" );
        detonatingplayer();
    }
}

_id_12B07( var_0 )
{
    if ( isdefined( var_0.targetplayer.plundercount ) )
        var_1 = var_0.targetplayer.plundercount;
    else
        var_1 = 0;

    var_1 = clamp( var_1, level.select_stadium_two_spawners, level.select_stadium_one_spawners );
    var_2 = level.select_stadium_one_spawners - level.select_stadium_two_spawners;
    var_3 = ( var_1 - level.select_stadium_two_spawners ) / var_2;
    var_4 = level.select_stadium_three_spawners - level.select_spot_light_nodes_from;
    var_5 = level.select_stadium_three_spawners - var_3 * var_4;
    var_0 scripts\mp\gametypes\br_quest_util.gsc::_id_11EBE( var_5 );
}

animscripted_single_arrive_at( var_0 )
{
    var_1 = 0;
    var_0 = scripts\mp\gamescore::modeaddtoteamlives();
    var_2 = modifytriggerlocation();

    for ( var_3 = 1; var_3 < level.setbuybackpingmessage + 1; var_3++ )
    {
        foreach ( var_5 in level.teamnamelist )
        {
            if ( level scripts\mp\utility\game::recharge_equipment_update_state( var_5 ) )
                continue;

            if ( var_0[var_5] != var_3 )
                continue;

            var_6 = mlp2_front_truck( var_5 ) * 100;

            if ( var_6 >= var_2 || var_0[var_5] == 1 )
                var_1++;
        }
    }

    if ( var_1 > level.setbuybackpingmessage )
        var_1 = level.setbuybackpingmessage;

    return var_1;
}

global_relic_amped_func( var_0, var_1 )
{
    var_2 = 0;
    var_3 = 0;
    var_4 = 20;
    var_1 = var_1 * 100;
    var_5 = var_0.plundercount * 100;
    var_6 = var_5 + var_1;
    var_7 = var_6;
    var_8 = var_5;
    var_9 = var_8 - var_6;
    var_10 = scripts\engine\utility::sign( var_9 );
    var_11 = var_9 / 2.0;
    var_12 = int( var_11 * 2 * level.framedurationseconds );

    if ( var_12 == 0 )
        return;

    var_13 = fnlookforvehicles( &"MP_BR_INGAME/PLUNDER_DEATH_LOSS", var_1, "RIGHT", "CENTER", var_2 + 46, var_3, undefined, undefined, 1.25, var_0 );
    var_13.alpha = 1;
    var_14 = fnlookforvehicles( &"MP_BR_INGAME/YOUR_PLUNDER_TEXT", undefined, "RIGHT", "CENTER", var_2, var_3 + var_4, undefined, undefined, 1.25, var_0 );
    var_14.alpha = 1;
    var_15 = fnlookforvehicles( &"MP_BR_INGAME/EXTRACT_PLUNDER", var_6, "LEFT", "CENTER", var_2 + 45, var_3 + var_4, undefined, undefined, 1.25, var_0 );
    var_15.alpha = 1;
    wait 1.0;

    while ( var_7 != var_8 )
    {
        var_7 = var_7 + var_12;

        if ( var_10 > 0 && var_7 > var_8 || var_10 < 0 && var_7 < var_8 )
            var_7 = var_8;

        var_15 setvalue( var_7 );
        wait( level.framedurationseconds );
    }

    wait 3.0;
    var_13 destroy();
    var_14 destroy();
    var_15 destroy();
}

add_collision_to_hack_point( var_0, var_1, var_2 )
{
    if ( var_0.size == 0 || var_1 == 0 )
        return;

    var_3 = [];
    var_4 = [];

    if ( var_0.size > 0 )
    {
        var_0 = scripts\engine\utility::array_randomize( var_0 );
        var_4 = int( min( var_1, var_0.size ) );
    }

    if ( level._id_11F64 )
    {
        var_5 = 0;

        if ( level.animscripted_single > 0 && istrue( var_2 ) )
        {
            var_6 = 0;

            for ( var_7 = 0; var_7 < var_4; var_7++ )
            {
                if ( var_6 > level.targetdata.size - 1 )
                    var_6 = 0;

                var_8 = level.targetdata[var_6];

                foreach ( var_10 in var_0 )
                {
                    if ( vehiclespawn_littlebirdmg( var_10.origin, var_8, level.vehiclespawninginto ) )
                    {
                        var_3[var_3.size] = var_10;
                        var_0 = scripts\engine\utility::array_remove( var_0, var_10 );
                        break;
                    }
                }

                var_6++;
            }
        }
        else
        {
            foreach ( var_10 in var_0 )
            {
                var_5 = 0;

                foreach ( var_14 in level.warningbits )
                {
                    var_15 = scripts\engine\utility::distance_2d_squared( var_14, var_10.origin );

                    if ( var_5 == 0 || var_15 < var_5 )
                    {
                        var_5 = var_15;
                        var_10.enemygunship_getnearbytargets = var_14;
                    }
                }
            }

            var_6 = 0;

            for ( var_7 = 0; var_7 < var_4; var_7++ )
            {
                if ( var_6 > level.warningbits.size - 1 )
                    var_6 = 0;

                var_8 = level.warningbits[var_6];

                foreach ( var_10 in var_0 )
                {
                    if ( isdefined( var_10.enemygunship_getnearbytargets ) && var_10.enemygunship_getnearbytargets == var_8 )
                    {
                        var_3[var_3.size] = var_10;
                        var_0 = scripts\engine\utility::array_remove( var_0, var_10 );
                        break;
                    }
                }

                var_6++;
            }
        }
    }
    else if ( var_0.size > 0 )
    {
        var_0 = scripts\engine\utility::array_randomize( var_0 );
        var_4 = int( min( var_1, var_0.size ) );

        for ( var_7 = 0; var_7 < var_4; var_7++ )
            var_3[var_3.size] = var_0[var_7];
    }

    if ( istrue( level.outline_enemy_ai_for_duration ) )
    {
        foreach ( var_21 in var_0 )
        {
            if ( !scripts\engine\utility::array_contains( var_3, var_21 ) )
                var_21 setscriptablepartstate( var_21.type, "hidden" );
        }
    }

    return var_3;
}

vehiclespawn_littlebirdmg( var_0, var_1, var_2 )
{
    var_3 = var_1[0] - var_2;
    var_4 = var_1[0] + var_2;
    var_5 = var_1[1] - var_2;
    var_6 = var_1[1] + var_2;
    return var_0[0] >= var_3 && var_0[0] <= var_4 && var_0[1] >= var_5 && var_0[1] <= var_6;
}

add_outline( var_0, var_1 )
{
    if ( var_0.size == 0 || var_1 == 0 )
        return;

    var_2 = undefined;

    if ( var_0.size > 0 )
    {
        var_0 = scripts\engine\utility::array_randomize( var_0 );

        for ( var_3 = 0; var_3 < var_0.size; var_3++ )
        {
            if ( !scripts\engine\utility::array_contains( level.br_plunder_sites, var_0[var_3] ) )
            {
                var_2 = var_0[var_3];
                break;
            }
        }
    }

    return var_2;
}

is_player_part_exposed_to_chopper_boss( var_0 )
{
    var_1 = add_outline( scripts\mp\gametypes\br_plunder.gsc::loopsound_origin(), level.setdragonsbreathcorpseflare );
    var_1.disabled = undefined;
    var_1.onriskplayerdisconnect = undefined;
    var_2 = scripts\engine\utility::ter_op( level._id_12054 && !level._id_1204F, var_1.allassassin_teamcompare, var_1.allassassin_updatewait );
    var_1 setscriptablepartstate( var_1.type, var_2 );

    if ( level._id_12054 && level._id_1204F )
    {
        scripts\mp\objidpoolmanager::returnobjectiveid( var_0.locale.objectiveiconid );
        var_0.locale.objectiveiconid = -1;
        var_3 = spawnstruct();
        var_3 force_bleedout_all_downed_players( "ui_mp_br_mapmenu_icon_atm", "current", var_1.origin + ( 0, 0, 200 ) );
        var_1.locale = var_3;
    }

    level.br_plunder_sites = scripts\engine\utility::array_remove( level.br_plunder_sites, var_0 );
    level.br_plunder_sites = scripts\engine\utility::array_add( level.br_plunder_sites, var_1 );
}

_id_1249F()
{
    scripts\mp\flags::gameflagwait( "prematch_done" );
    waitframe();

    foreach ( var_1 in level.br_plunder_sites )
    {
        var_1.disabled = undefined;
        var_2 = scripts\engine\utility::ter_op( level._id_12054 && !level._id_1204F, var_1.allassassin_teamcompare, var_1.allassassin_updatewait );
        var_1 setscriptablepartstate( var_1.type, var_2 );
        var_1 thread _id_11BFC();

        if ( level._id_12054 && level._id_1204F )
            var_1.locale thread _id_12730();
    }

    level thread _id_11BED();
}

_id_11BFC()
{
    wait( level._id_1272F );
    self.disabled = 1;
    self.onriskplayerdisconnect = 1;
    self setscriptablepartstate( self.type, self.give_deployable_crate );
}

_id_11BED()
{
    wait( level._id_1272F + 1 );
    level.br_plunder_sites = add_collision_to_hack_point( scripts\mp\gametypes\br_plunder.gsc::loopsound_origin(), level.setdragonsbreathcorpseflare );

    if ( level._id_12054 && level._id_1204F )
        level thread fngetplayerdrone();

    level thread _id_1249F();
}

fngetplayerdrone()
{
    scripts\mp\flags::gameflagwait( "prematch_done" );

    foreach ( var_1 in level.br_plunder_sites )
    {
        var_2 = spawnstruct();
        var_2 force_bleedout_all_downed_players( "ui_mp_br_mapmenu_icon_atm", "current", var_1.origin + ( 0, 0, 200 ) );
        var_1.locale = var_2;
    }
}

_id_12730()
{
    var_0 = level._id_1272F;
    var_1 = level.framedurationseconds;
    var_2 = var_1 * 1000;
    var_3 = var_0 * 1000;
    var_4 = var_3 - var_2;
    var_5 = gettime() + var_3;

    while ( gettime() < var_5 )
    {
        var_6 = var_4 / var_3;
        scripts\mp\objidpoolmanager::objective_show_progress( self.objectiveiconid, 1 );
        scripts\mp\objidpoolmanager::objective_set_progress( self.objectiveiconid, var_6 );
        var_4 = max( var_4 - var_2, 1 );
        waitframe();
    }

    scripts\mp\objidpoolmanager::returnobjectiveid( self.objectiveiconid );
    self.objectiveiconid = -1;
}

force_bleedout_all_downed_players( var_0, var_1, var_2 )
{
    self.objectiveiconid = scripts\mp\objidpoolmanager::requestobjectiveid( 1 );

    if ( self.objectiveiconid != -1 )
    {
        scripts\mp\objidpoolmanager::objective_add_objective( self.objectiveiconid, var_1, ( 0, 0, 0 ), var_0 );
        scripts\mp\objidpoolmanager::update_objective_setbackground( self.objectiveiconid, 1 );
        objective_showtoplayersinmask( self.objectiveiconid );
        scripts\mp\objidpoolmanager::objective_set_play_intro( self.objectiveiconid, 1 );

        if ( isdefined( var_2 ) )
            spawn_ending_individual_guys_death( var_2 );
    }
    else
    {

    }
}

spawn_ending_individual_guys_death( var_0 )
{
    scripts\mp\objidpoolmanager::update_objective_position( self.objectiveiconid, var_0 );
}

_id_12058( var_0 )
{
    objective_addclienttomask( self.objectiveiconid, var_0 );
}

_id_12057( var_0 )
{
    objective_addalltomask( var_0 );
}

overtime_music( var_0 )
{
    objective_removeclientfrommask( self.objectiveiconid, var_0 );
}

getcodecomputerdisplaycode()
{
    scripts\mp\objidpoolmanager::objective_playermask_hidefromall( self.objectiveiconid );
    scripts\mp\objidpoolmanager::returnobjectiveid( self.objectiveiconid );
}

_id_12477( var_0 )
{
    level _id_11EA1();
    level thread _id_12042( var_0 );

    if ( level._id_12691 )
        level thread _id_124B0( var_0 );

    if ( level._id_1268F )
        level thread _id_11A2A();

    level thread _id_12480();
    level thread sprayid( var_0 );
}

_id_11EA1()
{
    scripts\mp\gamelogic::resumetimer();
    level.starttime = gettime();
    level.discardtime = 0;
    level.timerpausetime = 0;
    var_0 = getdvarfloat( "scr_bmo_exfil_timer", 180 );
    var_1 = "scr_" + scripts\mp\utility\game::getgametype() + "_timelimit";
    level.watchdvars[var_1].value = var_0;
    level.overridewatchdvars[var_1] = var_0;
}

_id_12042( var_0 )
{
    foreach ( var_2 in level.teamnamelist )
        scripts\mp\gametypes\br_public.gsc::cloudanimfx( "plunder_extract_requested", var_2 );

    foreach ( var_5 in level.players )
    {
        var_5 thread scripts\mp\hud_message::showsplash( "callout_bmo_exfil_winners" );
        var_5 scripts\mp\utility\lower_message::setlowermessageomnvar( 71, undefined, 20 );
    }
}

_id_124B0( var_0 )
{
    level.radarmode[var_0] = "normal_radar";
    level.activeuavs[var_0] = 1;
    level.activeadvanceduavs[var_0] = 0;
    scripts\cp_mp\killstreaks\uav::_setteamradarstrength( var_0, 4 );
}

_id_11A2A()
{
    level.select_patrol_two_spawners = 1;

    if ( getdvarint( "scr_dmz_loot_leader_update_on_pickup", 0 ) == 1 )
    {
        if ( getdvarfloat( "scr_dmz_loot_leader_update_interval", 15.0 ) > 0.0 )
            level thread _id_12B09();
    }
}

_id_12480()
{
    foreach ( var_1 in level.br_plunder_sites )
    {
        var_1 setscriptablepartstate( var_1.type, "inuse" );
        var_2 = getgroundposition( var_1.origin, 1 ) + ( 0, 0, 2 );
        var_3 = level.players[0];

        for ( var_4 = 0; var_4 < 200; var_4++ )
        {
            var_3 = is_killstreak_valid_for_swat();

            if ( isplayer( var_3 ) )
                break;
        }

        var_2 = getgroundposition( var_1.origin, 1 ) + ( 0, 0, 2 );
        var_5 = var_3 validchallengetimer( var_2, var_1 );

        if ( isdefined( var_5 ) )
        {
            var_5.site = var_1;
            var_1.heli = var_5;
            var_5 helicreateextractvfx( var_2 );
            var_5 thread initial_angles();
        }
    }
}

validchallengetimer( var_0, var_1 )
{
    var_2 = var_0;
    var_3 = var_2 + ( 0, 0, 2500 );
    var_4 = is_module_active( var_3, var_1 );
    var_5 = ( 0, var_4, 0 );

    if ( getdvarint( "scr_br_plunder_heli_adjust_bag", 1 ) == 1 )
    {
        var_6 = -100;
        var_7 = 60;
        var_8 = anglestoforward( var_5 );
        var_9 = anglestoright( var_5 );
        var_2 = var_2 + var_8 * var_6 + var_9 * var_7;
    }

    var_10 = var_3 + -1 * anglestoforward( var_5 ) * 30000;
    var_11 = var_3 + anglestoforward( var_5 ) * 30000;
    var_12 = spawnheli( self, var_10, var_3, var_11 );
    return var_12;
}

initial_angles()
{
    self endon( "death" );
    self endon( "leaving" );
    self setvehgoalpos( self.pathgoal, 1 );
    self settargetyaw( self.mortars_set_player_targeted );
    var_0 = _id_127BF( self.pathgoal );
    var_1 = self.pathgoal[2] - var_0;
    self.isloadinggulag = damagestatedata( var_1 );
    opennukecrate( 1, self.isloadinggulag );
    self waittill( "goal" );

    foreach ( var_3 in level.players )
        var_3 scripts\mp\utility\lower_message::setlowermessageomnvar( 72, undefined, 20 );

    thread heliwatchgameendleave();
    thread onriskplayerkilled();
    helidescend( self.endpoint, var_0 );

    foreach ( var_6 in level.teamnamelist )
        level thread scripts\mp\gametypes\br_public.gsc::cloudanimfx( "plunder_extract_chopper_arrive", var_6, 1 );

    open_any_random_airlock_door();
    helicleanupextract();

    foreach ( var_6 in level.teamnamelist )
        level thread scripts\mp\gametypes\br_public.gsc::cloudanimfx( "plunder_extract_chopper_leave", var_6, 1 );

    thread onweapondroppickedup();
}

open_any_random_airlock_door()
{
    self.isdepot = 1;
    self.usable = self.crate;
    var_0 = self.usable;
    var_0 makeusable();
    var_0 setcursorhint( "HINT_NOICON" );
    var_0 setuseholdduration( "duration_medium" );
    var_0 sethintrequiresholding( 1 );
    var_0 setuserange( 230 );
    var_0 sethintstring( &"MP/BR_USE_EXFIL_CHOPPER" );
    var_1 = level.br_depots.size;
    level.br_depots[var_1] = var_0;

    foreach ( var_3 in level.players )
    {
        if ( !isdefined( var_3 ) )
            continue;
    }

    thread helicleanupdepotonleaving();
    thread onstompeenemyprogressupdate( var_0 );
    opennukecrate( 2, 300 );
    wait 300;
    self.isdepot = 0;
    heliusecleanup();
}

onstompeenemyprogressupdate( var_0 )
{
    self endon( "death" );
    var_0 endon( "death" );

    for (;;)
    {
        var_0 waittill( "trigger", var_1 );
        var_1 scripts\mp\hud_message::showsplash( "callout_exfil_success" );
        var_1 playerhide();
        var_1 sethidenameplate( 0 );
        var_1 allowmovement( 0 );
        var_1 allowfire( 0 );
        var_1 disableoffhandprimaryweapons( 0 );
        var_1 disableoffhandsecondaryweapons( 0 );
        var_1 disableweapons( 0 );
        var_1 disableweaponswitch( 0 );
        var_1 setcamerathirdperson( 1 );
        var_1 allowcrouch( 0 );
        var_1 allowmelee( 0 );
        var_1 allowjump( 0 );
        var_1 allowprone( 0 );
        var_1 scripts\common\utility::allow_killstreaks( 0 );
        var_1 scripts\common\utility::allow_supers( 0 );
        var_1._id_11C19 = 1;
        var_0 disableplayeruse( var_1 );
    }
}

old_accuracy()
{
    self endon( "death" );
    self endon( "leaving" );
    self endon( "swapped" );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13 );
        self.health = 99999;
    }
}

_id_127BF( var_0 )
{
    var_1 = 256;
    var_2 = tracegroundpoint( var_0, 100, [ self ] );
    var_3 = var_2[2];
    var_4 = var_3 + var_1;
    return var_4;
}

is_module_active( var_0, var_1 )
{
    if ( isdefined( var_1 ) && isdefined( var_1.isgroundwarcoremode ) )
        return var_1.isgroundwarcoremode;

    var_2 = 10;
    var_3 = scripts\engine\trace::create_world_contents();

    for ( var_4 = 0; var_4 < 360; var_4 = var_4 + var_2 )
    {
        var_5 = ( 0, var_4, 0 );
        var_6 = var_0 + -1 * anglestoforward( var_5 ) * 30000;
        var_7 = var_0 + anglestoforward( var_5 ) * 30000;
        var_8 = scripts\engine\trace::sphere_trace( var_0, var_7, 100, undefined, var_3, 1 );

        if ( var_8["fraction"] == 1 )
        {
            if ( isdefined( var_1 ) )
                var_1.isgroundwarcoremode = var_4;

            return var_4;
        }

        if ( var_4 % 3 == 0 )
            waitframe();
    }

    var_4 = randomfloat( 360 );

    if ( isdefined( var_1 ) )
        var_1.isgroundwarcoremode = var_4;

    return var_4;
}

sprayid( var_0 )
{
    level notify( "mercy_ending_timer_started" );
    level endon( "mercy_ending_triggered" );
    setomnvar( "ui_nuke_timer_type", 1 );
    setomnvar( "ui_nuke_timer_time", level._id_12690 );
    setomnvar( "ui_nuke_countdown_active", 1 );
    var_1 = gettime();
    var_2 = level._id_12690 * 1000 + var_1;
    setomnvar( "ui_nuke_end_milliseconds", level._id_12690 * 1000 + var_1 );

    for (;;)
    {
        waitframe();

        if ( gettime() > var_2 )
            break;
    }

    level thread scripts\mp\gamelogic::endgame( var_0, game["end_reason"]["dmz_plunder_win"], game["end_reason"]["dmz_plunder_loss"], 0, 1 );
    setomnvar( "ui_nuke_countdown_active", 0 );
}

_id_1292A( var_0, var_1, var_2 )
{
    if ( istrue( level.calloutmarkerpingvo_canplaywithspamavoidance ) )
    {
        if ( istrue( level.brking_addtoc130infil ) && istrue( var_1 ) )
            level thread calloutmarkerpingvo_calculatesounddebouncelength();

        return;
    }

    level.calloutmarkerpingvo_canplaywithspamavoidance = 1;
    level notify( "cancel_announcer_dialog" );
    thread scripts\mp\music_and_dialog::vehicle_occupancy_isneutraltoplayer();
    scripts\mp\gametypes\br_publicevents.gsc::defenderflagbases();
    level thread tank_watchpiggybackexploit();
    var_3 = scripts\engine\utility::ter_op( level.tank_watchpiggybackexploit >= 1, "bm_overtime_double_cash_num", "bm_overtime_double_cash_perc" );

    if ( isdefined( var_0 ) && ( level.give_secondary_attachments_only || !level.give_killstreak_sentry ) )
    {
        level.playerstoptimerdelete = var_0;
        _id_1205E( var_0, "bm_overtime_start_them" );
        showsplashtoteam( var_0, "bm_overtime_start_us" );
        level thread scripts\mp\gametypes\br_public.gsc::cloudanimfx( "bm_gamestate_overtime", var_0 );

        foreach ( var_5 in level.teamnamelist )
        {
            if ( var_5 != var_0 )
                level thread scripts\mp\gametypes\br_public.gsc::cloudanimfx( "bm_gamestate_overtime_enemy", var_5 );
        }
    }
    else
        level.playerstoptimerdelete = manualturret_watchturretusetimeout();

    if ( !isdefined( var_2 ) )
    {
        scripts\mp\gamelogic::resumetimer();
        level.starttime = gettime();
        level.discardtime = 0;
        level.timerpausetime = 0;
        var_7 = scripts\engine\utility::ter_op( level.give_killstreak_sentry || istrue( var_2 ), 7, 12 );
        var_8 = "scr_" + scripts\mp\utility\game::getgametype() + "_timelimit";
        level.watchdvars[var_8].value = var_7;
        level.overridewatchdvars[var_8] = var_7;

        if ( !level.give_killstreak_sentry )
            wait 5;

        _id_1205D( var_3 );
        wait 5;
        level.ontimelimitgraceperiod = level.gulagwinnertableloadout;
        level.currenttimelimitdelay = 0.0;
        level.canprocessot = 1;
        level notify( "bmo_overtime_start" );
    }
    else
    {
        level.ontimelimitgraceperiod = level.gulagwinnertableloadout;
        level.currenttimelimitdelay = 0.0;
        level.canprocessot = 1;
        level notify( "bmo_overtime_start" );
        level.isspreadweapon = 1;
        level.isstunnedby = 1;
        _id_1205D( var_3 );
        wait 5;
    }

    level.isspreadweapon = undefined;
    scripts\mp\flags::gameflagwait( "overtime_started" );
    setomnvar( "ui_br_circle_state", 7 );

    if ( !isdefined( var_2 ) )
    {
        var_9 = gettime() + int( level.gulagwinnertableloadout * 1000 );
        setomnvar( "ui_hardpoint_timer", var_9 );
    }

    wait( int( max( level.gulagwinnertableloadout - 60, 0 ) ) );
    setomnvar( "ui_br_circle_state", 8 );
}

manualturret_watchturretusetimeout()
{
    var_0 = "";

    foreach ( var_2 in level.teamnamelist )
    {
        var_3 = game["teamPlacements"][var_2];

        if ( var_3 == 1 )
        {
            var_0 = var_2;
            break;
        }
    }

    return var_0;
}

ontimelimit()
{
    if ( level._id_12692 && level.gulagwinnertableloadout > 0 && !istrue( level.calloutmarkerpingvo_canplaywithspamavoidance ) )
    {
        if ( !isdefined( level.playerstoptimerdelete ) )
            level.playerstoptimerdelete = manualturret_watchturretusetimeout();

        level thread _id_1292A( level.playerstoptimerdelete, level.teamdata[level.playerstoptimerdelete]["plunderBanked"] * 1000 >= modifytriggerlocation() );
        level waittill( "bmo_overtime_start" );

        while ( level.currenttimelimitdelay < level.ontimelimitgraceperiod )
            wait( level.framedurationseconds );
    }

    level thread calloutmarkerpingvo_calculatesounddebouncelength();
}

calloutmarkerpingvo_calculatesounddebouncelength()
{
    if ( istrue( level.gameended ) )
        return;

    level thread nospectatablepropswatch();
    level thread scripts\mp\gamelogic::endgame( level.cleanupswaploadoutflags.isassaultdrone, game["end_reason"]["dmz_plunder_win"], game["end_reason"]["dmz_plunder_loss"], 0, 1 );
}

nospectatablepropswatch()
{
    var_0 = scripts\mp\gamelogic::lootleadermarksize();

    foreach ( var_2 in level.players )
        var_2 scripts\mp\trials\trial_target_utility::_id_11E8D( "post_game_state", var_0 );
}

validateprojectileent()
{
    if ( !istrue( self.controlsfrozen ) )
        scripts\mp\utility\player::_freezecontrols( 1, undefined, "spawnEndOfGame" );

    var_0 = spawnstruct();
    var_1 = self getspectatingplayer();

    if ( !isdefined( var_1 ) )
        var_1 = self;

    var_0.origin = var_1.origin;
    var_0.angles = var_1.angles;

    if ( !var_1 isonground() )
    {
        var_2 = scripts\engine\trace::create_default_contents( 1 );
        var_0.origin = scripts\engine\utility::drop_to_ground( var_0.origin, 0, -20000, undefined, var_2 );
    }

    var_0.origin = var_0.origin + ( 0, 0, 100 );

    if ( !isdefined( level.hvi_patrol_intro ) )
    {
        level.hvi_patrol_intro = 1;
        level thread _id_1291E();
    }

    return 1;
}

init_bomb_objective()
{
    level waittill( "give_match_bonus" );
    waitframe();
    var_0 = getdvarfloat( "scr_bmo_eom_held_cash_scalar", 1.0 );
    var_1 = getdvarfloat( "scr_bmo_eom_banked_cash_scalar", 1.0 );
    var_2 = getdvarint( "scr_bmo_eom_initial_winner_bonus", 10000 );
    var_3 = getdvarint( "scr_bmo_eom_over_wincost_bonus", 7500 );
    var_4 = getdvarint( "scr_bmo_eom_top10_bonus", 5000 );

    foreach ( var_6 in level.teamnamelist )
    {
        if ( level scripts\mp\utility\game::recharge_equipment_update_state( var_6 ) )
            continue;

        var_7 = mlp2_front_truck( var_6 ) * 100;
        var_8 = var_7 >= modifytriggerlocation();
        var_9 = game["teamPlacements"][var_6];
        var_10 = 0;

        if ( var_8 )
            var_10 = var_3;
        else if ( var_9 <= 10 )
            var_10 = var_4;

        var_11 = scripts\mp\utility\teams::getteamdata( var_6, "players" );

        foreach ( var_13 in var_11 )
        {
            var_13 scripts\mp\gametypes\br.gsc::_id_124FA();
            var_13 scripts\cp_mp\utility\game_utility::_id_11EB9( var_9 );

            if ( !var_13 scripts\mp\utility\game::rankingenabled() || !var_13 hasplayerdata() )
                continue;

            var_13 scripts\mp\utility\stats::incpersstat( "cash", int( var_7 / 10000 ) );
            var_14 = var_13.pers["combatXP"];

            if ( !isdefined( var_14 ) )
                var_14 = 0;

            var_13 setplayerdata( "mp", "aarValue", 0, var_14 );
            var_15 = var_13.pers["missionXP"];

            if ( !isdefined( var_15 ) )
                var_15 = 0;

            var_13 setplayerdata( "mp", "aarValue", 1, var_15 );
            var_16 = var_13.pers["lootingXP"];

            if ( !isdefined( var_16 ) )
                var_16 = 0;

            var_13 setplayerdata( "mp", "aarValue", 2, var_16 );
            var_17 = 0;

            if ( isdefined( var_13.plundercount ) )
                var_17 = int( var_13.plundercount * var_0 );

            var_18 = 0;

            if ( isdefined( var_13.plunderbanked ) )
                var_18 = int( var_13.plunderbanked * var_1 );

            var_19 = var_17 + var_18;

            if ( var_19 > 0 )
                var_13 scripts\mp\rank::giverankxp( "cash_conversion_bonus", var_19, undefined, 1, 1 );

            var_13 setplayerdata( "mp", "aarValue", 3, var_19 );
            var_20 = 0;

            if ( isdefined( var_13.matchbonus ) )
                var_20 = int( var_13.matchbonus );

            var_13 setplayerdata( "mp", "aarValue", 4, var_20 );

            if ( var_10 > 0 )
                var_13 scripts\mp\rank::giverankxp( "placement_bonus", var_10, undefined, 1, 1 );

            var_13 setplayerdata( "mp", "aarValue", 5, var_10 );
            var_21 = var_13 getplayerdata( "mp", "aarValue", 6 );
            var_22 = var_21 + var_13.pers["summary"]["xp"];
            var_13 setplayerdata( "mp", "aarValue", 7, var_22 );
        }
    }
}

playersetignoreattractions()
{
    var_0 = [];
    level.hudglobalkillcountmax = [];
    level.hudextractnum = [];

    if ( level.mapname == "mp_br_mechanics" )
    {
        level.hudglobalkillcountmax[0] = ( 8682, -1036, 427 );
        level.hudextractnum[0] = ( 14, 163, 0 );
        level.hudglobalkillcountmax[1] = ( -1139, -3425, 1116 );
        level.hudextractnum[1] = ( 33, 75, 0 );
        level.hudglobalkillcountmax[2] = ( -5567, -4786, 1116 );
        level.hudextractnum[2] = ( 37, 192, 0 );
    }
    else
    {
        level.hudglobalkillcountmax[0] = ( -36548, -31983, 2400 );
        level.hudextractnum[0] = ( 12, 72, 0 );
        level.hudglobalkillcountmax[1] = ( -17592, -36440, 1379 );
        level.hudextractnum[1] = ( 17, 90, 0 );
        level.hudglobalkillcountmax[2] = ( -3520, -34298, 1217 );
        level.hudextractnum[2] = ( 11, 110, 0 );
        level.hudglobalkillcountmax[3] = ( -9577, -25957, 360 );
        level.hudextractnum[3] = ( 357, 82, 0 );
        level.hudglobalkillcountmax[4] = ( 23022, -26926, 1359 );
        level.hudextractnum[4] = ( 16, 101, 0 );
        level.hudglobalkillcountmax[5] = ( 31261, -29753, 1359 );
        level.hudextractnum[5] = ( 27, 52, 0 );
        level.hudglobalkillcountmax[6] = ( 44843, -41261, 3220 );
        level.hudextractnum[6] = ( 16, 52, 0 );
        level.hudglobalkillcountmax[7] = ( 44229, -15403, 1331 );
        level.hudextractnum[7] = ( 13, 72, 0 );
        level.hudglobalkillcountmax[8] = ( 44491, 3484, 1638 );
        level.hudextractnum[8] = ( 23, 11, 0 );
        level.hudglobalkillcountmax[9] = ( 16047, -3206, 2613 );
        level.hudextractnum[9] = ( 27, 309, 0 );
        level.hudglobalkillcountmax[10] = ( 5668, -5905, 1614 );
        level.hudextractnum[10] = ( 23, 304, 0 );
        level.hudglobalkillcountmax[11] = ( -13412, -20443, 1033 );
        level.hudextractnum[11] = ( 11, 109, 0 );
        level.hudglobalkillcountmax[12] = ( -30369, -7811, 1680 );
        level.hudextractnum[12] = ( 31, 339, 0 );
        level.hudglobalkillcountmax[13] = ( -26278, 4081, 142 );
        level.hudextractnum[13] = ( 6, 110, 0 );
        level.hudglobalkillcountmax[14] = ( -16429, 6021, 847 );
        level.hudextractnum[14] = ( 21, 57, 0 );
        level.hudglobalkillcountmax[15] = ( -7525, 11672, 1082 );
        level.hudextractnum[15] = ( 14, 46, 0 );
        level.hudglobalkillcountmax[16] = ( 8356, 15296, 2021 );
        level.hudextractnum[16] = ( 12, 38, 0 );
        level.hudglobalkillcountmax[17] = ( 26010, 29975, 2716 );
        level.hudextractnum[17] = ( 13, 68, 0 );
        level.hudglobalkillcountmax[18] = ( 12043, 30910, 3081 );
        level.hudextractnum[18] = ( 21, 88, 0 );
        level.hudglobalkillcountmax[19] = ( 7127, 52592, 2100 );
        level.hudextractnum[19] = ( 28, 241, 0 );
        level.hudglobalkillcountmax[20] = ( -6693, 56481, 4026 );
        level.hudextractnum[20] = ( 16, 246, 0 );
        level.hudglobalkillcountmax[21] = ( -21394, 37175, 757 );
        level.hudextractnum[21] = ( 2, 124, 0 );
        level.hudglobalkillcountmax[22] = ( -26151, 25577, 271 );
        level.hudextractnum[22] = ( 357, 10, 0 );
    }

    if ( 0 )
        hudglobalkillcount();
}

_id_1291E()
{
    var_0 = 0;

    foreach ( var_2 in level.players )
    {
        if ( isdefined( var_2 ) )
        {
            var_2 thread vehicle_dismount_watcher( var_2, lootchopper_spawn( var_2 ) );
            var_0++;
        }

        if ( var_0 == 5 )
        {
            waitframe();
            var_0 = 0;
        }
    }
}

hudglobalkillcount()
{
    for (;;)
    {
        var_0 = getdvarint( "scr_bmo_testEndCamera", -1 );

        if ( var_0 > -1 )
        {
            vehicle_dismount_watcher( level.players[0], lootchopper_spawn( level.players[0] ) );
            setdvar( "scr_bmo_testEndCamera", -1 );
        }

        waitframe();
    }
}

lootchopper_spawn( var_0 )
{
    var_1 = undefined;
    var_2 = undefined;

    foreach ( var_6, var_4 in level.hudglobalkillcountmax )
    {
        var_5 = distance2dsquared( var_0.origin, var_4 );

        if ( var_5 <= 9000000 )
            return var_6;

        if ( !isdefined( var_2 ) || var_2 > var_5 )
        {
            var_2 = var_5;
            var_1 = var_6;
        }
    }

    return var_1;
}

vehicle_dismount_watcher( var_0, var_1 )
{
    var_2 = level.hudglobalkillcountmax[var_1];
    var_3 = level.hudextractnum[var_1];
    var_4 = var_2 + anglestoright( var_3 ) * 1000;
    var_5 = var_3;
    var_6 = spawn( "script_model", var_2 );
    var_6 setmodel( "tag_origin" );
    var_6.angles = var_3;
    var_0 cameralinkto( var_6, "tag_origin" );
    var_6 moveto( var_4, 60 );
    var_6 rotateto( var_5, 60 );

    if ( 0 )
    {
        wait 5;
        var_0 cameraunlink();
    }
}

wait_for_time_or_notify()
{
    wait 1;
    var_0 = modifytriggerlocation();
    var_1 = setteamplacement( game["teamPlacements"], "up" );

    for ( var_2 = 0; var_2 < var_1.size - 1; var_2++ )
    {
        if ( isdefined( level.teamdata[var_1[var_2]]["plunderTeamTotal"] ) )
            var_3 = mlp2_front_truck( var_1[var_2] ) * 100;
    }
}

playerscoreeventvalue()
{
    wait 1;
    game["dialog"]["gametype"] = "gametype_bmo_plunder";
    game["dialog"]["match_start"] = "gametype_bmo_plunder";
    game["dialog"]["boost_short"] = "boost_bmo_short";
    game["dialog"]["offense_obj"] = "boost_bmo";
    game["dialog"]["defense_obj"] = "boost_bmo";
    game["dialog"]["contract_hold_area"] = "bm_contract_hold_area";
    game["dialog"]["contract_loot_chests"] = "bm_contract_loot_chests";
    game["dialog"]["contract_kill_target"] = "bm_contract_kill_target";
    game["dialog"]["event_chopper"] = "bm_event_chopper";
    game["dialog"]["event_airdrop"] = "bm_event_airdrop";
    game["dialog"]["extract_enabled"] = "bm_extract_enabled";
    game["dialog"]["gamestate_25_perc"] = "bm_gamestate_25_perc";
    game["dialog"]["gamestate_50_perc"] = "bm_gamestate_50_perc";
    game["dialog"]["gamestate_75_perc"] = "bm_gamestate_75_perc";
    game["dialog"]["gamestate_90_perc"] = "bm_gamestate_90_perc";
    game["dialog"]["gamestate_25_perc_enemy"] = "bm_gamestate_25_perc_enemy";
    game["dialog"]["gamestate_50_perc_enemy"] = "bm_gamestate_50_perc_enemy";
    game["dialog"]["gamestate_75_perc_enemy"] = "bm_gamestate_75_perc_enemy";
    game["dialog"]["gamestate_90_perc_enemy"] = "bm_gamestate_90_perc_enemy";
    game["dialog"]["gamestate_25_perc_first"] = "bm_gamestate_25_perc_first";
    game["dialog"]["gamestate_50_perc_first"] = "bm_gamestate_50_perc_first";
    game["dialog"]["gamestate_75_perc_first"] = "bm_gamestate_75_perc_first";
    game["dialog"]["gamestate_90_perc_first"] = "bm_gamestate_90_perc_first";
    game["dialog"]["lead_lost"] = "bm_gamestate_lead_lost";
    game["dialog"]["lead_taken"] = "bm_gamestate_lead_taken";
    game["dialog"]["mission_failure"] = "bm_gamestate_lost";
    game["dialog"]["mission_success"] = "bm_gamestate_win";
    game["dialog"]["gamestate_top_3"] = "bm_gamestate_top_3";
    game["dialog"]["gamestate_top_5"] = "bm_gamestate_top_5";
    game["dialog"]["gamestate_top_10"] = "bm_gamestate_top_10";
    game["dialog"]["bm_gamestate_overtime"] = "bm_gamestate_overtime_million_cash_deposited";
    game["dialog"]["bm_gamestate_overtime_enemy"] = "bm_tut_get_cash";
    game["dialog"]["bm_tut_get_cash"] = "bm_tut_get_cash";
    game["dialog"]["bm_tut_earn_cash"] = "bm_tut_earn_cash";
    game["dialog"]["bm_tut_loot_cash"] = "bm_tut_loot_cash";
    game["dialog"]["event_bank"] = "event_bank";
    game["dialog"]["exfil_arrived"] = "exfil_arrived";
    game["dialog"]["exfil_failed"] = "exfil_failed";
    game["dialog"]["exfil_inbound"] = "exfil_inbound";
    game["dialog"]["exfil_leaving"] = "exfil_leaving";
    game["dialog"]["exfil_start_generic"] = "exfil_start_generic";
    game["dialog"]["exfil_start_win"] = "exfil_start_win";
    game["dialog"]["exfil_start_win_lz"] = "exfil_start_win_lz";
    game["dialog"]["exfil_success_full"] = "exfil_success_full";
    game["dialog"]["exfil_success_partial"] = "exfil_success_partial";
}

_id_12F5A( var_0 )
{
    level endon( "game_ended" );
    level endon( "cancel_watch_parachuters_overhead" );

    for (;;)
    {
        foreach ( var_15, var_2 in level.allassassin_update_timed )
        {
            if ( !isdefined( var_2 ) || !scripts\mp\utility\player::isreallyalive( var_2 ) || !( var_2 isparachuting() || var_2 isinfreefall() ) )
            {
                level.allassassin_update_timed[var_15] = undefined;
                continue;
            }

            var_3 = scripts\common\utility::playersincylinder( var_2.origin, level.team_planted_bomb, undefined, level.tarmac_techo_start );
            var_4 = var_2.team;

            foreach ( var_6 in var_3 )
            {
                if ( scripts\mp\utility\game::questtimerupdate( var_6 ) )
                    continue;

                var_7 = var_4 == var_6.team;

                if ( var_7 )
                    continue;

                var_8 = !scripts\mp\utility\player::isreallyalive( var_6 ) || istrue( var_6.inlaststand );

                if ( var_8 )
                    continue;

                var_9 = var_6 isparachuting() || var_6 isinfreefall();

                if ( var_9 )
                    continue;

                var_10 = gettime();
                var_11 = isdefined( var_6.oldest_targeted_by_chopper_time ) && var_10 - var_6.oldest_targeted_by_chopper_time < var_0;

                if ( var_11 )
                    continue;

                var_6.oldest_targeted_by_chopper_time = var_10;
                var_12 = scripts\mp\gametypes\br_public.gsc::clear_and_give_killstreak_loadout_support( var_6 );
                var_13 = game["voice"][var_12];
                var_6 queuedialogforplayer( level.allassassin_updatecircle[var_13], "respawning_enemy_in_area", 2 );
            }

            waitframe();
        }

        waitframe();
    }
}

wait_for_tanks_almost_gone( var_0, var_1 )
{
    var_2 = scripts\mp\gamescore::modeaddtoteamlives();
}
