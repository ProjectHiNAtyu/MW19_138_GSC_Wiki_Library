// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    var_0 = getdvarfloat( "scr_br_pe_choppers_weight", 1.0 );
    var_1 = scripts\mp\gametypes\br_publicevents.gsc::_id_11955( 1, ::_id_12BBF, var_0, ::_id_12E1D, ::all_gas_trap_structs );
    var_2 = scripts\engine\utility::ter_op( scripts\mp\gametypes\br_publicevents.gsc::spawn_obit_model(), 120.0, 0 );
    var_1.onweapontaken = getdvarint( "scr_br_pe_choppers_lifetime", var_2 );
    game["dialog"]["public_events_choppers_start"] = "public_events_supply_choppers_start";
}

_id_12BBF()
{
    var_0 = scripts\mp\utility\game::missions_clearinappropriaterewards() == "dmz" || scripts\mp\utility\game::missions_clearinappropriaterewards() == "risk";
    return !var_0;
}

_id_12E1D()
{
    level endon( "game_ended" );
    level endon( "cancel_public_event" );
    var_0 = damageskipburndownmedium();
    wait( var_0 );
}

all_gas_trap_structs()
{
    level endon( "game_ended" );
    var_0 = getdvarint( "scr_br_pe_choppers_count", 5 );
    level damagestate( var_0 );
    scripts\mp\gametypes\br_publicevents.gsc::_id_1205D( "br_pe_choppers_start" );
    scripts\mp\gametypes\br_public.gsc::brleaderdialog( "public_events_choppers_start" );
    setomnvar( "ui_publicevent_minimap_pulse", 1 );
    thread _id_12296( var_0 );
    var_1 = 10.0;
    _id_12E9B( var_1 );
}

damageskipburndownmedium()
{
    var_0 = getdvarfloat( "scr_br_pe_choppers_starttime_min", 555.0 );
    var_1 = getdvarfloat( "scr_br_pe_choppers_starttime_max", 765.0 );

    if ( var_1 > var_0 )
        return randomfloatrange( var_0, var_1 );
    else
        return var_0;
}

_id_12E9B( var_0 )
{
    level endon( "game_ended" );

    if ( isdefined( var_0 ) )
        wait( var_0 );

    for (;;)
    {
        var_1 = level.secondsbeforeplacementupdates;

        if ( !isdefined( var_1 ) )
            break;

        var_1 = scripts\engine\utility::array_removeundefined( var_1 );

        if ( var_1.size == 0 )
            break;

        wait 1.0;
    }
}

_id_12296( var_0 )
{
    level endon( "game_ended" );
    var_1 = undefined;
    var_2 = undefined;

    if ( isdefined( level.br_circle ) && isdefined( level.br_circle.safecircleent ) )
    {
        var_1 = scripts\mp\gametypes\br_circle.gsc::getsafecircleorigin();
        var_2 = scripts\mp\gametypes\br_circle.gsc::getsafecircleradius();
    }
    else
    {
        level.animscripted_single = 35;
        level.wam_failure_threshold = 1;
        level.currlocation = 0;
        level thread scripts\mp\gametypes\br_functional_poi.gsc::_id_11F7A();
    }

    scripts\mp\gametypes\br_lootchopper.gsc::init();
    scripts\cp_mp\utility\script_utility::registersharedfunc( "br_lootchopper", "lootChopper_onCrateUse", ::stop_turbulence_just_before_the_end );

    if ( !isdefined( level.tokenrespawnwaittime ) )
    {
        var_3 = scripts\mp\gametypes\br_lootchopper.gsc::select_cliff_two_spawners( var_1, var_2 );
        scripts\mp\gametypes\br_lootchopper.gsc::select_equipment_spawners( var_3 );
    }

    var_4 = getdvarint( "scr_br_pe_choppers_mindist", 6000 );

    if ( level.mapname == "mp_br_mechanics" )
        var_4 = 1000;

    for ( var_5 = 0; var_5 < var_0; var_5++ )
    {
        var_6 = undefined;

        if ( isdefined( level.tokenrespawnwaittime ) )
            var_6 = level.tokenrespawnwaittime[var_5];
        else
        {
            var_7 = var_5 % 4 + 1;
            var_6 = scripts\mp\gametypes\br_lootchopper.gsc::select_bunker_roof_spawners( level.secondaryweaponbackup["quad_" + var_7], var_4 );
        }

        var_8 = scripts\mp\gametypes\br_lootchopper.gsc::select_mountain_three_spawners( var_6, "veh_chopper_support_pe_mp" );

        if ( isdefined( var_8 ) )
        {
            var_8.lootfunc = ::dropcrate;
            var_8.frontturret._id_129D1 = 1;
            var_8.frontturret makeunusable();
            var_8.rearturret._id_129D1 = 1;
            var_8.rearturret makeunusable();
            var_8.flaresreservecount = getdvarint( "scr_br_pe_choppers_flares", 0 );
            var_8.health = getdvarint( "scr_br_pe_choppers_health", 5000 );
            var_8.maxhealth = getdvarint( "scr_br_pe_choppers_health", 5000 );

            if ( self.onweapontaken )
                var_8.lifetime = self.onweapontaken;

            scripts\mp\objidpoolmanager::update_objective_icon( var_8.objectiveiconid, "ui_mp_br_mapmenu_icon_boss_chopper_event" );
        }

        wait 1;
    }

    var_9 = getdvarfloat( "scr_br_pe_chopppers_circle_damage_start_time", 10.0 );
    level.choose_two_spots = gettime() + int( var_9 * 1000.0 );
}

dropcrate()
{
    var_0 = scripts\mp\gametypes\br_lootchopper.gsc::select_bunker_interior_two_spawners( self.origin + ( 0, 0, 500 ) );

    if ( isdefined( var_0 ) )
    {
        var_1 = scripts\cp_mp\killstreaks\airdrop::heli_go_to_exfil_point( self.origin, var_0 );
        var_2 = scripts\cp_mp\killstreaks\airdrop::gettriggerobject( var_1 );
        var_2._id_12B9F = 10;

        if ( !isdefined( level.choose_spawners_from_matching_volumes ) )
            level.choose_spawners_from_matching_volumes = [];

        level.choose_spawners_from_matching_volumes[level.choose_spawners_from_matching_volumes.size] = var_1;
    }
}

stop_turbulence_just_before_the_end( var_0 )
{
    self.itemsdropped = 0;

    if ( !isdefined( level.choose_and_play_vo_from_array ) )
        level.choose_and_play_vo_from_array = 0;
    else
        level.choose_and_play_vo_from_array = ( level.choose_and_play_vo_from_array + 1 ) % 10;

    var_1 = verifybunkercode( "pe_chopper_crate", level.choose_and_play_vo_from_array );

    if ( isdefined( var_1 ) )
        var_1 = scripts\mp\gametypes\br_lootcache.gsc::select_new_spotlight_goal_node( var_1, var_0 );

    if ( isdefined( var_1 ) && var_0 scripts\mp\utility\perk::_hasperk( "specialty_br_extra_killstreak_chance" ) )
        var_1 = scripts\mp\gametypes\br_lootcache.gsc::select_patrol_four_spawners( var_1, var_0 );

    if ( isdefined( var_1 ) )
        var_2 = scripts\mp\gametypes\br_lootcache.gsc::select_bunker_interior_four_spawners( var_1 );

    if ( !isdefined( var_0.select_bunker_courtyard_spawners ) )
        var_0.select_bunker_courtyard_spawners = 1;
    else
        var_0.select_bunker_courtyard_spawners++;

    var_0 scripts\mp\utility\stats::setextrascore1( var_0.select_bunker_courtyard_spawners );
    var_0 thread scripts\mp\utility\points::giveunifiedpoints( "br_loot_chopper_box_open" );
}

dangercircletick( var_0, var_1 )
{
    if ( !isdefined( level.choose_two_spots ) || gettime() < level.choose_two_spots )
        return;

    var_2 = getdvarfloat( "scr_br_pe_choppers_circle_damage_tick", 500.0 );
    var_3 = 240.0;
    var_4 = level.secondsbeforeplacementupdates;

    if ( isdefined( var_4 ) )
    {
        var_4 = scripts\engine\utility::array_removeundefined( var_4 );

        foreach ( var_6 in var_4 )
        {
            var_7 = 0;
            var_8 = var_6.origin;
            var_9 = distance2d( var_0, var_8 );

            if ( var_9 + var_3 > var_1 )
                var_7 = 1;

            if ( var_7 )
            {
                var_10 = var_6.health;
                var_11 = var_6.maxhealth;
                var_6 dodamage( var_2, var_8, undefined, undefined, "MOD_TRIGGER_HURT", "danger_circle_br" );
            }
        }
    }

    var_13 = getdvarfloat( "scr_br_circle_object_cleanup_threshold", 2400.0 );
    var_14 = level.choose_spawners_from_matching_volumes;

    if ( isdefined( var_14 ) )
    {
        var_14 = scripts\engine\utility::array_removeundefined( var_14 );

        foreach ( var_16 in var_14 )
        {
            var_17 = distance2dsquared( var_16.origin, var_0 );
            var_18 = max( 0, var_1 + var_13 );

            if ( var_17 > var_18 * var_18 )
                var_16 thread scripts\cp_mp\killstreaks\airdrop::destroycrate();
        }
    }
}

damagestate( var_0 )
{
    level endon( "game_ended" );

    if ( !isdefined( level.br_circle ) || !isdefined( level.br_circle.safecircleent ) )
        return;

    var_1 = scripts\mp\gametypes\br_circle.gsc::getsafecircleorigin();
    var_2 = scripts\mp\gametypes\br_circle.gsc::getsafecircleradius();
    var_3 = 0.3;
    var_4 = 0.8;
    var_5 = var_2 * var_3;
    var_6 = var_2 * var_4;
    [var_8, var_9] = is_player_in_focus_fire_attacker_list( var_1, var_5, var_6 );

    if ( var_8 == var_9 )
        return;

    if ( var_8 != 0.0 || var_9 != 360.0 )
    {
        var_8 = var_8 + 20.0;
        var_9 = var_9 - 20.0;

        if ( var_9 <= var_8 )
            return;
    }
    else
    {
        var_10 = randomfloatrange( 0.0, 360.0 );
        var_8 = var_8 + var_10;
        var_9 = var_9 + var_10;
    }

    var_11 = ( var_9 - var_8 ) / max( 1.0, var_0 - 1 );
    level.tokenrespawnwaittime = [];

    for ( var_12 = 0; var_12 < var_0; var_12++ )
    {
        var_13 = var_8 + var_11 * var_12;
        var_14 = anglestoforward( ( 0.0, var_13, 0.0 ) );
        var_15 = randomfloatrange( var_5, var_6 );
        var_16 = var_1 + var_14 * var_15;

        if ( isscriptabledefined() )
            var_16 = getclosestpointonnavmesh( var_16 );

        var_17 = spawnstruct();
        var_17.origin = var_16;
        level.tokenrespawnwaittime[var_12] = var_17;
    }
}

is_player_in_focus_fire_attacker_list( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    var_3 = level.mapcenter - var_0;
    var_3 = ( var_3[0], var_3[1], 0.0 );
    var_3 = vectornormalize( var_3 );
    var_4 = vectortoyaw( var_3 );
    var_5 = var_0 + var_3 * var_1;
    var_6 = var_0 + var_3 * var_2;
    var_7 = !scripts\mp\outofbounds::ispointinoutofbounds( var_5 ) && !scripts\mp\outofbounds::ispointinoutofbounds( var_6 );

    if ( !var_7 )
        return [ 0.0, 0.0 ];

    var_8 = 45.0;
    var_9 = 45.0;
    var_10 = var_4;
    var_11 = var_4 + var_8;
    var_12 = var_4;
    var_13 = var_4 - var_9;
    var_14 = 0;
    var_15 = 180 / int( var_8 );
    var_16 = 0;
    var_17 = 1.0;

    for (;;)
    {
        if ( var_8 >= var_17 )
        {
            var_18 = anglestoforward( ( 0.0, var_11, 0.0 ) );
            var_19 = var_0 + var_18 * var_1;
            var_20 = var_0 + var_18 * var_2;
            var_21 = !scripts\mp\outofbounds::ispointinoutofbounds( var_19 ) && !scripts\mp\outofbounds::ispointinoutofbounds( var_20 );

            if ( var_21 )
            {
                var_10 = var_11;
                var_11 = var_10 + var_8;
            }
            else
            {
                var_16 = 1;
                var_8 = var_8 * 0.5;
                var_11 = var_10 + var_8;
            }
        }

        if ( var_9 >= var_17 )
        {
            var_22 = anglestoforward( ( 0.0, var_13, 0.0 ) );
            var_23 = var_0 + var_22 * var_1;
            var_24 = var_0 + var_22 * var_2;
            var_25 = !scripts\mp\outofbounds::ispointinoutofbounds( var_23 ) && !scripts\mp\outofbounds::ispointinoutofbounds( var_24 );

            if ( var_25 )
            {
                var_12 = var_13;
                var_13 = var_12 - var_9;
            }
            else
            {
                var_16 = 1;
                var_9 = var_9 * 0.5;
                var_13 = var_12 - var_9;
            }
        }

        if ( !var_16 )
        {
            var_14++;

            if ( var_14 >= var_15 )
                return [ 0.0, 360.0 ];
        }

        if ( var_8 < var_17 && var_9 < var_17 )
            return [ var_12, var_10 ];

        waitframe();
    }
}
