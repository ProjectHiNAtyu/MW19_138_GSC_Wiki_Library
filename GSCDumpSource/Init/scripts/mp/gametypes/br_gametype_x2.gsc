// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

#using_animtree("script_model");

create_disconnectplayer()
{
    level.scr_animtree["plane3"] = #animtree;
    level.scr_anim["plane3"]["x2_plane"] = %ingame_intro2_x2_bcloud3;
    level.scr_animname["plane3"]["x2_plane"] = "ingame_intro2_x2_Bcloud3";
    level.scr_animtree["plane4"] = #animtree;
    level.scr_anim["plane4"]["x2_plane"] = %ingame_intro2_x2_bcloud4;
    level.scr_animname["plane4"]["x2_plane"] = "ingame_intro2_x2_Bcloud4";
    level.scr_animtree["plane5"] = #animtree;
    level.scr_anim["plane5"]["x2_plane"] = %ingame_intro2_x2_bcloud5;
    level.scr_animname["plane5"]["x2_plane"] = "ingame_intro2_x2_Bcloud5";
    level.scr_animtree["guy1"] = #animtree;
    level.scr_anim["guy1"]["x2_exfil"] = %br_exfil_x2_guy_walk;
    level.scr_animname["guy1"]["x2_exfil"] = "br_exfil_x2_guy_walk";
    level.scr_animtree["guy2"] = #animtree;
    level.scr_anim["guy2"]["x2_exfil"] = %br_exfil_x2_guy_drag;
    level.scr_animname["guy2"]["x2_exfil"] = "br_exfil_x2_guy_drag";
    level.scr_animtree["guy3"] = #animtree;
    level.scr_anim["guy3"]["x2_exfil"] = %br_exfil_x2_guy_hit;
    level.scr_animname["guy3"]["x2_exfil"] = "br_exfil_x2_guy_hit";
    level.scr_animtree["guy4"] = #animtree;
    level.scr_anim["guy4"]["x2_exfil"] = %br_exfil_x2_dead_drag;
    level.scr_animname["guy4"]["x2_exfil"] = "br_exfil_x2_dead_drag";
}

init()
{
    screenent();
    level thread create_heartbeat_sensor_pick_ups();
    level thread create_juggernaut_spawner();
    level thread create_head_icon_for_crate();
    level thread create_heartbeat_sensor_pick_up();
    level._id_11AA6 = getdvarint( "scr_bmo_respawnHeightOverride", 7500 );
    level.cleanupswaploadoutflags._id_12850 = getdvar( "scr_wztrain_type", "armored" );
    level._id_1307D = 0;
    level._id_13081 = 0;
    scripts\mp\utility\sound::anim_spawnposition_override( "mp_don4_x2_event_sfx" );
    level.cheeselocs = ( 10940, -9123, 18925 );
    create_disconnectplayer();
}

screenent()
{
    level._effect["vfx_br_x2_explosion_a1"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_explosion_a1.vfx" );
    level._effect["vfx_extract_smoke"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_smk_red_a2.vfx" );
    level._effect["vfx_br_x2_airstrike_01"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_airstrike_01.vfx" );
    level._effect["vfx_br_x2_large_explosion"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_large_explosion.vfx" );
    level._effect["vfx_br_x2_smoke_column_1"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_smoke_column_1.vfx" );
    level._effect["vfx_br_x2_door_explosion"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_door_explosion.vfx" );
    level._effect["vfx_br_x2_embers_smoke"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_embers_smoke.vfx" );
    level._effect["vfx_br_x2_state_explosion"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_state_explosion.vfx" );
    level._effect["vfx_br_x2_fire_lrg"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_fire_lrg.vfx" );
    level._effect["vfx_br_x2_frenzied_sparks"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_frenzied_sparks.vfx" );
    level._effect["vfx_br_x2_linger_smoke"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_linger_smoke.vfx" );
    level._effect["vfx_br_x2_brake_sparks_loco"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_brake_sparks_02.vfx" );
    level._effect["vfx_br_x2_brake_sparks_car"] = loadfx( "vfx/iw8_br/gameplay/event/vfx_br_x2_brake_sparks_01.vfx" );
}

create_heartbeat_sensor_pick_ups()
{
    if ( getdvarint( "scr_br_x2_debug", 0 ) == 1 )
        scripts\mp\gametypes\br_gametypes.gsc::hostdamagepercentmedium( "allowLateJoiners" );

    scripts\mp\gametypes\br_gametypes.gsc::give_fists( "drogBagLoadout" );
    scripts\mp\gametypes\br_gametypes.gsc::give_fists( "gulag" );
    scripts\mp\gametypes\br_gametypes.gsc::hostdamagepercentmedium( "circleEarlyStart" );
    level.checkpoint_carepkg_spawns_func = ::create_exfil_animstruct;
}

create_juggernaut_spawner()
{
    scripts\mp\gametypes\br_gametypes.gsc::give_fists( "waitLoadoutDone" );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "onInfilSequenceEnd", ::create_debug_model_for_spawnpoint );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "playerNakedDropLoadout", ::create_silencer_pick_up );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "getDefaultLoadout", ::cratephysicson );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "playerKilledSpawn", ::update_volume_flag );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "markPlayerAsEliminatedOnKilled", ::set_spotlight_target_loc );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "mayConsiderPlayerDead", ::setincomingcallback );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "modifyPlayerDamage", ::create_name_fx );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "getFinalCircleCenter", ::crateusefunc );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "mapCenterFinalCircle", ::crateusefunc );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "startUICloseTimer", ::createprematchloadout );
    scripts\mp\gametypes\br_gametypes.gsc::zombienumhitshuman( "playerWelcomeSplashes", ::create_seatids_override );
    waittillframeend;
    level.ontimelimit = ::create_oscilloscope_screen;
    level thread create_keycard_for_reader();
    level.issidehouseobjective = 1;
    cqb_laser_guy();
    level._id_12BC4 = [];
    level thread create_laser_trap();
    create_laser_point_to_point();
    create_heli_stuct();
    level thread create_fake_loot_model_from_struct();

    if ( level.mapname == "mp_br_mechanics" )
        level thread createquestcircle();

    create_digit_models();
}

create_head_icon_for_crate()
{
    level endon( "game_ended" );
    level waittill( "br_dialog_initialized" );
    game["dialog"]["match_start"] = "gametype_battle_30";
    game["dialog"]["mode_desc1"] = "gametype_desc_battle_pve_10";
    game["dialog"]["mode_desc2"] = "gametype_desc_battle_pve_30";
    game["dialog"]["mode_desc3"] = "gametype_desc_battle_train_10";
    game["dialog"]["objective1_desc"] = "ambush_ready_30";
    game["dialog"]["destroy_car1"] = "car_start";
    game["dialog"]["destroy_car3"] = "car_more";
    game["dialog"]["destroy_car4"] = "car_half";
    game["dialog"]["destroy_car6"] = "car_done";
    game["dialog"]["train_incoming1"] = "train_incoming_30";
    game["dialog"]["train_incoming3"] = "train_incoming_10";
    game["dialog"]["train_incoming5"] = "train_incoming_40";
    game["dialog"]["train_incoming6"] = "train_incoming_20";
    game["dialog"]["train_stopped1"] = "train_neutral";
    game["dialog"]["train_stopped2"] = "train_stopped_30";
    game["dialog"]["train_stopped4"] = "train_stopped_10";
    game["dialog"]["train_stopped5"] = "train_stopped_40";
    game["dialog"]["train_stopped7"] = "train_stopped_20";
    game["dialog"]["train_stopped8"] = "ambush_last";
    game["dialog"]["outro_victory"] = "train_destroy";
    game["dialog"]["outro_bombers"] = "dx_bra_op4_outro_bombers";
    game["dialog"]["outro_bombs"] = "dx_bra_op4_outro_explosion_20";
    game["dialog"]["outro_first_hit"] = "dx_bra_op4_outro_hit_10";
    game["dialog"]["outro_second_hit"] = "dx_bra_op4_outro_explosion_10";
    game["dialog"]["outro_exfil_station"] = "dx_bra_op4_outro_hit_20";
    game["dialog"]["outro_exfil_amost_over"] = "dx_bra_op4_outro_cover";
}

cqb_laser_guy()
{
    scripts\cp_mp\utility\game_utility::_id_11A27( "delete_on_load", "targetname" );
}

create_heartbeat_sensor_pick_up()
{

}

create_laser_trap()
{
    level endon( "game_ended" );
    createagenttargetloadout( "mp_don4_x2", 0.5 );
}

create_exfil_animstruct()
{
    level.br_level._id_124B3 = 1;
}

create_oscilloscope_screen()
{
    if ( isdefined( level.numendgame ) )
        level thread scripts\mp\gametypes\br.gsc::startendgame( 1 );

    level.numendgame = undefined;
}

playerteleporttoloc( var_0 )
{
    level.chopperexfil_introsound = [];
    var_1 = tablelookupgetnumcols( var_0 ) - 1;

    for ( var_2 = 0; var_2 < var_1; var_2++ )
        level.chopperexfil_introsound[var_2] = focus_fire_outline_id( var_2, var_0 );
}

focus_fire_outline_id( var_0, var_1 )
{
    var_2["loadoutArchetype"] = "archetype_assault";
    var_2["loadoutPrimary"] = tablelookup( var_1, 0, "loadoutPrimary", var_0 + 1 );
    var_2["loadoutPrimaryAttachment"] = tablelookup( var_1, 0, "loadoutPrimaryAttachment1", var_0 + 1 );
    var_2["loadoutPrimaryAttachment2"] = tablelookup( var_1, 0, "loadoutPrimaryAttachment2", var_0 + 1 );
    var_2["loadoutPrimaryAttachment3"] = tablelookup( var_1, 0, "loadoutPrimaryAttachment3", var_0 + 1 );
    var_2["loadoutPrimaryAttachment4"] = tablelookup( var_1, 0, "loadoutPrimaryAttachment4", var_0 + 1 );
    var_2["loadoutPrimaryAttachment5"] = tablelookup( var_1, 0, "loadoutPrimaryAttachment5", var_0 + 1 );
    var_2["loadoutPrimaryCamo"] = tablelookup( var_1, 0, "loadoutPrimaryCamo", var_0 + 1 );
    var_2["loadoutPrimaryReticle"] = tablelookup( var_1, 0, "loadoutPrimaryReticle", var_0 + 1 );
    var_2["loadoutSecondary"] = tablelookup( var_1, 0, "loadoutSecondary", var_0 + 1 );
    var_2["loadoutSecondaryAttachment"] = tablelookup( var_1, 0, "loadoutSecondaryAttachment1", var_0 + 1 );
    var_2["loadoutSecondaryAttachment2"] = tablelookup( var_1, 0, "loadoutSecondaryAttachment2", var_0 + 1 );
    var_2["loadoutSecondaryAttachment3"] = tablelookup( var_1, 0, "loadoutSecondaryAttachment3", var_0 + 1 );
    var_2["loadoutSecondaryAttachment4"] = tablelookup( var_1, 0, "loadoutSecondaryAttachment4", var_0 + 1 );
    var_2["loadoutSecondaryAttachment5"] = tablelookup( var_1, 0, "loadoutSecondaryAttachment5", var_0 + 1 );
    var_2["loadoutSecondaryCamo"] = tablelookup( var_1, 0, "loadoutSecondaryCamo", var_0 + 1 );
    var_2["loadoutSecondaryReticle"] = tablelookup( var_1, 0, "loadoutSecondaryReticle", var_0 + 1 );
    var_2["loadoutMeleeSlot"] = "none";
    var_2["loadoutEquipmentPrimary"] = tablelookup( var_1, 0, "loadoutEquipmentPrimary", var_0 + 1 );
    var_2["loadoutEquipmentSecondary"] = tablelookup( var_1, 0, "loadoutEquipmentSecondary", var_0 + 1 );
    var_2["loadoutStreakType"] = "assault";
    var_2["loadoutKillstreak1"] = "none";
    var_2["loadoutKillstreak2"] = "none";
    var_2["loadoutKillstreak3"] = "none";
    var_2["loadoutSuper"] = tablelookup( var_1, 0, "loadoutSuper", var_0 + 1 );
    var_2["loadoutPerks"] = [ tablelookup( var_1, 0, "loadoutPerk1", var_0 + 1 ), tablelookup( var_1, 0, "loadoutPerk2", var_0 + 1 ), tablelookup( var_1, 0, "loadoutPerk3", var_0 + 1 ), tablelookup( var_1, 0, "loadoutExtraPerk1", var_0 + 1 ), tablelookup( var_1, 0, "loadoutExtraPerk2", var_0 + 1 ), tablelookup( var_1, 0, "loadoutExtraPerk3", var_0 + 1 ) ];
    var_2["loadoutGesture"] = "playerData";
    var_2["tableColumn"] = var_0;
    return var_2;
}

cratephysicson()
{
    var_0["loadoutArchetype"] = "archetype_assault";
    var_0["loadoutPrimary"] = "iw8_lm_t9light";
    var_0["loadoutPrimaryAttachment"] = "compensator_lm_t9light01";
    var_0["loadoutPrimaryAttachment2"] = "heavy_lm_t9light02";
    var_0["loadoutPrimaryAttachment3"] = "mixunder_lm_t9light02";
    var_0["loadoutPrimaryAttachment4"] = "quickdraw_lm_t9light02";
    var_0["loadoutPrimaryAttachment5"] = "mixclip_lm_t9light02";
    var_0["loadoutPrimaryCamo"] = "none";
    var_0["loadoutPrimaryReticle"] = "none";
    var_0["loadoutSecondary"] = "iw8_la_t9standard";
    var_0["loadoutSecondaryAttachment"] = "none";
    var_0["loadoutSecondaryAttachment2"] = "none";
    var_0["loadoutSecondaryAttachment3"] = "none";
    var_0["loadoutSecondaryAttachment4"] = "none";
    var_0["loadoutSecondaryAttachment5"] = "none";
    var_0["loadoutSecondaryCamo"] = "none";
    var_0["loadoutSecondaryReticle"] = "none";
    var_0["loadoutMeleeSlot"] = "none";
    var_0["loadoutEquipmentPrimary"] = "equip_semtex";
    var_0["loadoutEquipmentSecondary"] = "none";
    var_0["loadoutStreakType"] = "assault";
    var_0["loadoutKillstreak1"] = "none";
    var_0["loadoutKillstreak2"] = "none";
    var_0["loadoutKillstreak3"] = "none";
    var_0["loadoutSuper"] = "none";
    var_0["loadoutPerks"] = [ "specialty_hustle", "specialty_restock", "specialty_warhead" ];
    var_0["loadoutGesture"] = "playerData";
    var_0["loadoutExecution"] = "none";
    return var_0;
}

create_silencer_pick_up()
{
    if ( !isdefined( level.chopperexfil_introsound ) )
        playerteleporttoloc( "mp/classtable_x2.csv" );

    var_0 = level.chopperexfil_introsound[randomint( level.chopperexfil_introsound.size )];
    create_bomb_wire_info( var_0, 1 );
    scripts\mp\gametypes\br_pickups.gsc::forcegivesuper( var_0["loadoutSuper"], 0 );
    scripts\mp\gametypes\br_armor.gsc::monitor_truck( 1 );
    scripts\mp\gametypes\br_weapons.gsc::checkforsubgametypeoverrides();
    return 0;
}

create_bomb_wire_info( var_0, var_1, var_2 )
{
    self.pers["gamemodeLoadout"] = var_0;
    self.class = "gamemode";
    self.prevweaponobj = undefined;
    var_3 = scripts\mp\class::loadout_getclassstruct();
    var_3 = scripts\mp\class::loadout_updateclass( var_3, "gamemode" );
    scripts\mp\class::preloadandqueueclassstruct( var_3, 1, 1 );
    self takeallweapons();
    scripts\mp\class::giveloadout( self.team, "gamemode", var_1, var_1 );
    self givestartammo( var_3.loadoutprimaryobject );
    self givestartammo( var_3.loadoutsecondaryobject );
    scripts\mp\gametypes\br.gsc::monitor_game_end_on_front_truck_death( self );
    scripts\mp\gametypes\br_weapons.gsc::br_ammo_player_clear();

    if ( !istrue( var_2 ) )
        scripts\mp\gametypes\br_weapons.gsc::checkpoint_overwatch();

    scripts\mp\gametypes\br_weapons.gsc::br_ammo_update_weapons( self );
    self notify( "ammo_update" );
}

create_script_wait_for_flags()
{
    var_0 = [];
    var_1 = self getweaponslistprimaries();

    foreach ( var_3 in var_1 )
    {
        var_4 = scripts\mp\gametypes\br_weapons.gsc::br_ammo_type_for_weapon( var_3 );

        if ( isdefined( var_4 ) )
        {
            var_5 = weaponclipsize( var_3 );
            self.br_ammo[var_4] = var_5;
            scripts\mp\gametypes\br_weapons.gsc::br_ammo_player_hud_update_ammotype( var_4 );
        }
    }

    scripts\mp\gametypes\br_weapons.gsc::br_ammo_update_weapons( self );
}

update_volume_flag( var_0, var_1 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    thread validatefunc( 1 );
    return 1;
}

setincomingcallback( var_0 )
{
    return 1;
}

set_spotlight_target_loc()
{
    return 0;
}

unset_relic_nobulletdamage()
{
    if ( scripts\mp\gametypes\br_gametypes.gsc::propsetclonesleft( "missions" ) )
        return undefined;

    return self.watch_for_level_weapons_free;
}

validatefunc( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    if ( var_0 )
    {
        var_1 = getdvarfloat( "scr_br_respawnTrainHeight", 6000 );
        var_2 = getdvarfloat( "scr_br_respawnMaxTrainOffset", 7000 );
        var_3 = ( 0, 0, var_1 );
        var_4 = undefined;
        var_5 = getdvarfloat( "scr_br_respawnMaxMissionOffset", 3000 );
        var_6 = unset_relic_nobulletdamage();

        if ( isdefined( var_6 ) )
        {
            var_7 = level._id_1303C._id_12810[0].runplunderextractsitetimer.origin;
            var_8 = scripts\mp\gametypes\br_gulag.gsc::unset_relic_headbullets( 0, undefined );
            var_9 = [];
            var_9 = scripts\engine\utility::array_add( var_9, var_7 );

            if ( isdefined( var_8 ) )
                var_9 = scripts\engine\utility::array_add( var_9, var_8.origin );

            var_9 = scripts\engine\utility::array_add( var_9, self.lastdeathpos );
            var_10 = undefined;

            foreach ( var_12 in var_9 )
            {
                var_13 = distance2dsquared( var_6, var_12 );

                if ( !isdefined( var_10 ) || var_13 < var_10 )
                {
                    var_4 = var_12;
                    var_10 = var_13;
                }
            }
        }
        else
            var_4 = level._id_1303C._id_12810[0].runplunderextractsitetimer.origin;

        if ( isdefined( var_4 ) )
        {
            var_15 = scripts\mp\gametypes\br_gulag.gsc::minigameinfo( var_4 + var_3, var_2, undefined );

            if ( isdefined( var_15 ) )
            {
                var_16 = spawn( "script_model", var_15 );
                var_16.playerspawnpos = var_15;
                var_16.playerspawnangles = scripts\mp\gametypes\br_gulag.gsc::loot_getitemcountlefthand( var_15, var_6 );
                var_16.notti = 1;
                self.setspawnpoint = var_16;
            }
        }
        else
            var_17 = scripts\mp\gametypes\br_gulag.gsc::unset_relic_headbullets( 0, undefined );

        self.wait_display_pavelow_boss_health_bar = scripts\mp\gametypes\br_gulag.gsc::unsetreduceregendelayonkills( 0, undefined, var_1 );
        self.wait_display_pavelow_boss_health_bar.index = -1;
    }
    else
    {
        self.wait_display_pavelow_boss_health_bar = scripts\mp\gametypes\br.gsc::getspawnpoint( 1 );
        var_1 = scripts\cp_mp\parachute::getc130height();
        var_18 = scripts\engine\utility::drop_to_ground( self.wait_display_pavelow_boss_health_bar.origin, 1500, -20000 );
        var_3 = ( 0, 0, var_1 );
        self.wait_display_pavelow_boss_health_bar.origin = scripts\mp\gametypes\br.gsc::getoffsetspawnorigin( var_18, var_3 );
    }

    scripts\mp\playerlogic::waitandspawnclient( 0 );
    self freezecontrols( 1 );

    if ( !istrue( level.skipprematchdropspawn ) )
        thread scripts\mp\gametypes\br.gsc::prematchdeployparachute();

    while ( !isalive( self ) )
        waitframe();

    waitframe();
    scripts\mp\gametypes\br_armor.gsc::monitor_truck( 1 );
    scripts\mp\gametypes\br_weapons.gsc::checkforsubgametypeoverrides();
    thread scripts\mp\gametypes\br.gsc::checkpoint_fx_play();
    self skydive_setdeploymentstatus( 1 );
    self skydive_setbasejumpingstatus( 1 );
    self visionsetnakedforplayer( "mp_don4_x2", 0 );
    var_19 = !self isplayerheadless();
    var_20 = gettime();

    if ( var_19 )
    {
        while ( isalive( self ) && isdefined( self.weaponlist ) && !self hasloadedviewweapons( self.weaponlist ) )
        {
            if ( var_20 + 3000 < gettime() )
                break;

            waitframe();
        }
    }

    self notify( "brWaitAndSpawnClientComplete" );
    self.waitingtospawn = 0;
    self freezecontrols( 0 );

    if ( var_0 )
        scripts\mp\gametypes\br.gsc::_id_12A58( self );
}

create_vault_assault_loadout_selection( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\mp\gametypes\br_quest_util.gsc::createquestinstance( var_0, var_1 + "-" + self.squadindex, var_2, var_3, self.squadindex );
    var_4 scripts\mp\gametypes\br_quest_util.gsc::zombiepingtime( self );
    var_4.team = self.team;
    var_4.startlocation = self.origin;
    var_4.gameisending = self.origin;
    var_4.playerlist = level.squaddata[self.team][self.squadindex].players;
    return var_4;
}

create_usb_anim_rig( var_0 )
{
    if ( var_0.team == self.team && var_0.squadindex == self.squadindex )
        return 1;
    else
        return 0;
}

cp_smuggler_sound_load( var_0, var_1 )
{
    var_2 = self;

    if ( isdefined( level.questinfo.quests[var_0].instances[var_2.team + "-" + var_2.squadindex] ) )
        return;

    var_3 = [[ var_1 ]]( var_2.team, "", var_2, "" );

    if ( isdefined( var_3 ) )
        var_3 thread create_oscilloscope();

    return var_3;
}

create_oscilloscope()
{
    var_0 = self;
    var_0 waittill( "removed" );
    var_0 notify( "update" );
}

create_ambient_vehicle( var_0, var_1 )
{
    return level.questinfo.quests[var_0].instances[var_1.team + "-" + var_1.squadindex];
}

crate_objectives( var_0 )
{
    var_1 = [];

    foreach ( var_3 in var_0 )
    {
        if ( isdefined( var_3 ) && isalive( var_3 ) )
            var_1[var_1.size] = var_3;
    }

    return var_1;
}

create_vehicle_omnvars_data( var_0 )
{
    foreach ( var_2 in var_0.playerlist )
        var_2.watch_for_level_weapons_free = undefined;
}

create_heli_stuct()
{
    scripts\mp\flags::gameflaginit( "x2_ambush1_starting", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush1_completed", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush2_starting", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush2_completed", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush3_starting", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush3_completed", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush4_starting", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush4_completed", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush4_starting", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush4_completed", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush5_starting", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush5_completed", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush6_starting", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush6_completed", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush7_starting", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush7_completed", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush8_starting", 0 );
    scripts\mp\flags::gameflaginit( "x2_ambush8_completed", 0 );
    scripts\mp\flags::gameflaginit( "x2_train_destroyed", 0 );
    scripts\mp\flags::gameflaginit( "x2_train_one_cart_left", 0 );
}

create_debug_model_for_spawnpoint()
{
    level thread createquestcircle();
    create_execution_devgui();
}

createquestcircle()
{
    scripts\mp\flags::gameflagwait( "prematch_done" );
    wait 1;
    level thread create_name_fx_base();
    level thread createzombieloadout();
    thread create_cam();
    showsplash( "br_x2_introduction" );
    wait 1.5;
    var_0 = crate_weapons();

    foreach ( var_2 in var_0 )
    {
        foreach ( var_4 in var_2 )
        {
            if ( var_4.players.size == 0 )
                continue;

            var_4 thread create_vehicle_interact();
        }
    }
}

create_digit_models()
{
    level.binoculars_updateheadiconvisibilityforplayer = [];
    cqb_laser_guy_internal( 1, 0, 0, ( 4606, -820, -100 ), 0, 1, 0, 1 );
    cqb_laser_guy_internal( 2, 1, 1, ( -6732, -38470, 514.5 ), 1, 1, 0, 0 );
}

cqb_laser_guy_internal( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    var_8 = spawnstruct();
    var_8.binoculars_updatetargetmarker = var_0;
    var_8.hallway_jugg_spawner = var_1;
    var_8._id_12038 = var_2;
    var_8.position = var_3;
    var_8.obj_a_post_behavior = var_4;
    var_8.pristinestatehealthadd = var_5;
    var_8.give_saw_to_player = var_6;
    var_8._id_1284A = var_7;
    level.binoculars_updateheadiconvisibilityforplayer[var_0] = var_8;
}

cratecleanup( var_0 )
{
    return level.binoculars_updateheadiconvisibilityforplayer[var_0];
}

create_name_fx_base()
{
    level endon( "game_ended" );
    level endon( "train_destroyed" );
    level endon( "x2_train_one_cart_left" );
    var_0 = level._id_1303C._id_12810[0];
    var_0 scripts\mp\gametypes\br_movingtrain.gsc::_id_1280E( 2, 2 );

    if ( !isdefined( level._id_1303C ) || !isdefined( level._id_1303C.animents ) && !isdefined( level._id_1303C.animents[0] ) )
        return;

    foreach ( var_2 in level.binoculars_updateheadiconvisibilityforplayer )
        cp_landlord_sound_load( var_2 );
}

cp_landlord_sound_load( var_0 )
{
    var_1 = level._id_1303C._id_12810[0];

    if ( var_0.hallway_jugg_spawner )
        wait 2;

    if ( var_0._id_12038 )
    {
        if ( var_0.obj_a_post_behavior )
        {
            level._id_13090 = "signal";
            scripts\mp\gametypes\br_x2_bomb_quest.gsc::_id_1229E( var_0.position );
        }
        else
            level._id_13090 = "bomb";
    }

    createhudtimer( "ambush" + var_0.binoculars_updatetargetmarker );
    var_2 = getdvarvector( "scr_br_x2_amb_destination", var_0.position );
    level.freight_lift_waittill_progress = var_0.binoculars_updatetargetmarker;
    var_3 = getdvarint( "scr_br_x2_amb_warn_distance2", 6000 );
    var_4 = getdvarint( "scr_br_x2_amb_warn_distance3", 3000 );
    var_5 = getdvarint( "scr_br_x2_amb_warn_distance4", 50 );
    var_6 = 200;
    var_7 = 3700;
    _id_12E94( var_1, var_2, var_3 );

    if ( var_0.pristinestatehealthadd )
        showsplash( "br_x2_distance02" );

    level notify( "train_incoming" );

    if ( var_0.obj_a_post_behavior )
    {
        _id_12E94( var_1, var_2, var_7 );
        thread createserverfontstring( var_0.binoculars_updatetargetmarker, var_0.position );
    }

    _id_12E94( var_1, var_2, var_4 );

    if ( var_0.pristinestatehealthadd )
        showsplash( "br_x2_distance03" );

    scripts\mp\flags::gameflagset( "x2_ambush" + var_0.binoculars_updatetargetmarker + "_starting" );

    if ( var_0.pristinestatehealthadd )
        var_1 scripts\mp\gametypes\br_movingtrain.gsc::_id_1280E( 2, 2 );

    _id_12E94( var_1, var_2, var_5 );

    if ( var_0.pristinestatehealthadd )
    {
        if ( var_0.give_saw_to_player )
            showsplash( "br_x2_distance04" );
        else
            showsplash( "br_x2_train_immobilized" );
    }

    _id_12E94( var_1, var_2, var_6 );
    level.battlechatterenabled = 0;

    if ( !var_0._id_1284A )
        level._id_1303C.weapon_xp_iw8_pi_mike1911 = 1;

    var_8 = scripts\engine\utility::ter_op( var_0.pristinestatehealthadd, 8, 3 );
    thread createpropspecatehud( var_8, 0 );

    if ( var_0.pristinestatehealthadd )
    {
        createspawncamera( var_0.binoculars_updatetargetmarker );
        var_1 scripts\mp\gametypes\br_movingtrain_armored.gsc::cp_raid_complex_behavior();
        scripts\mp\gametypes\br_x2_bomb_quest.gsc::enable_super_when_leaving_turret();
        scripts\mp\flags::gameflagset( "x2_ambush" + var_0.binoculars_updatetargetmarker + "_completed" );
        wait 10;
    }
    else
    {
        createstreakinfo_ai_turret( var_8 + 1 );
        wait 2;
        scripts\mp\gametypes\br_movingtrain_armored.gsc::cruise_predator_direction_override();
        scripts\mp\gametypes\br_movingtrain_armored.gsc::cruisepredator_watchgameend();
        var_1 scripts\mp\gametypes\br_movingtrain_armored.gsc::_id_129B6();
        scripts\mp\flags::gameflagset( "x2_ambush" + var_0.binoculars_updatetargetmarker + "_completed" );
        wait 6;
    }

    createteamdefenderflag( var_0._id_1284A );

    if ( var_0.give_saw_to_player )
        var_1 scripts\mp\gametypes\br_movingtrain_armored.gsc::_id_129B6();

    level.battlechatterenabled = 1;
    var_9 = var_0.binoculars_updatetargetmarker - 2;

    if ( var_9 >= 1 )
        crate_index( var_9 );
}

createstreakinfo_ai_turret( var_0 )
{
    if ( var_0 > 0 )
        wait( var_0 );

    createapcturret();

    foreach ( var_2 in level.players )
    {
        if ( !isdefined( var_2 ) )
            continue;

        scripts\mp\gametypes\br_killstreaks.gsc::get_actual_grenade_name( var_2, "x2_train_attack", undefined, 2 );
    }

    wait 3.5;
    thread createscreeneffectext();
    wait 3;
    thread scripts\mp\gametypes\br_movingtrain_armored.gsc::br_pelletmaxdamage();
}

createteamdefenderflag( var_0 )
{
    var_1 = level._id_1303C._id_12810[0];
    thread createscript_covernodes( 1 );
    wait 5;

    if ( var_0 )
    {
        if ( !istrue( level._id_1303C.weapon_xp_iw8_pi_mike1911 ) && !scripts\mp\flags::gameflag( "x2_train_destroyed" ) )
        {
            var_1 scripts\mp\gametypes\br_movingtrain.gsc::_id_1280E( 0.95, 0.05 );
            thread createrectangularzonebasedonent( "accelFromIdle" );
        }

        scripts\mp\gametypes\br_movingtrain_armored.gsc::_id_11F07();
    }
    else if ( !level._id_1303C.raise_airlock )
        level thread scripts\mp\gametypes\br_movingtrain_armored.gsc::_id_1284C();
}

createpropspecatehud( var_0, var_1 )
{
    level notify( "x2_train_stopped" );
    level endon( "x2_train_stopped" );
    var_2 = level._id_1303C._id_12810[0];
    var_2 scripts\mp\gametypes\br_movingtrain.gsc::_id_12817( var_0 );

    if ( var_1 )
        thread createrectangularzonebasedonent( "train_destroyed", var_0 );
    else
    {
        thread createrectangularzonebasedonent( "brake", var_0 );
        thread createquestobjicon( var_0 );
    }
}

createzombieloadout()
{
    scripts\mp\flags::gameflagwait( "x2_train_one_cart_left" );

    if ( !level._id_1303C.raise_airlock )
        level thread scripts\mp\gametypes\br_movingtrain_armored.gsc::_id_1284C();

    level thread _id_12045();
    scripts\mp\flags::gameflagwait( "x2_train_destroyed" );
    thread createpropspecatehud( 3, 1 );
    level.battlechatterenabled = 1;
    level notify( "train_destroyed" );
    level createplayerplundereventdata();
}

_id_12045()
{
    level endon( "x2_train_destroyed" );
    wait 3;
    showsplash( "br_x2_finishtrain" );
}

_id_12E94( var_0, var_1, var_2 )
{
    var_3 = var_2 * var_2;

    while ( length2dsquared( var_0.origin - var_1 ) > var_3 )
        waitframe();
}

showsplash( var_0 )
{
    foreach ( var_2 in level.players )
        var_2 scripts\mp\hud_message::showsplash( var_0 );
}

_id_12387( var_0 )
{
    foreach ( var_2 in self.players )
        var_2 scripts\mp\hud_message::showsplash( var_0 );
}

createserverfontstring( var_0, var_1 )
{
    var_2 = -70;
    var_3 = 1150;
    var_4 = var_1;

    switch ( var_0 )
    {
        case 1:
            break;
        case 2:
            var_2 = 290;
            break;
        case 3:
            var_2 = 328;
            break;
        case 4:
            break;
        case 5:
            var_2 = 90;
            break;
        case 6:
            break;
        case 7:
            break;
        case 8:
            var_2 = 184;
            break;
        default:
            break;
    }

    level thread cpoperationcrateactivatecallback( var_4, var_2, var_3 );
}

createspawncamera( var_0 )
{
    var_1 = ( -90, 0, 0 );
    var_2 = ( 0, 0, 0 );

    switch ( var_0 )
    {
        case 1:
            var_2 = ( 4595, -1000, -160 );
            var_1 = ( 0, 86, 0 );
            break;
        case 2:
            var_2 = ( 2477, 18513, -137 );
            var_1 = ( -90, 0, 0 );
            break;
        case 3:
            var_2 = ( -15901, 29619, -184 );
            break;
        case 4:
            var_2 = ( -31170, 9206, -380 );
            var_1 = ( 0, 305, 0 );
            break;
        case 5:
            var_2 = ( -31620, -13572, -250 );
            break;
        case 6:
            var_2 = ( -27351, -33773, 42 );
            break;
        case 7:
            var_2 = ( -6732, -38470, 514.5 );
            break;
        case 8:
            var_2 = ( 3583, -33457, -23 );
            break;
        default:
            break;
    }

    var_3 = spawn( "script_model", var_2 );
    var_3 setmodel( "x2_vfx_ambushes_spawn" );
    var_3.angles = var_1;
    var_3 setscriptablepartstate( "base", "ambush_" + var_0 );
    var_3 thread empdrone_killstreaktargetthink( 5 );
}

createagenttargetloadout( var_0, var_1 )
{
    level._id_12D76 = var_0;

    if ( !isdefined( var_1 ) )
        var_1 = 0;

    foreach ( var_3 in level.players )
        var_3 visionsetnakedforplayer( var_0, var_1 );
}

create_vehicle_interact()
{
    level endon( "game_ended" );
    level endon( "train_destroyed" );

    for ( var_0 = 0; var_0 < level.binoculars_updateheadiconvisibilityforplayer.size; var_0++ )
    {
        if ( var_0 != 0 )
        {
            waitframe();
            create_nav_obstacle_for_wheelson( var_0 );
            var_1 = cratecleanup( var_0 + 1 );

            if ( !var_1.pristinestatehealthadd )
                continue;

            create_weapon_pick_up( scripts\mp\gametypes\br_x2_map_quest.gsc::bonus_target_score );
            wait 2;

            switch ( level._id_13090 )
            {
                case "signal":
                    _id_12387( "br_x2_bomb_quest_signal" );
                    break;
                case "bomb":
                default:
                    _id_12387( "br_x2_bomb_quest_bomb" );
                    break;
            }
        }

        create_weapon_pick_up( scripts\mp\gametypes\br_x2_bomb_quest.gsc::bonus_target_score );
        wait 2;

        if ( !scripts\mp\flags::gameflag( "x2_ambush" + ( var_0 + 1 ) + "_starting" ) && !scripts\mp\flags::gameflag( "x2_train_one_cart_left" ) )
        {
            create_weapon_pick_up( scripts\mp\gametypes\br_x2_amb1_quest.gsc::bonus_target_score );
            wait 2;
        }
    }

    create_weapon_pick_up( scripts\mp\gametypes\br_x2_map_quest.gsc::bonus_target_score );
}

create_nav_obstacle_for_wheelson( var_0 )
{
    if ( level._id_1307D == var_0 )
        return;

    level._id_1307D = var_0;
    level.cleanupswaploadoutflags._id_13095 = 0;
    level._id_13081 = 0;
    level._id_13093 = 0;
    createvisualsinfo();
}

create_weapon_pick_up( var_0 )
{
    var_1 = _id_12E1C();

    if ( !isdefined( var_1 ) )
        return;

    var_2 = var_1 [[ var_0 ]]();
    var_2 waittill( "removed" );
}

_id_12E1C()
{
    while ( self.players.size != 0 )
    {
        foreach ( var_1 in self.players )
        {
            if ( isalive( var_1 ) && !istrue( var_1.inlaststand ) && !var_1 scripts\mp\gametypes\br_public.gsc::questtypes() )
                return var_1;
        }

        wait 1;
    }

    return undefined;
}

create_keycard_for_reader()
{
    scripts\mp\flags::gameflagwait( "prematch_done" );

    foreach ( var_1 in level.vehicle.spawn.databyref )
        var_1.canspawncallback = ::cprooftopcratecapturecallback;
}

cprooftopcratecapturecallback( var_0, var_1, var_2, var_3 )
{
    var_4 = ( -25571, -10031, 84 );
    var_5 = 45981;

    if ( distance2d( var_2.origin, var_4 ) > var_5 )
        return 0;

    var_4 = ( -11360, -20916, 154 );
    var_5 = 13000;

    if ( distance2d( var_2.origin, var_4 ) < var_5 )
        return 0;

    var_4 = ( -12737, -9293, 412 );
    var_5 = 18000;

    if ( distance2d( var_2.origin, var_4 ) < var_5 )
        return 0;

    var_4 = ( -17354, 15846, -260 );
    var_5 = 8000;

    if ( distance2d( var_2.origin, var_4 ) < var_5 )
        return 0;

    return 1;
}

create_laser_point_to_point()
{
    level._id_13085 = [];
    level._id_13084 = [];
    var_0 = [];
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( 4212, 2380, -411 ), ( 10, 72, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( 4134, 5267, -151 ), ( 24, 96, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( 4571, 8159, -395 ), ( 0, 122, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( 4634, 6717, -403 ), ( 10, 97, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( 3235, 4748, -550 ), ( 10, 89, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( 3572, 1049, -421 ), ( 11, 58, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( 3430, 4698, -210 ), ( 10, 1, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( 4228, 6892, -435 ), ( 0, 92, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( 3816, 1575, -409 ), ( 10, 72, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( 3903, 3089, -268 ), ( 15, 89, 1 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( 4844, 4758, -533 ), ( 10, 89, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "motorcycle", ( 2376, 1482, -305 ), ( 0, 50, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "motorcycle", ( 3559, 6840, -440 ), ( 0, 89, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "little_bird_mg", ( 2767, 2841, -390 ), ( 0, 26, 0 ) );
    level._id_13085["ambush1"] = var_0;
    var_0 = [];
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( 2280, 13376, -247 ), ( 0, 10, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -340, 18379, -227 ), ( 0, 4, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -3845, 24293, -350 ), ( 0, 180, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( 3128, 15428, -220 ), ( 0, 126, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( 637, 19690, -200 ), ( 0, 43, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( 293, 22204, -330 ), ( 0, 68, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -7115, 25702, -365 ), ( 0, 177, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( 5681, 16665, -182 ), ( 0, 228, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -488, 16534, -189 ), ( 0, 354, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( 2649, 21247, -170 ), ( 0, 135, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -5463, 23766, -345 ), ( 0, 88, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "motorcycle", ( 1609, 19892, -170 ), ( 0, 120, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "motorcycle", ( -1767, 23633, -355 ), ( 0, 180, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "little_bird_mg", ( -5800, 24591, -290 ), ( 0, 180, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "little_bird_mg", ( -5800, 25196, -290 ), ( 0, 180, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "little_bird_mg", ( 354, 17585, 0 ), ( 0, -110, 0 ) );
    level._id_13085["ambush2"] = var_0;
    var_0 = [];
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -19007, 30179, -43 ), ( 15, 95, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -19238, 30226, -42 ), ( 15, 95, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -17834, 32062, -32 ), ( 15, 171, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -19630, 32924, -32 ), ( 15, 274, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -21596, 32149, 12 ), ( 15, 184, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -22235, 32084, 44 ), ( 15, 187, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -21796, 31408, 38 ), ( 15, 217, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -32072, 23612, 153 ), ( 15, 221, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -26182, 30991, 172 ), ( 15, 157, -2 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -29228, 29372, 444 ), ( 15, 42, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -27215, 32315, 267 ), ( 15, 262, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -31878, 27374, 281 ), ( 15, 164, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -33634, 18752, 200 ), ( 0, 290, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "motorcycle", ( -20233, 32621, -120 ), ( 0, 289, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "motorcycle", ( -24009, 31375, 25 ), ( 0, 160, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "motorcycle", ( -34925, 24098, 410 ), ( 0, 298, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "little_bird_mg", ( -29610, 29751, 400 ), ( 0, 87, 0 ) );
    level._id_13085["ambush3"] = var_0;
    var_0 = [];
    var_0[var_0.size] = crankedprogressuiupdater( "little_bird_mg", ( -33300, -8638, -135 ), ( 0, 302, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "little_bird_mg", ( -33781, -8992, -135 ), ( 0, 317, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -32215, 16768, -65 ), ( 0, 287, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -30765, 10840, -55 ), ( 0, 236, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -32171, 6952, -121 ), ( 0, 289, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -32511, 4293, -245 ), ( 0, 358, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -31249, 6897, -102 ), ( 0, 246, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -29068, 8078, -253 ), ( 0, 215, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -33448, 9708, -18 ), ( 0, 281, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -33256, 13352, 114 ), ( 0, 279, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -31453, 5813, -127 ), ( 0, 243, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -30397, 12789, -105 ), ( 0, 190, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "motorcycle", ( -32498, 3744, -220 ), ( 0, 290, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "motorcycle", ( -33159, -4684, -160 ), ( 0, 300, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "little_bird_mg", ( -32749, 4980, -100 ), ( 0, 269, 0 ) );
    level._id_13085["ambush4"] = var_0;
    var_0 = [];
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -32757, -16900, -276 ), ( 0, 264, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -33583, -10132, -257 ), ( 0, 318, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -33583, -17625, -176 ), ( 0, 271, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -32810, -24528, -192 ), ( 0, 269, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -33617, -3219, -120 ), ( 0, 330, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -33013, -16278, -276 ), ( 0, 233, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -33076, -14436, -129 ), ( 0, 266, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -33882, -11430, -113 ), ( 0, 354, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -31594, -26667, -185 ), ( 0, 278, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -32912, -13145, -135 ), ( 0, 272, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -33870, -9593, -225 ), ( 0, 332, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -32033, -9459, -200 ), ( 0, 270, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "motorcycle", ( -31846, -17515, -255 ), ( 0, 272, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "motorcycle", ( -32751, -23216, -195 ), ( 0, 320, 0 ) );
    level._id_13085["ambush5"] = var_0;
    var_0 = [];
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -31110, -29996, -177 ), ( 0, 323, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -28265, -35685, 230 ), ( 0, 257, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -29386, -36757, 241 ), ( 0, 280, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -11936, -42553, 297 ), ( 0, 56, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -24612, -32125, -28 ), ( 0, 286, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -29362, -31565, -44 ), ( 0, 306, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -26343, -33770, -43 ), ( 0, 356, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -28269, -37353, 363 ), ( 0, 310, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -22634, -40756, 836 ), ( 0, 347, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -17060, -38260, 1416 ), ( 0, 336, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -29559, -33070, 40 ), ( 0, 355, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -29500, -35934, 245 ), ( 0, 245, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "motorcycle", ( -26305, -33046, -30 ), ( 0, 130, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "little_bird_mg", ( -29620, -34876, 275 ), ( 0, 252, 0 ) );
    level._id_13085["ambush6"] = var_0;
    var_0 = [];
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -10440, -41230, 145 ), ( 0, 30, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -8315, -37181, 280 ), ( 0, 10, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "jeep", ( -5267, -35340, 567 ), ( 0, 354, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -11522, -37916, 435 ), ( 0, 340, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -5545, -36403, 659 ), ( 0, 15, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -4279, -37724, 685 ), ( 0, 5, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -2344, -35590, 650 ), ( 0, 122, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "tac_rover", ( -6092, -41010, 290 ), ( 0, 68, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -11797, -39296, 620 ), ( 0, 8, 0 ) );
    var_0[var_0.size] = crankedprogressuiupdater( "cargo_truck", ( -2949, -37766, 829 ), ( 0, 355, 0 ) );
    level._id_13085["ambush7"] = var_0;
}

crankedprogressuiupdater( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.refname = var_0;
    var_3.origin = var_1;
    var_3.angles = var_2;
    return var_3;
}

createhudtimer( var_0 )
{
    if ( getdvarint( "scr_br_x2_vehicle_set_enabled", 1 ) == 0 )
        return;

    if ( !isdefined( level._id_13085 ) )
        return;

    var_1 = level._id_13085[var_0];

    if ( !isdefined( var_1 ) )
        return;

    var_2 = [];

    foreach ( var_4 in var_1 )
    {
        waitframe();
        var_2[var_2.size] = createhudstring( var_4.refname, var_4.origin, var_4.angles );
    }

    level._id_13083[var_0] = var_2;
}

createhudstring( var_0, var_1, var_2 )
{
    if ( level.vehiclecount >= 105 )
        return undefined;

    var_3 = spawnstruct();
    var_4 = spawnstruct();
    var_4.origin = var_1;
    var_4.angles = var_2;
    var_5 = scripts\mp\gametypes\br_vehicles.gsc::tryspawnavehicle( var_0, var_4, "X2_spawns", var_3 );
    return var_5;
}

crate_index( var_0 )
{
    for ( var_1 = 1; var_1 <= var_0; var_1++ )
    {
        var_2 = "ambush" + var_1;

        if ( level._id_13083[var_2].size <= 0 )
            continue;

        var_3 = [];

        foreach ( var_5 in level._id_13083[var_2] )
        {
            if ( !isdefined( var_5 ) || !isdefined( var_5.origin ) )
                continue;

            var_6 = scripts\common\utility::playersinsphere( var_5.origin, 5000 );

            if ( !isdefined( var_5.owner ) || var_5.isempty && var_6.size <= 0 )
            {
                level.vehicle.instances[var_5.vehiclename] = scripts\engine\utility::array_remove( level.vehicle.instances[var_5.vehiclename], var_5 );
                var_5 delete();
                continue;
            }

            var_3[var_3.size] = var_5;
        }

        level._id_13083[var_2] = var_3;
    }
}

createprematchloadout( var_0, var_1, var_2, var_3 )
{
    return 1;
}

crateusefunc()
{
    return ( -64642, -39932, 1509 );
}

createplayerplundereventdata()
{
    var_0 = getdvarfloat( "scr_x2_delay_before_outro", 15 );

    foreach ( var_2 in level.players )
    {
        var_2._id_13082 = 1;
        var_2 thread create_silencer_pick_ups();
    }

    level.retry_no_votes = 1;
    level.issidehouseobjective = 0;
    level.binoculars_onstateexitfunc = 1;
    wait( var_0 );
    createobjectivelist();
    level waittill( "strike_4" );
    setmusicstate( "" );
    var_4 = crates_delete_early();
    create_struct_at( var_4, 0 );
    create_traversal_node_and_link();
    thread create_chopper_boss();
    level thread scripts\mp\gamelogic::forceend();
}

createobjectivelist()
{
    var_0 = getdvarfloat( "scr_x2_delay_before_intro2", 5 );
    var_1 = getdvarfloat( "scr_x2_delay_before_exfil", 12 );
    var_2 = getdvarfloat( "scr_x2_delay_before_planes", 10 );
    thread create_temp_infil_structs( var_0 );
    thread crate_set_flag_on_use( var_1 );
    thread createjuggdroplocation( var_2 );
}

create_temp_infil_structs( var_0 )
{
    wait( var_0 );
    thread create_puddle_triggers( "mp_warzone_intro2_x2_pt1", 1 );
    wait 1;
    crate_follow_text();
    thread create_player_rig_laser_panel();
}

createallhistorydestinations()
{
    var_0 = getdvarfloat( "scr_x2_bomb_delay_warning", 9 );
    var_1 = getdvarfloat( "scr_x2_delay_before_pip1", 2 );
    var_2 = getdvarint( "scr_x2_pip1_enable", 0 );

    if ( var_2 > 0 )
    {
        wait( var_1 );
        create_race( "mp_warzone_intro2_x2_pt2", 1 );
    }

    level waittill( "splash_bomb" );

    if ( var_0 > 6.5 )
        wait( var_0 - 6.5 );

    create_race( "mp_warzone_intro2_x2_pt3", 1 );
}

createjuggdroplocation( var_0 )
{
    var_1 = getdvarfloat( 15, 15 );
    var_2 = getdvarfloat( "scr_x2_bomb_delay_warning", 9 );
    wait( var_0 );
    thread createandstartlights();
    thread createallhistorydestinations();
    createkillchallengeevent( 0 );
    thread createinvalidcirclearea( var_1, var_2 );
}

createkillchallengeevent( var_0 )
{
    level notify( "stop_planes" );
    thread createnagarray( var_0 );
    thread createhudelem( create_ai_type_override(), 210, 5 );
    thread createnukecrate( 10 );
}

crate_set_flag_on_use( var_0 )
{
    var_1 = getdvarfloat( "scr_x2_vision_set_fade_time", 15 );
    wait( var_0 );
    createagenttargetloadout( "mp_don4_outro_x2", var_1 );
    var_2 = gettime() * 0.001;
    thread createcallbacks( 0, var_2 );
}

crate_follow_text()
{
    thread scripts\mp\gametypes\br_vehicles.gsc::emptyallvehicles();
    thread scripts\mp\gametypes\br_vehicles.gsc::deleteextantvehicles();
    crate_falling_collision( ( 0, 0, 0 ) );
}

crate_falling_collision( var_0 )
{
    var_1 = 250000;
    var_2 = canceljoins( undefined, undefined, var_0, var_1 );

    if ( isdefined( var_2 ) )
    {
        foreach ( var_4 in var_2 )
        {
            if ( var_4.type == "br_loot_cache" || var_4.type == "br_loot_cache_lege" || var_4.type == "brloot_escape_radio" || var_4.type == "br_cargotrain" || var_4.type == "br_cargotrain_engine" || var_4.type == "br_armortrain" || var_4.type == "br_armortrain_engine" )
                continue;

            if ( var_4 getscriptableisreserved() && !isdefined( var_4.combo_duration_calculate ) )
                continue;

            scripts\mp\gametypes\br_pickups.gsc::select_patrol_one_spawners( var_4 );
        }
    }
}

createcallbacks( var_0, var_1 )
{
    level endon( "game_ended" );
    wait( var_0 );
    createc130pathstruct();
    level notify( "show_exfil" );
    wait 3.5;
    createflagstart( var_1 );
    create_badplace_extraction();
}

createflagstart( var_0 )
{
    foreach ( var_2 in level.teamnamelist )
    {
        foreach ( var_12, var_4 in level.squaddata[var_2] )
        {
            if ( var_4.players.size == 0 )
                continue;

            var_5 = level.cleanupswaploadoutflags.init_relic_vars[var_12];
            var_6 = spawn( "script_model", var_5.origin );
            var_6 setmodel( "military_hq_crate_02" );
            var_7 = ( 8, 14, 41 );
            var_8 = spawn( "script_model", var_5.origin + var_7 );
            var_8 scripts\mp\gameobjects::sethintobject( undefined, "HINT_BUTTON", undefined, &"BR_REVEAL_X2_EVENT/SIGNAL_POSITION", undefined, "duration_none", undefined, 250, 90, 80, 90 );
            var_8 disableplayeruseforallplayers();
            var_8 hide();

            foreach ( var_10 in var_4.players )
            {
                if ( var_10.squadindex == var_12 )
                {
                    var_8 showtoplayer( var_10 );
                    var_8 enableplayeruse( var_10 );
                }
            }

            var_8 thread _id_12B5F( var_4.players );
            var_8 thread fly_to_node( var_5.origin, 400, var_4.players, var_12, var_0 );
        }
    }
}

_id_12B5F( var_0 )
{
    level endon( "game_ended" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "trigger", var_1 );

        foreach ( var_1 in var_0 )
        {
            self hidefromplayer( var_1 );
            self disableplayeruse( var_1 );
            var_1 thread create_score_message();
        }

        level thread scripts\mp\gametypes\br_quest_util.gsc::_id_12BAA( self.origin, "exfil", 30 );
        thread create_circular_path_around( var_0 );
    }
}

fly_to_node( var_0, var_1, var_2, var_3, var_4 )
{
    level endon( "game_ended" );
    self endon( "death" );
    self waittill( "trigger", var_5 );
    var_6 = 0.0;
    var_7 = getdvarfloat( "scr_x2_strike_1", 10 );
    var_8 = getdvarfloat( "scr_x2_strike_2", 13 );
    var_9 = getdvarfloat( "scr_x2_strike_3", 10 );
    var_10 = getdvarfloat( "scr_x2_strike_4", 10 );
    var_11 = 7.0;
    var_12 = 3.0;
    var_6 = var_7 + var_8 + var_9 + var_10 + var_11 + var_12;
    var_13 = gettime() * 0.001 - var_4;
    var_14 = var_6 - var_13;
    _id_11EFD( "waypoint_captureneutral_br", "neutral", "BR_REVEAL_X2_EVENT/ESTABLISHING_COMMUNICATIONS", 1 );
    var_15 = spawn( "trigger_radius", var_0, 0, int( var_1 ), int( var_1 ) );
    var_16 = scripts\mp\gametypes\obj_dom.gsc::setupobjective( var_15, undefined, undefined, 1, 0 );
    var_16.flagmodel hide();
    var_16.visibilitymanuallycontrolled = 1;
    var_16.squadindex = var_3;
    var_16._id_12386 = var_2;
    var_16.docustommusicloopafternuke = 1;
    var_16.objidnum = level.cleanupswaploadoutflags.init_relic_vars[var_3].start_waypoint;
    var_16 scripts\mp\gameobjects::setcapturebehavior( "single_progress" );
    var_16 scripts\mp\gameobjects::setusetime( var_14 );
    var_16 scripts\mp\gameobjects::setclaimteam( "none" );
    var_16 scripts\mp\gameobjects::setvisibleteam( "any", undefined, 1 );
    var_16.onuseupdate = ::_id_124B9;
    var_16.usecondition = ::_id_124BA;
    var_16.onenduse = scripts\mp\gametypes\obj_dom.gsc::dompoint_onuseend;
    var_16.oncontested = scripts\mp\gametypes\obj_dom.gsc::dompoint_oncontested;
    var_16.onuncontested = scripts\mp\gametypes\obj_dom.gsc::dompoint_onuncontested;
    var_16.onunoccupied = scripts\mp\gametypes\obj_dom.gsc::dompoint_onunoccupied;
    var_16.onpinnedstate = scripts\mp\gametypes\obj_dom.gsc::dompoint_onpinnedstate;
    var_16.onunpinnedstate = scripts\mp\gametypes\obj_dom.gsc::dompoint_onunpinnedstate;
}

_id_11EFD( var_0, var_1, var_2, var_3 )
{
    level.waypointcolors[var_0] = var_1;
    level.waypointbgtype[var_0] = 1;
    level.waypointstring[var_0] = var_2;
    level.waypointshader[var_0] = "ui_mp_br_mapmenu_icon_extraction_objective";
    level.waypointpulses[var_0] = var_3;
}

_id_124BA( var_0 )
{
    if ( isdefined( var_0 ) && scripts\engine\utility::array_contains( self._id_12386, var_0 ) )
        return 1;

    return 0;
}

_id_124B9( var_0, var_1, var_2, var_3 )
{
    var_4 = 0.95;

    if ( var_1 > var_4 )
    {
        self.curprogress = var_4 * self.usetime;
        self.teamprogress[self.claimteam] = self.curprogress;
    }

    if ( var_1 < 1.0 && !level.gameended )
        trial_ui_retry_disabled( var_1, var_0 );

    if ( var_1 > 0.05 && var_2 && !istrue( self.didstatusnotify ) )
        self.didstatusnotify = 1;
}

trial_ui_retry_disabled( var_0, var_1 )
{
    if ( !isdefined( self.lastsfxplayedtime ) )
        self.lastsfxplayedtime = gettime();

    if ( self.lastsfxplayedtime + 995 < gettime() )
    {
        self.lastsfxplayedtime = gettime();
        var_2 = "";
        var_0 = int( floor( var_0 * 10 ) );
        var_2 = "mp_dom_capturing_tick_0" + var_0;
        self.visuals[0] playsoundtoteam( var_2, var_1 );
    }
}

createc130pathstruct()
{
    foreach ( var_1 in level.players )
    {
        if ( isalive( var_1 ) )
            var_1 scripts\mp\hud_message::showsplash( "br_x2_exfil" );
    }
}

create_badplace_extraction()
{
    var_0 = crate_weapons();
    cpoperationcratecapturecallback();

    foreach ( var_2 in var_0 )
    {
        foreach ( var_7, var_4 in var_2 )
        {
            if ( var_4.players.size == 0 )
                continue;

            var_5 = level.cleanupswaploadoutflags.init_relic_vars[var_7];
            var_6 = scripts\mp\objidpoolmanager::requestobjectiveid( 99 );
            scripts\mp\objidpoolmanager::objective_add_objective( var_6, "current", var_5.origin + ( 0, 0, 80 ), "ui_mp_br_mapmenu_icon_extraction_tablet", "icon_medium" );
            scripts\mp\objidpoolmanager::start_trans_1_obj( var_6, var_4.players );
            level.cleanupswaploadoutflags.init_relic_vars[var_7].start_waypoint = var_6;
        }
    }
}

create_player_rig_laser_panel()
{
    var_0 = getdvarfloat( "scr_x2_exfil_distance", 250 );
    cpoperationcratecapturecallback();
    level.cleanupswaploadoutflags.init_relic_vars = [];
    var_1 = crate_weapons();

    foreach ( var_3 in var_1 )
    {
        foreach ( var_7, var_5 in var_3 )
        {
            if ( var_5.players.size == 0 )
                continue;

            var_6 = create_ammo_crate_objectives( var_5.players, var_0 );
            level.cleanupswaploadoutflags.init_relic_vars[var_7] = var_6;
        }
    }
}

cpoperationcratecapturecallback()
{
    if ( isdefined( level.cleanupswaploadoutflags.init_relic_vars ) )
    {
        foreach ( var_1 in level.cleanupswaploadoutflags.init_relic_vars )
        {
            if ( isdefined( var_1.start_waypoint ) && !istrue( var_1.startarmsraceopencrateobj ) )
            {
                scripts\mp\objidpoolmanager::returnobjectiveid( var_1.start_waypoint );
                var_1.startarmsraceopencrateobj = 1;
            }
        }
    }
}

crate_weapons()
{
    var_0 = level.squaddata;

    if ( scripts\mp\menus::binoculars_onstatemarkedupdate() )
        var_0 = [ level.squaddata["allies"] ];

    return var_0;
}

create_ammo_crate_objectives( var_0, var_1 )
{
    var_2 = ( 0, 0, 0 );

    if ( isdefined( level._id_1303C ) && isdefined( level._id_1303C._id_12810 ) )
        var_2 = level._id_1303C._id_12810[0].origin;

    var_3 = ( 0, 0, 0 );
    var_0 = scripts\engine\utility::array_removeundefined( var_0 );

    if ( var_0.size > 0 )
        var_3 = scripts\mp\gametypes\br_ending.gsc::get_center_of_array( var_0 );
    else
        var_3 = var_2;

    var_4 = scripts\mp\gametypes\br_ending.gsc::lb_impulse_dmg_factor_mid_low( var_0, var_2 );
    var_5 = 100000;
    var_6 = var_4[0];
    var_7 = getdvarfloat( "scr_x2_exfil_height", 500 );

    foreach ( var_9 in var_4 )
    {
        if ( var_9.origin[2] >= var_7 )
            continue;

        var_10 = cratephysicsoncallback( var_9.origin, var_3 );
        var_11 = abs( var_10 - var_1 );

        if ( var_11 > var_5 )
            break;
        else
        {
            var_6 = var_9;
            var_5 = var_11;
        }
    }

    if ( !isdefined( var_6.angles ) )
        var_6.angles = ( 0, 0, 0 );

    return var_6;
}

cratephysicsoncallback( var_0, var_1 )
{
    var_2 = distance2d( var_0, var_1 );
    var_3 = 0.0254 * var_2;
    return var_3;
}

createinvalidcirclearea( var_0, var_1 )
{
    level endon( "game_ended" );
    wait( var_0 );
    var_2 = getdvarfloat( "scr_x2_bomb_duration", 60 );
    level notify( "splash_bomb" );
    level thread _calloutmarkerping_handleluinotify_acknowledged::br_pickups_init( var_2, var_1 );
}

create_name_fx( var_0 )
{
    var_1 = var_0.damage;

    if ( istrue( self._id_13082 ) )
    {
        if ( var_1 >= self.health )
            var_1 = self.health - 1;
    }

    if ( istrue( self.inlaststand ) && isdefined( level._id_11D0C ) && level._id_11D0C >= 3 )
    {
        var_2 = var_0.meansofdeath == "MOD_TRIGGER_HURT" && var_0.objweapon.basename == "iw8_gunless";

        if ( !var_2 || istrue( level.cleanupswaploadoutflags.propremovefromcircle ) )
            var_1 = 0;

        if ( var_1 >= self.health )
            var_1 = self.health - 1;
    }

    return var_1;
}

createandstartlights()
{
    level endon( "stop_bomb" );
    level waittill( "bomb_started" );
    var_0 = [];
    var_0[var_0.size] = getdvarfloat( "scr_x2_strike_1", 10 );
    var_0[var_0.size] = getdvarfloat( "scr_x2_strike_2", 13 );
    var_0[var_0.size] = getdvarfloat( "scr_x2_strike_3", 10 );
    var_0[var_0.size] = getdvarfloat( "scr_x2_strike_4", 10 );
    var_1 = var_0[0] + var_0[1] + var_0[2];
    createagenttargetloadout( "mp_don4_exfil_x2", var_1 );

    foreach ( var_7, var_3 in var_0 )
    {
        if ( var_3 < 0 )
            continue;

        wait( var_3 );
        level._id_11D0C = var_7 + 1;

        foreach ( var_5 in level.players )
        {
            if ( isdefined( var_5 ) && isalive( var_5 ) )
                thread create_model_at( var_5, var_7 + 1 );
        }
    }
}

create_model_at( var_0, var_1 )
{
    var_2 = anglestoforward( var_0.angles );
    var_3 = var_0.origin + var_2 * 300;
    var_4 = var_0.maxhealth / 2;

    if ( var_1 >= 3 )
    {
        scripts\mp\gametypes\br.gsc::monitor_game_end_on_front_truck_death( var_0 );
        var_0._id_13082 = 0;
        var_4 = 9999;
    }

    create_passengers_unload_groups( var_1 );
    wait 1;
    level thread _calloutmarkerping_handleluinotify_acknowledged::_id_11BFF( var_3, var_4, var_0 );
    wait 0.15;
    var_0 createpropspeclist( 6 );

    if ( var_1 == 2 )
    {
        foreach ( var_0 in level.players )
            var_0 create_vehicle_occupancy_data();
    }

    level notify( "strike_" + var_1 );
}

create_vehicle_occupancy_data()
{
    var_0 = self.meleeweapons;

    if ( var_0.size == 0 )
        var_0 = [ "iw8_fists_mp" ];

    self takeallweapons();

    foreach ( var_2 in var_0 )
    {
        self giveweapon( var_2 );
        self assignweaponmeleeslot( var_2 );
        self switchtoweapon( var_2 );
    }
}

createpropspeclist( var_0 )
{
    scripts\mp\weapons::setplayerstunned();
    thread scripts\mp\weapons::cleanupconcussionstun( var_0 );
    scripts\cp_mp\utility\shellshock_utility::_shellshock( "mp_don4_x2_explosion", "top", var_0, 1 );
}

createnagarray( var_0 )
{
    level endon( "game_ended" );
    level endon( "stop_planes" );
    var_1 = getdvarint( "scr_x2_planes_enable", 1 );

    if ( var_1 <= 0 )
        return;

    if ( !isdefined( level.cleanupswaploadoutflags.trap_room_turret_init ) )
        level.cleanupswaploadoutflags.trap_room_turret_init = 0;

    level.player setclienttriggeraudiozonepartialwithfade( "br_x2_bombers_attack", 3, "ambient" );
    var_2 = getdvarfloat( "scr_x2_planes_delay", 5.5 );
    var_3 = 0;

    for (;;)
    {
        thread createdestinationvfx( create_ai_type_override(), var_3 );
        var_3++;
        wait( var_2 );
    }
}

createdestinationvfx( var_0, var_1 )
{
    level endon( "stop_planes" );
    var_2 = 300;
    var_0 = ( var_0[0] + -10000, var_0[1] + -8000, -5000 );
    var_3 = vectortoangles( ( cos( var_2 ), sin( var_2 ), 0 ) );
    var_4 = scripts\engine\utility::spawn_tag_origin( var_0, var_3 );
    var_5 = [];
    var_6 = [ "plane3", "plane4", "plane5" ];

    foreach ( var_10, var_8 in var_6 )
    {
        var_9 = createdefaultrectangularzone( ( 0, 0, 0 ) );
        var_9.animname = var_8;
        var_9 useanimtree( level.scr_animtree[var_8] );
        var_9 forcenetfieldhighlod( 1 );
        var_5[var_10] = var_9;
    }

    thread cpcpammoarmorcratecapturecallback( var_4, var_5, var_1 );
    var_4 scripts\common\anim::anim_single( var_5, "x2_plane", undefined, 17 );
    level notify( "end_wave_" + var_1 );
}

cpcpammoarmorcratecapturecallback( var_0, var_1, var_2 )
{
    var_3 = var_1.size + 1;
    level.cleanupswaploadoutflags.trap_room_turret_init = level.cleanupswaploadoutflags.trap_room_turret_init + var_3;
    level scripts\engine\utility::_id_12E47( "stop_planes", "end_wave_" + var_2 );

    foreach ( var_5 in var_1 )
        var_5 delete();

    var_0 delete();
    level.cleanupswaploadoutflags.trap_room_turret_init = level.cleanupswaploadoutflags.trap_room_turret_init - var_3;
}

createdefaultrectangularzone( var_0 )
{
    var_1 = spawn( "script_model", var_0 );
    var_1 setmodel( "veh8_mil_air_ca_ger_bomber_117_group_ultralow" );
    var_1.angles = ( 0, 0, 0 );
    return var_1;
}

create_ai_type_override()
{
    var_0 = scripts\engine\utility::array_removeundefined( level.players );
    return scripts\mp\gametypes\br_ending.gsc::get_center_of_array( var_0 );
}

createnukecrate( var_0 )
{
    level endon( "game_ended" );
    level endon( "stop_planes" );
    var_1 = getdvarint( "scr_x2_shadows_enable", 1 );

    if ( var_1 <= 0 )
        return;

    wait( var_0 );
    setdvar( "NPONLLLSPL", 0.8 );
    setdvar( "LSNRQTOKRR", 1 );
    setdvar( "NTLKNLNPLK", 2 );
    level.cleanupswaploadoutflags.searchfortarget = [];
    thread create_crate_objectives();
    var_2 = 210;
    var_3 = ( cos( var_2 + 90 ), sin( var_2 + 90 ), 0 );
    var_4 = var_3 * 6500;

    for (;;)
    {
        var_5 = create_ai_type_override();
        thread creategulagjailloadout( var_5, var_2 );
        thread creategulagjailloadout( var_5 + var_4, var_2 );
        thread creategulagjailloadout( var_5 - var_4, var_2 );
        wait 25;
    }
}

create_crate_objectives()
{
    level endon( "game_ended" );
    level waittill( "stop_planes" );
    crate_equipment();
}

crate_equipment()
{
    if ( isdefined( level.cleanupswaploadoutflags._id_1238C ) )
        level.cleanupswaploadoutflags._id_1238C delete();

    level.cleanupswaploadoutflags._id_1238C = undefined;

    if ( isdefined( level.cleanupswaploadoutflags.searchfortarget ) )
    {
        for ( var_0 = 0; var_0 < level.cleanupswaploadoutflags.searchfortarget.size; var_0++ )
        {
            var_1 = level.cleanupswaploadoutflags.searchfortarget[var_0];

            if ( isdefined( var_1 ) )
                var_1 delete();
        }
    }

    level.cleanupswaploadoutflags.searchfortarget = [];
}

creategulagjailloadout( var_0, var_1 )
{
    var_2 = createheliextractobjectiveicons( var_0, var_1, "vfx_br_x2_plane_shadow_multiple" );

    for ( var_3 = 0; var_3 <= level.cleanupswaploadoutflags.searchfortarget.size; var_3++ )
    {
        if ( !isdefined( level.cleanupswaploadoutflags.searchfortarget[var_3] ) )
        {
            level.cleanupswaploadoutflags.searchfortarget[var_3] = var_2;
            break;
        }
    }

    wait 40;

    if ( isdefined( var_2 ) )
        var_2 delete();
}

createhudelem( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    level endon( "stop_planes" );
    wait( var_2 );
    var_3 = createheliextractobjectiveicons( var_0, var_1, "vfx_br_x2_square_shadow" );

    if ( isdefined( level.cleanupswaploadoutflags._id_1238C ) )
        level.cleanupswaploadoutflags._id_1238C delete();

    level.cleanupswaploadoutflags._id_1238C = var_3;
    wait 120;

    if ( isdefined( var_3 ) )
        var_3 delete();
}

createheliextractobjectiveicons( var_0, var_1, var_2 )
{
    var_0 = ( var_0[0], var_0[1], 2000 );
    var_3 = vectortoangles( ( cos( var_1 ), sin( var_1 ), 0 ) );
    var_4 = spawn( "script_model", var_0 );
    var_4 setmodel( var_2 );
    var_4.angles = var_3;
    return var_4;
}

create_puddle_triggers( var_0, var_1 )
{
    crate_vo_play_on_first_use( 1 );
    create_primary_weapon_obj_from_custom_loadout( var_0, 10, 1, var_1 );
    crate_vo_play_on_first_use( 0 );
}

create_race( var_0, var_1 )
{
    create_primary_weapon_obj_from_custom_loadout( var_0, 4, 0, var_1 );
}

create_primary_weapon_obj_from_custom_loadout( var_0, var_1, var_2, var_3 )
{
    create_trophy_station( var_1, var_2 );
    create_rig_for_usb_animation( var_0, var_3 );
    scripts\mp\utility\lui_game_event_aggregator::registeronluieventcallback( ::create_opaque_ai_contents );
    level waittill( "bink_complete" );
    stopcinematicforall();
    cpvehiclename( 0, var_2 );
}

create_trophy_station( var_0, var_1 )
{
    foreach ( var_3 in level.players )
    {
        if ( !isdefined( var_3 ) )
            continue;

        var_3 setclientomnvar( "ui_br_bink_overlay_state", var_0 );

        if ( var_1 )
            var_3 setsoundsubmix( "fade_to_black_all_except_music", 0.5 );
    }
}

cpvehiclename( var_0, var_1 )
{
    foreach ( var_3 in level.players )
    {
        if ( !isdefined( var_3 ) )
            continue;

        if ( var_1 )
            var_3 clearsoundsubmix( "fade_to_black_all_except_music", 0.5 );

        var_3 setclientomnvar( "ui_br_bink_overlay_state", var_0 );
    }
}

create_opaque_ai_contents( var_0, var_1 )
{
    if ( var_0 == "bink_complete" )
        level notify( "bink_complete" );
}

create_thrust_fire()
{
    create_puddle_triggers( "mp_warzone_intro_x2", 1 );

    if ( isdefined( level.throwingknives ) )
    {
        foreach ( var_1 in level.throwingknives )
        {
            if ( isdefined( var_1 ) )
                var_1 thread scripts\cp_mp\equipment\throwing_knife::throwing_knife_deletepickup();
        }
    }

    level notify( "intro_movie_over" );
}

create_traversal_node_and_link()
{
    var_0 = "cp_mbi_outro";
    var_1 = 20;
    thread createrectangularzonebasedonent( "movie_started" );
    create_trophy_station( 10, 1 );
    crate_vo_play_on_first_use( 1 );
    create_rig_for_usb_animation( var_0, 0 );
    wait( var_1 );
    stopcinematicforall();
    crate_munitions( 1, 0 );
    cpvehiclename( 0, 1 );
}

create_rig_for_usb_animation( var_0, var_1 )
{
    if ( var_1 )
        getweaponindex( var_0 );
    else
        playcinematicforall( var_0 );
}

crate_munitions( var_0, var_1 )
{
    foreach ( var_3 in level.players )
        thread scripts\cp_mp\utility\game_utility::fadetoblackforplayer( var_3, var_0, var_1 );

    wait( var_1 );
}

crate_vo_play_on_first_use( var_0, var_1 )
{
    foreach ( var_3 in level.players )
        var_3 scripts\mp\utility\player::_freezecontrols( var_0, var_1 );
}

create_cam()
{
    foreach ( var_1 in level.players )
    {
        if ( !isdefined( var_1 ) )
            continue;

        var_1 scripts\cp\helicopter\chopper_boss::support_box_use_logic( "watch_x2" );
    }
}

create_chopper_boss()
{
    foreach ( var_1 in level.players )
    {
        if ( !isdefined( var_1 ) )
            continue;

        var_1 scripts\cp\helicopter\chopper_boss::support_box_use_logic( "rpd_blueprint" );
        wait 1;
    }
}

create_circular_path_around( var_0 )
{
    foreach ( var_2 in var_0 )
    {
        if ( !isdefined( var_2 ) )
            continue;

        var_2 scripts\cp\helicopter\chopper_boss::support_box_use_logic( "spray_x2" );
        wait 1;
    }
}

create_cursor_hint_forced( var_0, var_1 )
{
    if ( var_0 scripts\cp_mp\vehicles\vehicle::isvehicle() )
        var_0 = var_0.owner;

    if ( !isdefined( var_0 ) )
        return;

    for ( var_0._id_13098["train"] = var_0._id_13098["train"] + var_1; var_0._id_13098["train"] > 1000; var_0._id_13098["train"] = var_0._id_13098["train"] - 1000 )
    {
        var_0 thread scripts\mp\utility\points::giveunifiedpoints( "br_x2_train_damage" );

        if ( var_0 scripts\cp_mp\utility\player_utility::isinvehicle() )
        {
            var_2 = var_0 scripts\cp_mp\utility\player_utility::getvehicle();

            if ( isdefined( var_2 ) && isdefined( var_2.owner ) && var_2.owner != var_0 )
                var_2.owner thread scripts\mp\utility\points::giveunifiedpoints( "br_x2_driver_assist" );
        }
    }

    if ( self.deploy_suicide_truck_in_blockade == 0 )
    {
        foreach ( var_4 in level.players )
            var_4 thread scripts\mp\utility\points::giveunifiedpoints( "br_x2_armored_car" );

        thread creategulagloadoutarry();
    }
}

create_cypher_piece( var_0, var_1 )
{
    if ( var_0 scripts\cp_mp\vehicles\vehicle::isvehicle() )
        var_0 = var_0.owner;

    if ( !isdefined( var_0 ) )
        return;

    var_2 = var_0 getxuid();

    for ( var_0._id_13098["turret"] = var_0._id_13098["turret"] + var_1; var_0._id_13098["turret"] > 1000; var_0._id_13098["turret"] = var_0._id_13098["turret"] - 1000 )
    {
        var_0 thread scripts\mp\utility\points::giveunifiedpoints( "br_x2_turret_damage" );

        if ( var_0 scripts\cp_mp\utility\player_utility::isinvehicle() )
        {
            var_3 = var_0 scripts\cp_mp\utility\player_utility::getvehicle();

            if ( isdefined( var_3 ) && isdefined( var_3.owner ) && var_3.owner != var_0 )
                var_3.owner thread scripts\mp\utility\points::giveunifiedpoints( "br_x2_driver_assist" );
        }
    }

    if ( self.health == 0 )
    {
        foreach ( var_5 in level.players )
            var_5 thread scripts\mp\utility\points::giveunifiedpoints( "br_x2_turret_disabled" );
    }
}

create_fake_loot_model_from_struct()
{
    scripts\mp\flags::gameflagwait( "prematch_done" );

    foreach ( var_1 in level.players )
        var_1 create_intel_model();
}

create_intel_model()
{
    self._id_13098 = [];
    self._id_13098["train"] = 0;
    self._id_13098["turret"] = 0;
}

creategulagloadoutarry()
{
    self.itemsdropped = 0;
    var_0 = [ "brloot_armor_plate", "brloot_ammo_50cal", "brloot_ammo_762", "brloot_ammo_919", "brloot_super_armorbox", "brloot_super_munitionsbox" ];
    var_1 = scripts\mp\gametypes\br_lootcache.gsc::selfrevivethink( var_0, 0 );
}

create_seatids_override()
{
    self endon( "disconnect" );
    self waittill( "infil_jump_done" );
    thread create_rocket_death_fx( "mode_desc1", 0, 1 );
    thread create_rocket_death_fx( "mode_desc2", 0, 1 );
    thread create_rocket_death_fx( "mode_desc3", 0, 1 );
    thread create_smoke_occluder();
    thread create_saw_interaction();
    thread create_solution_digit_mark();

    while ( !self isonground() )
        waitframe();

    thread create_rocket_death_fx( "objective1_desc", 1, 1 );
}

create_saw_interaction()
{
    self endon( "disconnect" );
    level endon( "train_destroyed" );

    for (;;)
    {
        level waittill( "car_destroyed" );

        switch ( level._id_1307E )
        {
            case 1:
                thread create_rocket_death_fx( "destroy_car1", 1.5, 1 );
                break;
            case 3:
                thread create_rocket_death_fx( "destroy_car3", 1.5, 1 );
                break;
            case 4:
                thread create_rocket_death_fx( "destroy_car4", 1.5, 1 );
                break;
            case 6:
                thread create_rocket_death_fx( "destroy_car6", 1.5, 1 );
                break;
            default:
                break;
        }
    }
}

create_smoke_occluder()
{
    self endon( "disconnect" );
    level endon( "train_destroyed" );

    for (;;)
    {
        level waittill( "train_incoming" );

        switch ( level.freight_lift_waittill_progress )
        {
            case 1:
                thread create_rocket_death_fx( "train_incoming1", 1, 1 );
                break;
            case 3:
                thread create_rocket_death_fx( "train_incoming3", 1, 1 );
                break;
            case 5:
                thread create_rocket_death_fx( "train_incoming5", 1, 1 );
                break;
            case 7:
                thread create_rocket_death_fx( "train_incoming7", 1, 1 );
                break;
            default:
                break;
        }
    }
}

create_solution_digit_mark()
{
    self endon( "disconnect" );
    level endon( "train_destroyed" );

    for (;;)
    {
        level waittill( "train_braking" );

        switch ( level.freight_lift_waittill_progress )
        {
            case 1:
                thread create_rocket_death_fx( "train_stopped1", 2, 1 );
                break;
            case 2:
                thread create_rocket_death_fx( "train_stopped2", 2, 1 );
                break;
            case 4:
                thread create_rocket_death_fx( "train_stopped4", 2, 1 );
                break;
            case 6:
                thread create_rocket_death_fx( "train_stopped5", 2, 1 );
                break;
            case 7:
                thread create_rocket_death_fx( "train_stopped7", 2, 1 );
                break;
            case 8:
                thread create_rocket_death_fx( "train_stopped8", 2, 1 );
            default:
                break;
        }
    }
}

create_silencer_pick_ups()
{
    self endon( "disconnect" );
    thread create_rocket_death_fx( "outro_victory", 4, 1 );
    level waittill( "show_exfil" );
    thread create_rocket_death_fx( "outro_bombers", 3, 0 );
    level waittill( "splash_bomb" );
    thread create_rocket_death_fx( "outro_bombs", 3, 0 );
    level waittill( "strike_1" );
    thread create_rocket_death_fx( "outro_first_hit", 0.5, 0 );
    level waittill( "strike_2" );
    thread create_rocket_death_fx( "outro_second_hit", 5, 0 );
}

create_score_message()
{
    self endon( "disconnect" );
    thread create_rocket_death_fx( "outro_exfil_station", 1.5, 0 );
}

create_rocket_death_fx( var_0, var_1, var_2 )
{
    self endon( "disconnect" );

    if ( isdefined( var_1 ) && var_1 > 0 )
        wait( var_1 );

    if ( isdefined( var_2 ) && var_2 == 1 )
        scripts\mp\gametypes\br_public.gsc::cloud_cover( var_0, self, 0 );
    else
    {
        var_3 = lookupsoundlength( game["dialog"][var_0], 1 ) / 1000.0;
        self queuedialogforplayer( game["dialog"][var_0], var_0, var_3 );
    }
}

crates_delete_early()
{
    if ( level.script == "mp_don4" )
    {
        var_0 = spawnstruct();
        var_0.origin = ( 4555.72, -36115.3, -200.848 );
        var_0.angles = ( 0, -156.66, 0 );
        return var_0;
    }
    else
    {
        if ( !isdefined( level.cleanupswaploadoutflags.init_relic_vars ) )
            create_player_rig_laser_panel();

        return level.cleanupswaploadoutflags.init_relic_vars[0];
    }
}

create_struct_at( var_0, var_1 )
{
    thread create_tut_loot_struct( var_0 );
    var_2 = getdvarfloat( "scr_x2_delay_before_exfil", 3 );
    wait( var_2 );
    level.cleanupswaploadoutflags.propremovefromcircle = 1;
    level.cleanupswaploadoutflags.init_relic_thirdperson = [];
    var_3 = scripts\engine\utility::spawn_tag_origin( var_0.origin, var_0.angles );
    var_4 = 1;

    while ( var_4 )
    {
        var_4 = getdvarint( "scr_x2_exfil_loop", 0 ) > 0;
        level.cleanupswaploadoutflags.put_objective_on_guy = var_4;
        createextractionlocation( var_3 );

        foreach ( var_6 in level.players )
        {
            var_6 thread create_trial_weapon_spawn( var_3 );
            var_6 thread cp_vehicle_damage_monitor();
        }

        thread crate_munitions( 0, 3 );
        var_8 = getanimlength( %br_exfil_x2_guy_hit );
        wait( var_8 );
        crashoffset();
    }

    level.cleanupswaploadoutflags.propremovefromcircle = 0;

    foreach ( var_6 in level.players )
    {
        var_6 scripts\mp\utility\player::hidehuddisable();
        var_6 playershow();
    }

    if ( var_1 )
    {
        wait 2;

        foreach ( var_6 in level.players )
        {
            var_6 scripts\mp\utility\player::_freezecontrols( 0 );
            var_6 clearsoundsubmix( "fade_to_black_all_except_music", 0.5 );
        }
    }
}

create_tut_loot_struct( var_0 )
{
    crate_munitions( 1, 0 );
    var_1 = getdvarint( "scr_x2_show_planes_exfil", 0 );

    if ( var_1 <= 0 )
        level notify( "stop_planes" );

    level notify( "stop_bomb" );
    var_2 = 0;

    foreach ( var_4 in level.players )
    {
        if ( !var_2 )
            var_4 scripts\mp\utility\player::_freezecontrols( 1 );

        var_4 setsoundsubmix( "fade_to_black_all_except_music", 0 );
        var_4 setorigin( var_0.origin );
        var_4 scripts\mp\utility\player::hidehudenable();
        var_4 playerhide();
    }

    createagenttargetloadout( "mp_don4_exfil_x2", 0 );
}

createextractionlocation( var_0 )
{
    for ( var_1 = 1; var_1 <= 3; var_1++ )
    {
        var_2 = "guy" + var_1;
        var_3 = creategulagarenaloadout( ( 0, 0, 0 ), ( 0, 0, 0 ) );
        create_struct( var_0, var_3, var_2 );
        level.cleanupswaploadoutflags.init_relic_thirdperson[var_2] = var_3;
    }

    var_4 = createhistorydestination( ( 0, 0, 0 ), ( 0, 0, 0 ) );
    create_struct( var_0, var_4, "guy4" );
    level.cleanupswaploadoutflags.init_relic_thirdperson["guy4"] = var_4;
}

create_struct( var_0, var_1, var_2 )
{
    var_1.animname = var_2;
    var_1 useanimtree( level.scr_animtree[var_2] );
    var_0 thread scripts\common\anim::anim_single_solo( var_1, "x2_exfil" );

    if ( isdefined( var_1.headmodel ) )
        var_1.headmodel scriptmodelplayanim( level.scr_animname[var_2]["x2_exfil"] );

    if ( isdefined( var_1._id_12FEB ) )
        var_1._id_12FEB scriptmodelplayanim( level.scr_animname[var_2]["x2_exfil"] );
}

create_trial_weapon_spawn( var_0 )
{
    var_1 = spawn( "script_arms", ( 0, 0, 0 ), 0, 0, self );
    var_1.angles = ( 0, 0, 0 );
    var_1 useanimtree( #animtree );
    var_1 hide();
    var_1 showtoplayer( self );
    self.usbserver = var_1;
    var_2 = 0;

    if ( !var_2 )
        self cameralinkto( var_1, "tag_camera", 1, 1 );

    var_1 animscripted( "exfil", var_0.origin, var_0.angles, %br_exfil_x2_player );
    var_1 scriptmodelplayanim( "br_exfil_x2_player" );
    var_1 waittillmatch( "exfil", "end" );
    self cameraunlink();
    self stopanimscriptsceneevent();
    self.usbserver = undefined;
    var_1 delete();
}

crashoffset()
{
    var_0 = [ "guy1", "guy2", "guy3", "guy4" ];

    foreach ( var_2 in var_0 )
    {
        var_3 = level.cleanupswaploadoutflags.init_relic_thirdperson[var_2];

        if ( isdefined( var_3 ) )
        {
            if ( isdefined( var_3.headmodel ) )
                var_3.headmodel delete();

            if ( isdefined( var_3._id_12FEB ) )
                var_3._id_12FEB delete();

            var_3 delete();
        }
    }
}

createhistorydestination( var_0, var_1 )
{
    return createdevguientryforkidnapper( var_0, var_1, "body_mp_western_fireteam_west_ar_1_1", "head_mp_western_fireteam_west_ar_1_1", undefined );
}

creategulagarenaloadout( var_0, var_1 )
{
    return createdevguientryforkidnapper( var_0, var_1, "body_opforce_juggernaut_x2", "head_opforce_juggernaut_x2", "weapon_wm_lm_dblmg_juggernaut" );
}

createdevguientryforkidnapper( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = spawn( "script_model", var_0 );
    var_5 setmodel( var_2 );
    var_5.angles = var_1;

    if ( isdefined( var_3 ) )
    {
        var_6 = spawn( "script_model", var_0 );
        var_6 setmodel( var_3 );
        var_6 linkto( var_5, "j_spine4", ( 0, 0, 0 ), ( 0, 0, 0 ) );
        var_5.headmodel = var_6;
    }

    if ( isdefined( var_4 ) )
    {
        var_7 = spawn( "script_model", var_0 );
        var_7 setmodel( var_4 );
        var_7 linkto( var_5, "j_gun", ( 0, 0, 0 ), ( 0, 0, 0 ) );
        var_5._id_12FEB = var_7;
    }

    return var_5;
}

cp_vehicle_damage_monitor()
{
    self endon( "disconnect" );
    self setblurforplayer( 5, 0 );
    wait 0.5;
    self setblurforplayer( 0, 2 );
}

cpoperationcrateactivatecallback( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.streakname = "precision_airstrike";
    var_3.owner = level.players[0];
    var_3.score = 0;
    var_3.shots_fired = 0;
    var_3.hits = 0;
    var_3.damage = 0;
    var_3.kills = 0;
    var_3.num_nags = 1;
    var_3.binoculars_setexpirationtimer = 0;
    var_4 = undefined;
    var_5 = %mp_alfa10_flyin;
    var_6 = undefined;
    var_7 = 24000;
    var_8 = 6500;
    var_9 = 2000;
    var_10 = 1500;
    var_11 = 215;

    if ( isdefined( var_2 ) )
        var_9 = var_2;

    var_12 = ( 0, var_1, 0 );
    var_13 = undefined;
    var_14 = scripts\cp_mp\killstreaks\airstrike::getflightpath( var_0, var_12, var_7, 1, var_9, var_8, var_10, var_3.streakname, var_13 );
    var_15 = [];
    var_15[var_15.size] = ( 0, 0, 0 );
    var_15[var_15.size] = ( var_11, var_11, 0 );
    var_15[var_15.size] = ( -1 * var_11, -1 * var_11, 0 );
    var_15[var_15.size] = ( 2 * var_11, 2 * var_11, 0 );
    var_15[var_15.size] = ( -2 * var_11, -2 * var_11, 0 );

    foreach ( var_18, var_17 in var_15 )
        var_15[var_18] = var_0 + _id_11B82( var_17, var_1 );

    level thread scripts\cp_mp\killstreaks\airstrike::doplanestrike( var_15[0], var_14["startPoint"], var_14["endPoint"], var_9, var_4, var_3, var_5, var_3.owner, var_6 );
    wait 0.1;
    level thread scripts\cp_mp\killstreaks\airstrike::doplanestrike( var_15[1], var_14["startPoint"], var_14["endPoint"], var_9, var_4, var_3, var_5, var_3.owner, var_6 );
    level thread scripts\cp_mp\killstreaks\airstrike::doplanestrike( var_15[2], var_14["startPoint"], var_14["endPoint"], var_9, var_4, var_3, var_5, var_3.owner, var_6 );
    wait 0.1;
    level thread scripts\cp_mp\killstreaks\airstrike::doplanestrike( var_15[3], var_14["startPoint"], var_14["endPoint"], var_9, var_4, var_3, var_5, var_3.owner, var_6 );
    level thread scripts\cp_mp\killstreaks\airstrike::doplanestrike( var_15[4], var_14["startPoint"], var_14["endPoint"], var_9, var_4, var_3, var_5, var_3.owner, var_6 );
}

_id_11B82( var_0, var_1 )
{
    var_2 = sin( var_1 );
    var_3 = cos( var_1 );
    var_4 = var_0[0] * var_3 - var_0[1] * var_2;
    var_5 = var_0[0] * var_2 + var_0[1] * var_3;
    return ( var_4, var_5, var_0[2] );
}

create_agent_definition( var_0, var_1 )
{
    var_2 = getomnvar( "ui_br_x2_event_data" );
    var_3 = ( 1 << var_1 ) - 1 << var_0;
    var_4 = ( var_2 & var_3 ) >> var_0;
    return var_4;
}

create_vehicle_vehicledata( var_0, var_1, var_2, var_3 )
{
    var_4 = int( pow( 2, var_1 ) ) - 1;
    var_5 = ( var_3 & var_4 ) << var_0;
    var_6 = ~( var_4 << var_0 );
    var_7 = var_2 & var_6;
    var_8 = var_7 + var_5;
    return var_8;
}

createalldestinationvfx( var_0, var_1, var_2 )
{
    var_3 = getomnvar( "ui_br_x2_event_data" );
    var_4 = create_vehicle_vehicledata( var_0, var_1, var_3, var_2 );
    setomnvar( "ui_br_x2_event_data", var_4 );
}

create_weapon_pick_ups( var_0, var_1, var_2 )
{
    var_3 = self getclientomnvar( "ui_br_x2_client_data" );
    var_4 = create_vehicle_vehicledata( var_0, var_1, var_3, var_2 );
    self setclientomnvar( "ui_br_x2_client_data", var_4 );
}

createvisualsinfo()
{
    createalldestinationvfx( 21, 4, level._id_13093 );
}

createteamdefenderflagbase( var_0 )
{
    var_1 = int( level._id_1237B[var_0.team][var_0.squadindex]._id_1278A );

    foreach ( var_3 in level.squaddata[var_0.team][var_0.squadindex].players )
    {
        if ( !isdefined( var_3 ) )
            continue;

        var_3 create_weapon_pick_ups( 0, 16, var_1 );
    }
}

empdrone_killstreaktargetthink( var_0 )
{
    self endon( "death" );

    if ( !isdefined( var_0 ) )
        var_0 = 5;

    wait( var_0 );

    if ( isdefined( self ) )
        self delete();
}

createapcturret()
{
    if ( isdefined( level._id_1303C ) && isdefined( level._id_1303C._id_12810 ) )
    {
        var_0 = level._id_1303C._id_12810[0];
        var_1 = anglestoforward( var_0.angles ) * -260;
        var_2 = var_0.origin + var_1;
        level thread scripts\mp\gametypes\br_quest_util.gsc::_id_12BAA( var_2, "attack", 20 );
    }
}

create_execution_devgui()
{
    if ( !isdefined( level._id_1303C ) || !isdefined( level._id_1303C._id_12810 ) )
        return;

    var_0 = level._id_1303C._id_12810[0];

    foreach ( var_2 in level.players )
    {
        if ( !isdefined( var_2 ) )
            continue;

        var_2 setsoundsubmix( "br_x2_train_moving" );
    }

    var_0 playloopsound( "veh_cargotrain_locomotive_dist_lp" );
}

createrectangularzonebasedonent( var_0, var_1 )
{
    if ( !isdefined( level._id_1303C ) || !isdefined( level._id_1303C._id_12810 ) )
        return;

    var_2 = level._id_1303C._id_12810[0];

    if ( var_0 == "brake" )
    {
        var_2 playsoundonmovingent( "veh_cargotrain_braking" );
        createscriptedspawnpoint( "br_x2_train_idle", var_1, "br_x2_train_moving", 3, var_1 );
    }

    if ( var_0 == "accelFromIdle" )
    {
        var_2 playsoundonmovingent( "veh_cargotrain_accel" );
        createscriptedspawnpoint( "br_x2_train_moving", 3, "br_x2_train_idle", 4, 0 );
    }

    if ( var_0 == "train_destroyed" )
    {
        foreach ( var_4 in level.players )
        {
            if ( !isdefined( var_4 ) )
                continue;

            var_4 setsoundsubmix( "br_x2_train_idle", 0.3 );
            var_4 setsoundsubmix( "br_x2_train_moving", 0.3 );
        }
    }

    if ( var_0 == "movie_started" )
    {
        foreach ( var_4 in level.players )
        {
            if ( !isdefined( var_4 ) )
                continue;

            var_4 clearsoundsubmix( "br_x2_train_idle" );
            var_4 clearsoundsubmix( "br_x2_train_moving" );
        }
    }
}

createscriptedspawnpoint( var_0, var_1, var_2, var_3, var_4 )
{
    foreach ( var_6 in level.players )
    {
        if ( !isdefined( var_6 ) )
            continue;

        var_6 setsoundsubmix( var_0, var_1 );
        wait( var_4 );
        var_6 clearsoundsubmix( var_2, var_3 );
    }
}

createscript_covernodes( var_0 )
{
    if ( !isdefined( level._id_1303C ) || !isdefined( level._id_1303C._id_12810 ) )
        return;

    wait( var_0 );
    var_1 = level._id_1303C._id_12810[0].runplunderextractsitetimer;
    var_1 playsoundonmovingent( "veh_horn_cargotrain_wake" );
}

createscreeneffectext()
{
    if ( !isdefined( level._id_1303C ) || !isdefined( level._id_1303C._id_12810 ) )
        return;

    var_0 = level._id_1303C._id_12810[0].runplunderextractsitetimer;
    var_0 playsoundonmovingent( "veh_horn_cargotrain_wake_attack" );
}

create_passengers_unload_groups( var_0 )
{
    foreach ( var_2 in level.players )
    {
        if ( var_0 <= 1 )
        {
            var_2 playlocalsound( "scn_x2_ac130_bomb_incoming_01", undefined, undefined, 1 );
            continue;
        }

        if ( var_0 == 2 )
        {
            var_2 playlocalsound( "scn_x2_ac130_bomb_incoming_02", undefined, undefined, 1 );
            continue;
        }

        if ( var_0 == 3 )
        {
            var_2 playlocalsound( "scn_x2_ac130_bomb_incoming_03", undefined, undefined, 1 );
            continue;
        }

        if ( var_0 >= 4 )
            var_2 playlocalsound( "scn_x2_ac130_bomb_incoming_04", undefined, undefined, 1 );
    }
}

createquestobjicon( var_0 )
{
    for ( var_1 = 0; var_1 < level._id_1303C._id_12810.size; var_1++ )
    {
        if ( var_1 > 0 )
        {
            playfxontag( level._effect["vfx_br_x2_brake_sparks_car"], level._id_1303C._id_12810[var_1].runplunderextractsitetimer, "tag_origin" );
            continue;
        }

        playfxontag( level._effect["vfx_br_x2_brake_sparks_loco"], level._id_1303C._id_12810[var_1].runplunderextractsitetimer, "tag_origin" );
    }

    wait( var_0 );

    for ( var_1 = 0; var_1 < level._id_1303C._id_12810.size; var_1++ )
    {
        if ( var_1 > 0 )
        {
            stopfxontag( level._effect["vfx_br_x2_brake_sparks_car"], level._id_1303C._id_12810[var_1].runplunderextractsitetimer, "tag_origin" );
            continue;
        }

        stopfxontag( level._effect["vfx_br_x2_brake_sparks_loco"], level._id_1303C._id_12810[var_1].runplunderextractsitetimer, "tag_origin" );
    }
}
