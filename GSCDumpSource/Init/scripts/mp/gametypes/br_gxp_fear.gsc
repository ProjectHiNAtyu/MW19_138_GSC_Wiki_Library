// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.cleanupswaploadoutflags.introcinematic = 0;

    if ( !getdvarint( "scr_br_gxp_fear", 0 ) )
        return;

    level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s = [];
    level.cleanupswaploadoutflags.is_a_player_near = 0;
    level thread _id_12E90();
}

_id_12E90()
{
    waittillframeend;
    scripts\mp\flags::gameflagwait( "prematch_done" );
    level.cleanupswaploadoutflags.introcinematic = 1;
    zombierespawning( "onPlayerDamaged", ::introarmor );
    zombierespawning( "onLastStandEnter", ::intro_techos_deposit_fullcar );
    zombierespawning( "onKillstreakDanger", ::intro_techos_deposit_backseats );
    zombierespawning( "onTeammateKilled", ::intro_spawn_enemies, 25.0 );
    zombierespawning( "onPlayerHallucinate", ::invuln_to_veh_crush );
    zombierespawning( "onPlayerKilled", ::invalid_for_teleport, 10.0 );
    zombierespawning( "onLastStandRevive", ::invalid_for_teleport, 25.0 );
    zombierespawning( "onArmorPlate", ::invalid_for_teleport, 5.0 );
    zombierespawning( "onContractEnd", ::investigate_someone_using_bomb, 20.0 );
    level thread _id_12B06();
}

play_players_arrive_at_extraction( var_0 )
{
    self.never_delete_suicide_bomber = clamp( self.never_delete_suicide_bomber + var_0, 0, 100 );
}

get_player_closest_to_any_goal( var_0 )
{
    self.never_delete_suicide_bomber = clamp( self.never_delete_suicide_bomber - var_0, 0, 100 );
}

define_as_level_infil_driver()
{
    if ( self.never_delete_suicide_bomber >= 50.0 )
        return 1;

    return 0;
}

manned_turret_spawned_nodes()
{
    if ( self.never_delete_suicide_bomber < 50.0 )
        return 0.0;

    return ( self.never_delete_suicide_bomber - 50.0 ) / 50.0;
}

onplayerconnect( var_0 )
{
    if ( !getdvarint( "scr_br_gxp_fear", 0 ) )
        return;

    var_0 endgame_camera();
}

onplayerspawned()
{
    if ( !level.cleanupswaploadoutflags.introcinematic )
        return;

    endgame_camera();
    thread getoperatorbrinfilsmokesuffix();
}

intstruct( var_0, var_1, var_2 )
{
    if ( !level.cleanupswaploadoutflags.introcinematic )
        return;

    if ( !isdefined( level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s[var_0].function ) )
        scripts\mp\utility\script::getdropbagspawntypeenum( var_0 + " is not defined in triggerFear." );

    if ( isdefined( level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s[var_0].function ) )
    {
        if ( isdefined( var_2 ) )
            return [[ level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s[var_0].function ]]( level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s[var_0].value, var_1, var_2 );
        else if ( isdefined( var_1 ) )
            return [[ level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s[var_0].function ]]( level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s[var_0].value, var_1 );
        else
            return [[ level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s[var_0].function ]]( level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s[var_0].value );
    }
}

zombierespawning( var_0, var_1, var_2 )
{
    if ( isdefined( level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s[var_0] ) )
        scripts\mp\utility\script::getdropbagspawntypeenum( "registerFearCause already has " + var_0 + " defined." );

    if ( !isdefined( var_2 ) )
        var_2 = 0.0;

    level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s[var_0] = spawnstruct();
    level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s[var_0].function = var_1;
    level.cleanupswaploadoutflags.invulnerable_airdropmultiple_ac130s[var_0].value = var_2;
}

endgame_camera()
{
    self.never_delete_suicide_bomber = 0;
    self.never_kill_off_after_stealth = gettime();
}

brking_oncrateuse()
{
    if ( self.never_kill_off_after_stealth + 1000 < gettime() )
    {
        play_players_arrive_at_extraction( 1 );
        self.never_kill_off_after_stealth = gettime();
    }
}

_id_12AF6()
{
    if ( self.sessionstate == "playing" )
    {
        brking_oncrateuse();

        if ( define_as_level_infil_driver() )
            scripts\mp\gametypes\br_gxp_hallucination.gsc::update( manned_turret_spawned_nodes() );
        else
            scripts\mp\gametypes\br_gxp_hallucination.gsc::enablefeature();

        return;
    }

    endgame_camera();
    scripts\mp\gametypes\br_gxp_hallucination.gsc::enablefeature();
}

_id_12B06()
{
    for (;;)
    {
        if ( isdefined( level.players ) && level.players.size )
        {
            level.cleanupswaploadoutflags.is_a_player_near = level.cleanupswaploadoutflags.is_a_player_near % level.players.size;
            var_0 = clamp( 10, 1, level.players.size );

            for ( var_1 = 0; var_1 < var_0; var_1++ )
            {
                var_2 = level.cleanupswaploadoutflags.is_a_player_near;
                var_3 = level.players[var_2];
                level.cleanupswaploadoutflags.is_a_player_near = ( level.cleanupswaploadoutflags.is_a_player_near + 1 ) % level.players.size;
                var_3 _id_12AF6();
            }
        }

        wait 0.05;
    }
}

intro_spawn_enemies( var_0, var_1 )
{
    play_players_arrive_at_extraction( var_0 );
}

introarmor( var_0, var_1 )
{
    var_2 = clamp( var_1.damage, 0, 100 );
    var_3 = var_2 * 5.0;
    play_players_arrive_at_extraction( var_3 );
}

intro_techos_deposit_fullcar( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        return;

    if ( self == var_1 )
        play_players_arrive_at_extraction( 5.0 );
    else
        play_players_arrive_at_extraction( 25.0 );
}

intro_techos_deposit_backseats( var_0, var_1 )
{
    if ( istrue( var_1.truck_03_node ) && scripts\mp\utility\killstreak::getkillstreakenemyusedialogue( var_1.spectatingthisplayer ) )
    {
        var_2 = 15.0;
        play_players_arrive_at_extraction( var_2 );
    }
}

invalid_for_teleport( var_0, var_1 )
{
    get_player_closest_to_any_goal( var_0 );
}

invuln_to_veh_crush( var_0, var_1 )
{
    var_2 = var_1.intro_safehouse_loot * 100;
    get_player_closest_to_any_goal( var_2 );
}

investigate_someone_using_bomb( var_0, var_1 )
{
    if ( var_1 == 1 )
        get_player_closest_to_any_goal( var_0 );
}

getoperatorbrinfilsmokesuffix()
{
    if ( isbot( self ) || initmaxspeedforpathlengthtable( self ) )
        return;

    if ( isdefined( self.getoperatorclothtype ) )
        return;

    self.getoperatorclothtype = scripts\mp\hud_util::createprimaryprogressbar( 200, 250 );
    self.getoperatorexecutionquip = scripts\mp\hud_util::createprimaryprogressbartext( 200, 250 );
    self.getoperatorexecutionquip scripts\mp\hud_util::setpoint( "RIGHT", undefined, level.primaryprogressbartextx - 150, level.primaryprogressbartexty + 250 );
    self.getoperatorexecutionquip settext( "fear" );
    thread getpresettruckspawns();
}

getpresettruckspawns()
{
    level endon( "game_ended" );
    var_0 = self.never_delete_suicide_bomber;

    for (;;)
    {
        var_1 = self.never_delete_suicide_bomber;

        if ( var_0 != var_1 )
        {
            var_2 = var_1 / 100;

            if ( var_2 > 1.0 )
                var_2 = 1.0;

            self.getoperatorclothtype scripts\mp\hud_util::updatebar( var_2, 0 );
            var_0 = var_1;
            self.getoperatorclothtype.bar.color = scripts\mp\gametypes\br_gxp_hallucination.gsc::getoperators();
        }

        waitframe();
    }
}
