// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

mark_danger()
{
    return vehicle_collision_getdamagepercentandburndown( "ui_keypad_data", 0, 2 );
}

mark_available_for_hack()
{
    return vehicle_collision_getdamagepercentandburndown( "ui_keypad_data", 2, 4 );
}

usescriptablemeleeblood( var_0 )
{
    usetimeoverride( 0, var_0 );
}

usequesttimer( var_0 )
{
    usetimeoverride( 1, var_0 );
}

usereload( var_0 )
{
    var_1 = setteamplacement( var_0, "up" );
    var_2 = [];

    foreach ( var_4 in var_1 )
        var_2[var_4] = var_0[var_4];

    var_6 = "";

    foreach ( var_8 in var_2 )
    {
        var_9 = "" + var_8;

        if ( !_id_1253E( var_6, var_9 ) )
            var_6 = var_6 + var_9;
    }

    var_11 = int( var_6 );
    usetimeoverride( 2, var_11 );
}

_id_1253E( var_0, var_1 )
{
    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
    {
        if ( var_0[var_2] == var_1 )
            return 1;
    }

    return 0;
}

usetimeoverride( var_0, var_1 )
{
    [var_3, var_4, var_5, var_1] = mark_coop_bomb_defusal_ended( var_0, var_1 );

    if ( var_5 == "" )
        return;

    updateindangercirclestate( var_5, var_1, var_3, var_4 );
}

mark_coop_bomb_defusal_ended( var_0, var_1 )
{
    var_2 = 0;
    var_3 = 0;
    var_4 = "";

    switch ( var_0 )
    {
        case 0:
            [var_2, var_3] = [ 0, 2 ];
            var_4 = "ui_keypad_data";
            break;
        case 1:
            [var_2, var_3] = [ 2, 4 ];
            var_4 = "ui_keypad_data";
            break;
        case 2:
            [var_2, var_3] = [ 6, 16 ];
            var_4 = "ui_keypad_data";
            break;
        default:
            break;
    }

    return [ var_2, var_3, var_4, var_1 ];
}

updateindangercirclestate( var_0, var_1, var_2, var_3 )
{
    var_4 = int( pow( 2, var_3 ) ) - 1;
    var_5 = ( var_1 & var_4 ) << var_2;
    var_6 = ~( var_4 << var_2 );
    var_7 = self getclientomnvar( var_0 );
    var_8 = var_7 & var_6;
    var_9 = var_8 + var_5;

    if ( var_9 != var_7 )
        self setclientomnvar( var_0, var_9 );
}

vehicle_collision_getdamagepercentandburndown( var_0, var_1, var_2 )
{
    var_3 = self getclientomnvar( var_0 );
    var_4 = ( 1 << var_2 ) - 1;
    var_5 = var_3 >> var_1;
    var_6 = var_4 & var_5;
    return var_6;
}
