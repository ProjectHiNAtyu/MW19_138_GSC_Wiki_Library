// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    playerzombiesetupkeybindings();
    playerscoreeventref();
    players_recent_position_delay();
    thread set_vandalize_minigun_speed();
    scripts\mp\utility\sound::anim_spawnposition_override( "vehicle_cargo_train_x2" );
}

playerzombiesetupkeybindings()
{
    foreach ( var_1 in level._id_1303C._id_12810 )
    {
        var_1.team = moderemovefromteamlives();
        var_1.runplunderextractsitetimer.team = moderemovefromteamlives();
    }
}

playerscoreeventref()
{
    var_0 = [ [ "", 0.7, "d1" ], [ "x2_veh8_mil_lnd_br_train_locomotive_damaged", 0.4, "d2" ], [ "", 0.075, "d3" ], [ "x2_veh8_mil_lnd_br_train_locomotive_dead", 0, "dead" ] ];
    level._id_13080 = vehoccupancy_lastseatbc( var_0 );
    var_0 = [ [ "x2_veh8_mil_lnd_br_armored_train_cart_d1", 0.75, "d1" ], [ "x2_veh8_mil_lnd_br_armored_train_cart_d2", 0.5, "d2" ], [ "x2_veh8_mil_lnd_br_armored_train_cart_d3", 0.25, "d3" ], [ "", 0, "explosion" ], [ "x2_veh8_mil_lnd_br_armored_train_cart_dead", 0, "dead" ] ];
    level._id_1307F = vehoccupancy_lastseatbc( var_0 );
    level._id_1307E = 0;
}

vehoccupancy_lastseatbc( var_0 )
{
    var_1 = [];

    foreach ( var_3 in var_0 )
    {
        var_4 = spawnstruct();
        var_4.model = var_3[0];
        var_4.deploy_suicide_truck_in_farm = var_3[1];
        var_4.statename = var_3[2];
        var_1[var_1.size] = var_4;
    }

    return var_1;
}

set_vandalize_minigun_speed()
{
    var_0 = getdvarint( "scr_wztrain_carHealthPerPlayer", 3000 );
    var_1 = var_0 + 0;
    playerzombiethermalcleanup( 1, var_1 );
    scripts\mp\flags::gameflagwait( "prematch_done" );
    playerzombiepowerstartcooldown();
    playerzombiethermalcleanup( level.players.size, var_1 );
    level._id_1303C.binoculars_updateheadiconvisibility = getdvarint( "scr_wztrain_ambDamagePerPlayer", 0 );
    level._id_1303C.raise_airlock = 0;
    critical_messages();
    thread initmarker();
}

playerzombiethermalcleanup( var_0, var_1 )
{
    level._id_1303C.setarenaomnvar = var_0 * var_1;

    foreach ( var_3 in level._id_1303C._id_12810 )
    {
        var_3.runplunderextractsitetimer.deploy_suicide_truck_in_blockade = level._id_1303C.setarenaomnvar;
        var_3.runplunderextractsitetimer.getquickdropweapon = 0;
    }

    var_5 = level._id_1303C._id_12810.size - 1;
    level._id_1303C.sethasselfrevivetokenextrainfo = var_5 * level._id_1303C.setarenaomnvar;
}

players_recent_position_delay()
{
    var_0 = level._id_1303C.botdisablekillstreaks.scriptable_door_get_in_radius;

    foreach ( var_3, var_2 in level._id_1303C._id_12810 )
    {
        var_2.runplunderextractsitetimer.getlootname = -1;

        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == var_0 )
        {
            var_2.runplunderextractsitetimer setcandamage( 1 );
            var_2.runplunderextractsitetimer thread nuke_mercyending_init();
            continue;
        }

        var_2.runplunderextractsitetimer setcandamage( 1 );
        var_2.runplunderextractsitetimer thread handledamage();
        var_2.runplunderextractsitetimer._id_12845 = var_3;
    }
}

playerzombiepowerstartcooldown()
{
    level._id_1237B = [];
    var_0 = level.squaddata;

    if ( scripts\mp\menus::binoculars_onstatemarkedupdate() )
    {
        var_0 = [];
        var_0["allies"] = level.squaddata["allies"];
    }

    foreach ( var_6, var_2 in var_0 )
    {
        level._id_1237B[var_6] = [];

        foreach ( var_4 in var_2 )
        {
            if ( var_4.players.size == 0 )
                continue;

            level._id_1237B[var_6][var_4.index] = spawnstruct();
            level._id_1237B[var_6][var_4.index]._id_1278A = 0;
            level._id_1237B[var_6][var_4.index].gate_swings_open = 0;
        }
    }
}

initmarker()
{
    level endon( "game_ended" );
    waitframe();
    scripts\engine\utility::flag_wait( "wztrain_anim_playing" );
    var_0 = level._id_1303C._id_12810[0];
    var_0 scripts\mp\gametypes\br_quest_util.gsc::force_bleedout_all_downed_players( "ui_mp_br_ping_icon_x2_t", "current", var_0.origin + ( 0, 0, 300 ) );
    overridecountdownmusic();
    var_0 thread _id_12B0C();
    var_0 thread _id_12B0B();
}

_id_12B0C()
{
    level endon( "game_ended" );

    while ( !scripts\mp\flags::gameflag( "x2_train_destroyed" ) )
    {
        var_0 = ( level._id_1303C._id_12810[3].origin + level._id_1303C._id_12810[4].origin ) / 2;
        scripts\mp\gametypes\br_quest_util.gsc::spawn_ending_individual_guys_death( var_0 + ( 0, 0, 300 ) );
        waitframe();
    }
}

_id_1204D()
{
    var_0 = level._id_1303C._id_12810[0];
    objective_showtoplayersinmask( var_0.objectiveiconid );
}

overridecountdownmusic()
{
    var_0 = level._id_1303C._id_12810[0];
    objective_hidefromplayersinmask( var_0.objectiveiconid );
}

_id_12B0B()
{
    level scripts\engine\utility::_id_12E3F( "game_ended", "x2_train_destroyed" );
    _id_11A24();
}

_id_11A24()
{
    var_0 = level._id_1303C._id_12810[0];
    var_0 scripts\mp\gametypes\br_quest_util.gsc::getcodecomputerdisplaycode();
}

moderemovefromteamlives()
{
    if ( scripts\mp\menus::binoculars_onstatemarkedupdate() )
        return "axis";

    return "team_two_hundred";
}

handledamage()
{
    level waittill( "br_c130_in_bounds" );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_10, var_10, var_11 );

        if ( isdefined( var_1 ) && isdefined( var_1.team ) && var_1.team == moderemovefromteamlives() )
            continue;

        if ( self.battle_tracks_stoptogglethink > 0 )
            continue;

        if ( isdefined( var_1.classname ) && var_1.classname == "script_vehicle" )
            var_0 = nuke_vault_runner( var_1 );

        var_12 = self.deploy_suicide_truck_in_blockade;
        self.deploy_suicide_truck_in_blockade = int( max( self.deploy_suicide_truck_in_blockade - var_0, 0 ) );

        if ( var_12 > 0 )
        {
            if ( isplayer( var_1 ) )
            {
                var_1 scripts\mp\damagefeedback::updatehitmarker( "standard", self.deploy_suicide_truck_in_blockade == 0, 0, 1, "hitequip" );
                var_13 = int( min( var_0, var_12 ) );
                _id_12AF0( var_1, var_13 );
            }

            if ( scripts\mp\utility\game::missions_clearinappropriaterewards() == "x2" )
                scripts\mp\gametypes\br_gametype_x2.gsc::create_cursor_hint_forced( var_1, var_0 );
        }

        if ( disableheavystatedamagefloor() )
            disable_cinematic_skip();

        var_14 = level._id_1303C._id_12810[0].runplunderextractsitetimer;

        if ( var_14 display_hint_single() )
            var_14 disable_flag();
    }
}

nuke_mercyending_init()
{
    level waittill( "br_c130_in_bounds" );
    level endon( "train_destroyed" );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_10, var_10, var_11 );

        if ( isdefined( var_1 ) && isdefined( var_1.team ) && var_1.team == moderemovefromteamlives() )
            continue;

        if ( isdefined( var_1.classname ) && var_1.classname == "script_vehicle" )
            var_0 = nuke_vault_runner( var_1 );

        var_0 = var_0 * 0.5;
        crate_model_anim_setup( var_0 );

        if ( isplayer( var_1 ) )
        {
            var_1 scripts\mp\damagefeedback::updatehitmarker( "standard", 0, 0, 1, "hitspawnprotect" );
            _id_12AF0( var_1, var_0 );
        }

        if ( scripts\mp\utility\game::missions_clearinappropriaterewards() == "x2" )
            scripts\mp\gametypes\br_gametype_x2.gsc::create_cursor_hint_forced( var_1, var_0 );

        if ( display_hint_single() )
            disable_flag();
    }
}

nuke_vault_runner( var_0 )
{
    var_1 = spawnstruct();
    var_1.ent = [ var_0, self ];
    var_1.velocity = [ var_0 vehicle_getvelocity(), self.velocity ];
    var_2 = scripts\mp\gametypes\br_movingtrain.gsc::nopropsspectate( var_1 );

    if ( var_2 > 0 )
    {
        var_3 = clamp( var_2 / 1500, 0.0, 1.0 );
        var_2 = var_3 * 500 * level.players.size;
    }

    return var_2;
}

_id_1284C()
{
    level endon( "x2_train_destroyed" );
    level._id_1303C.raise_airlock = 1;
    var_0 = getdvarint( "scr_wztrain_timeBeforeSelfDestruct", 30 );
    wait( var_0 );
    var_1 = level._id_1307F.size - 1;
    var_2 = [];

    foreach ( var_5, var_4 in level._id_1303C._id_12810 )
    {
        if ( isdefined( var_4.script_noteworthy ) && var_4.script_noteworthy == level._id_1303C.botdisablekillstreaks.scriptable_door_get_in_radius )
        {
            var_2[var_5] = 0;
            continue;
        }

        var_2[var_5] = var_4.runplunderextractsitetimer.deploy_suicide_truck_in_blockade / 50;
    }

    for (;;)
    {
        foreach ( var_5, var_4 in level._id_1303C._id_12810 )
        {
            if ( var_4.runplunderextractsitetimer.getlootname < var_1 )
                var_4.runplunderextractsitetimer dodamage( var_2[var_5], var_4.runplunderextractsitetimer.origin, var_4, var_4, "MOD_EXPLOSIVE" );
        }

        wait 1;
    }
}

_id_12AF0( var_0, var_1 )
{
    level._id_1237B[var_0.team][var_0.squadindex]._id_1278A = level._id_1237B[var_0.team][var_0.squadindex]._id_1278A + var_1;
    level._id_1237B[var_0.team][var_0.squadindex].gate_swings_open = level._id_1237B[var_0.team][var_0.squadindex].gate_swings_open + var_1;

    if ( level._id_1237B[var_0.team][var_0.squadindex]._id_1278A <= 50000 )
        scripts\mp\gametypes\br_gametype_x2.gsc::createteamdefenderflagbase( var_0 );

    var_2 = getdvarint( "scr_wztrain_damageEventThreshold", 1000 );

    if ( level._id_1237B[var_0.team][var_0.squadindex].gate_swings_open >= var_2 )
    {
        foreach ( var_4 in level.squaddata[var_0.team][var_0.squadindex].players )
        {
            if ( !isdefined( var_4 ) )
                continue;

            if ( var_4.squadindex == var_0.squadindex )
                var_4 scripts\cp\helicopter\chopper_boss::_id_11D94( "x2_damage_train", level._id_1237B[var_0.team][var_0.squadindex].gate_swings_open );
        }

        level._id_1237B[var_0.team][var_0.squadindex].gate_swings_open = 0;
    }
}

istempsfxent()
{
    foreach ( var_1 in level.players )
    {
        if ( !isdefined( var_1 ) )
            continue;

        var_1 scripts\cp\helicopter\chopper_boss::_id_11D94( "x2_damage_train", level._id_1237B[var_1.team][var_1.squadindex].gate_swings_open );
    }
}

disableheavystatedamagefloor()
{
    var_0 = self.getlootname + 1;

    if ( var_0 >= level._id_1307F.size - 1 )
        return 0;

    var_1 = self.deploy_suicide_truck_in_blockade / level._id_1303C.setarenaomnvar;

    if ( var_1 > level._id_1307F[var_0].deploy_suicide_truck_in_farm )
        return 0;

    return 1;
}

disable_cinematic_skip()
{
    var_0 = self.deploy_suicide_truck_in_blockade / level._id_1303C.setarenaomnvar;

    for ( var_1 = level._id_1307F.size - 2; self.getlootname < var_1 && var_0 <= level._id_1307F[self.getlootname + 1].deploy_suicide_truck_in_farm; self.getlootname = int( min( self.getlootname + 1, var_1 ) ) )
    {

    }

    bombsdefused( self.getlootname );

    if ( self.getlootname == var_1 )
        thread explosion();
}

bombsdefused( var_0 )
{
    self.getlootname = var_0;

    if ( level._id_1307F[self.getlootname].model != "" )
        self setmodel( level._id_1307F[self.getlootname].model );

    self setscriptablepartstate( "base", level._id_1307F[self.getlootname].statename );
    _id_12B37( self._id_12845, self.getlootname );
}

explosion()
{
    level endon( "game_ended" );
    var_0 = is_ai_in_stealth();
    self.waittillspectating = 1;
    thread _id_12AF5();
    wait 5;

    if ( !scripts\mp\flags::gameflag( "x2_train_one_cart_left" ) )
        scripts\mp\gametypes\br_gametype_x2.gsc::createpropspecatehud( 3, 0 );

    self.waittillspectating = 0;
    bombsdefused( level._id_1307F.size - 1 );
    level._id_1307E = level._id_1307E + 1;
    level notify( "car_destroyed" );
    docache4voskits();
    thread _id_129B2();
    wait 0.1;
    var_1 = scripts\mp\utility\player::getplayersinradius( self.origin, 1500 );

    foreach ( var_3 in var_1 )
        var_3 scripts\mp\gametypes\br_gametype_x2.gsc::createpropspeclist( 4 );

    scripts\mp\gametypes\br_gametype_x2.gsc::createstreakinfo_ai_turret( 1 );
    wait 1;
    scripts\mp\gametypes\br_gametype_x2.gsc::createteamdefenderflag( 1 );
}

_id_12AF5()
{
    var_0 = undefined;

    while ( self.waittillspectating )
    {
        if ( isdefined( var_0 ) )
            var_0 delete();

        var_0 = getmaxobjectivecount( self.origin[0], self.origin[1], 1500 );
        var_0 setmapcirclecolorindex( 0 );
        var_0 setmapcirclestyleindex( 0 );
        wait 0.5;
    }

    var_0 delete();
}

getcirclesize()
{
    foreach ( var_1 in level._id_1303C._id_12810 )
    {
        if ( isdefined( var_1.infilvideowaituntilcomplete ) )
            var_1.infilvideowaituntilcomplete delete();
    }
}

modeplayerskipdialog()
{
    var_0 = 0;

    foreach ( var_3, var_2 in level._id_1303C._id_12810 )
    {
        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == level._id_1303C.botdisablekillstreaks.scriptable_door_get_in_radius )
            continue;
        else
            var_0 = var_0 + var_2.runplunderextractsitetimer.deploy_suicide_truck_in_blockade;
    }

    return var_0;
}

display_hint_single()
{
    var_0 = self.getlootname + 1;

    if ( var_0 >= level._id_13080.size )
        return 0;

    var_1 = modeplayerskipdialog();
    var_2 = var_1 / level._id_1303C.sethasselfrevivetokenextrainfo;

    if ( var_2 > level._id_13080[var_0].deploy_suicide_truck_in_farm )
        return 0;

    return 1;
}

disable_flag()
{
    self.getlootname = int( min( self.getlootname + 1, level._id_13080.size - 1 ) );

    if ( level._id_13080[self.getlootname].model != "" )
        self setmodel( level._id_13080[self.getlootname].model );

    self setscriptablepartstate( "base", level._id_13080[self.getlootname].statename );

    if ( self.getlootname == level._id_13080.size - 1 )
        _id_129B2();
}

docache4voskits()
{
    var_0 = 0;
    var_1 = level._id_1307F.size - 1;

    foreach ( var_4, var_3 in level._id_1303C._id_12810 )
    {
        if ( isdefined( var_3.script_noteworthy ) && var_3.script_noteworthy == level._id_1303C.botdisablekillstreaks.scriptable_door_get_in_radius )
            continue;
        else if ( var_3.runplunderextractsitetimer.getlootname < var_1 )
            var_0++;
    }

    if ( var_0 == 0 )
    {
        scripts\mp\flags::gameflagset( "x2_train_destroyed" );
        level._id_1303C._id_12810[0].runplunderextractsitetimer.frontturret _id_129B3();
        istempsfxent();
        getcirclesize();
    }
    else if ( var_0 == 1 )
        scripts\mp\flags::gameflagset( "x2_train_one_cart_left" );
}

_id_12B37( var_0, var_1 )
{
    if ( var_1 == 0 )
        return;

    var_2 = 3;
    var_3 = ( var_0 - 1 ) * var_2;
    scripts\mp\gametypes\br_gametype_x2.gsc::createalldestinationvfx( var_3, var_2, var_1 );
}

cp_raid_complex_behavior()
{
    crate_model_anim_setup( level._id_1303C.binoculars_updateheadiconvisibility * level._id_13081 );
}

crate_model_anim_setup( var_0 )
{
    var_1 = 7;
    var_2 = var_0;
    var_3 = [];
    var_4 = level._id_1303C.botdisablekillstreaks.scriptable_door_get_in_radius;

    foreach ( var_7, var_6 in level._id_1303C._id_12810 )
    {
        if ( isdefined( var_6.script_noteworthy ) && var_6.script_noteworthy == var_4 )
            continue;

        var_3[var_3.size] = var_6.runplunderextractsitetimer;
    }

    while ( var_1 > 0 && var_2 > 0 )
    {
        var_8 = var_0 / var_1;
        var_9 = 0;
        var_1 = 0;

        foreach ( var_7, var_11 in var_3 )
        {
            if ( var_8 >= var_11.deploy_suicide_truck_in_blockade )
            {
                if ( isdefined( var_11.getquickdropweapon ) && !var_11.getquickdropweapon )
                {
                    var_9 = var_9 + ( var_8 - var_11.deploy_suicide_truck_in_blockade );
                    var_11.getquickdropweapon = 1;
                }
            }
            else
                var_1++;

            var_11 dodamage( var_8, var_11.origin, var_11 );
        }

        var_2 = var_9;
    }

    var_4 = level._id_1303C.botdisablekillstreaks.scriptable_door_get_in_radius;

    foreach ( var_7, var_11 in var_3 )
        var_11.getquickdropweapon = 0;
}

create()
{
    var_0 = spawnstruct();
    var_0.streakname = "toma_strike";
    var_0.owner = self;
    var_0.score = 0;
    var_0.shots_fired = 0;
    var_0.hits = 0;
    var_0.damage = 0;
    var_0.kills = 0;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "createCustomStreakData" ) )
        var_0 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "createCustomStreakData" ) ]]( var_0, "toma_strike" );

    return var_0;
}

create_apc_vehicle_interaction( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = spawnturret( "misc_turret", var_1, var_5 );
    var_7 setmodel( var_6 );
    var_7.team = moderemovefromteamlives();
    var_7.angles = var_2;
    var_7.turreton = 1;
    var_7.name = var_3;
    var_7.momentum = 0;
    var_7.attackingtarget = undefined;
    var_7._id_12D19 = var_0.name;
    var_7._id_11AB1 = 15;
    var_7.shouldoperatorhideaccessoryworldmodel = "auto_nonai";
    var_7.shouldmodeplayfinalmoments = "sentry_offline";
    var_7.weaponname = var_5;
    var_7.health = level.turretsettings[var_5].health;
    var_7.maxhealth = level.turretsettings[var_5].maxhealth;
    var_7._id_12B81 = 1;
    var_7 linkto( var_0.runplunderextractsitetimer, var_4, ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_7 setturretteam( moderemovefromteamlives() );
    var_7 setturretmodechangewait( 0 );
    var_7 setmode( var_7.shouldoperatorhideaccessoryworldmodel );
    var_7 makeunusable();
    var_7 maketurretinoperable();
    var_7 setconvergenceheightpercent( level.turretsettings[var_5]._id_11FC6 );
    var_7 setdefaultdroppitch( 0.0 );
    var_7 setcandamage( 1 );
    var_7 setnodeploy( 1 );
    var_7 setautorotationdelay( 1 );
    var_7 setconvergencetime( level.turretsettings[var_5]._id_130B7, "yaw" );
    var_7 setconvergencetime( level.turretsettings[var_5].train_stop, "pitch" );
    var_7.damagecenter = var_7.origin + ( 0, 0, 10 );
    var_7.escape_if_player_is_in_hangar = spawn( "script_model", var_7.origin );
    var_7.escape_if_player_is_in_hangar.team = var_7.team;
    var_7.escape_if_player_is_in_hangar linkto( var_7, "tag_aim_pivot", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_7.escape_if_player_is_in_hangar.get_player_recent_pos_adjusted_with_exposure = var_2;
    var_7.escape_if_player_is_in_hangar setmodel( var_6 );
    var_7.escape_if_player_is_in_hangar hide();
    var_7 thread _id_129CF();
    var_7 thread _id_129CD();
    var_7 thread _id_129BE();
    return var_7;
}

create_animpack()
{
    var_0 = spawnstruct();
    var_0._id_129D4 = "armored_train_mg_turret_mp";
    var_0.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_gatling";
    var_1 = spawnstruct();
    var_1._id_129D4 = "armored_train_tank_turret_mp";
    var_1.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_88mm";
    var_2 = spawnstruct();
    var_2._id_129D4 = "armored_train_mortar_turret_mp";
    var_2.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_mortar";
    var_3 = spawnstruct();
    var_3._id_129D4 = "armored_train_locomotive_turret_mp";
    var_3.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_locomotive";
    return [ [ var_3 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ] ];
}

critical_messages()
{
    level.turretsettings["armored_train_mg_turret_mp"] = spawnstruct();
    level.turretsettings["armored_train_mg_turret_mp"].health = 5000;
    level.turretsettings["armored_train_mg_turret_mp"].maxhealth = 5000;
    level.turretsettings["armored_train_mg_turret_mp"].burstmin = 60;
    level.turretsettings["armored_train_mg_turret_mp"].burstmax = 120;
    level.turretsettings["armored_train_mg_turret_mp"].pausemin = 0.1;
    level.turretsettings["armored_train_mg_turret_mp"].pausemax = 0.3;
    level.turretsettings["armored_train_mg_turret_mp"].lockstrength = 6;
    level.turretsettings["armored_train_mg_turret_mp"].spinuptime = 0.35;
    level.turretsettings["armored_train_mg_turret_mp"].cooldowntime = 1;
    level.turretsettings["armored_train_mg_turret_mp"]._id_12667 = 3500;
    level.turretsettings["armored_train_mg_turret_mp"]._id_11FC6 = 0.65;
    level.turretsettings["armored_train_mg_turret_mp"]._id_130B7 = 0.35;
    level.turretsettings["armored_train_mg_turret_mp"].train_stop = 0.35;
    level.turretsettings["armored_train_mg_turret_mp"].weaponinfo = "armored_train_mg_turret_mp";
    level.turretsettings["armored_train_tank_turret_mp"] = spawnstruct();
    level.turretsettings["armored_train_tank_turret_mp"].health = 5000;
    level.turretsettings["armored_train_tank_turret_mp"].maxhealth = 5000;
    level.turretsettings["armored_train_tank_turret_mp"].burstmin = 1;
    level.turretsettings["armored_train_tank_turret_mp"].burstmax = 1;
    level.turretsettings["armored_train_tank_turret_mp"].pausemin = 2;
    level.turretsettings["armored_train_tank_turret_mp"].pausemax = 5;
    level.turretsettings["armored_train_tank_turret_mp"].lockstrength = 6;
    level.turretsettings["armored_train_tank_turret_mp"].spinuptime = 0.4;
    level.turretsettings["armored_train_tank_turret_mp"].cooldowntime = 1;
    level.turretsettings["armored_train_tank_turret_mp"]._id_12667 = 4500;
    level.turretsettings["armored_train_tank_turret_mp"]._id_11FC6 = 0.1;
    level.turretsettings["armored_train_tank_turret_mp"]._id_130B7 = 1;
    level.turretsettings["armored_train_tank_turret_mp"].train_stop = 1;
    level.turretsettings["armored_train_tank_turret_mp"].weaponinfo = "armored_train_tank_turret_mp";
    level.turretsettings["armored_train_mortar_turret_mp"] = spawnstruct();
    level.turretsettings["armored_train_mortar_turret_mp"].health = 5000;
    level.turretsettings["armored_train_mortar_turret_mp"].maxhealth = 5000;
    level.turretsettings["armored_train_mortar_turret_mp"].burstmin = 1;
    level.turretsettings["armored_train_mortar_turret_mp"].burstmax = 1;
    level.turretsettings["armored_train_mortar_turret_mp"].pausemin = 20;
    level.turretsettings["armored_train_mortar_turret_mp"].pausemax = 30;
    level.turretsettings["armored_train_mortar_turret_mp"].lockstrength = 6;
    level.turretsettings["armored_train_mortar_turret_mp"].spinuptime = 1;
    level.turretsettings["armored_train_mortar_turret_mp"].cooldowntime = 1;
    level.turretsettings["armored_train_mortar_turret_mp"]._id_12667 = 5000;
    level.turretsettings["armored_train_mortar_turret_mp"]._id_11FC6 = 0.2;
    level.turretsettings["armored_train_mortar_turret_mp"]._id_130B7 = 1;
    level.turretsettings["armored_train_mortar_turret_mp"].train_stop = 1;
    level.turretsettings["armored_train_mortar_turret_mp"].weaponinfo = "armored_train_mortar_turret_mp";
    level.turretsettings["armored_train_mortar_turret_mp"].streakinfo = create();
    level.turretsettings["armored_train_locomotive_turret_mp"] = spawnstruct();
    level.turretsettings["armored_train_locomotive_turret_mp"].health = 5000;
    level.turretsettings["armored_train_locomotive_turret_mp"].maxhealth = 5000;
    level.turretsettings["armored_train_locomotive_turret_mp"].burstmin = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"].burstmax = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"].pausemin = 10;
    level.turretsettings["armored_train_locomotive_turret_mp"].pausemax = 15;
    level.turretsettings["armored_train_locomotive_turret_mp"].lockstrength = 6;
    level.turretsettings["armored_train_locomotive_turret_mp"].spinuptime = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"].cooldowntime = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"]._id_12667 = 4500;
    level.turretsettings["armored_train_locomotive_turret_mp"]._id_11FC6 = 0.1;
    level.turretsettings["armored_train_locomotive_turret_mp"]._id_130B7 = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"].train_stop = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"].weaponinfo = "armored_train_locomotive_turret_mp";
    var_0 = create_animpack();

    foreach ( var_6, var_2 in level._id_1303C._id_12810 )
    {
        var_3 = var_0[var_6];

        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == level._id_1303C.botdisablekillstreaks.scriptable_door_get_in_radius )
        {
            var_2.runplunderextractsitetimer.frontturret = create_apc_vehicle_interaction( var_2, var_2.runplunderextractsitetimer gettagorigin( "tag_turret_front" ), var_2.angles, "front_turret", "tag_turret_front", var_3[0]._id_129D4, var_3[0].turretmodel );
            var_2.runplunderextractsitetimer.frontturret.traincar = var_2.runplunderextractsitetimer;
            var_2.runplunderextractsitetimer.battle_tracks_stoptogglethink = 1;
            continue;
        }

        var_4 = ( 0, 0, 0 );
        var_5 = ( 0, 180, 0 );
        var_2.runplunderextractsitetimer.frontturret = create_apc_vehicle_interaction( var_2, var_2.runplunderextractsitetimer gettagorigin( "tag_turret_front" ), var_2.angles + var_4, "front_turret", "tag_turret_front", var_3[0]._id_129D4, var_3[0].turretmodel );
        var_2.runplunderextractsitetimer.rearturret = create_apc_vehicle_interaction( var_2, var_2.runplunderextractsitetimer gettagorigin( "tag_turret_rear" ), var_2.angles + var_5, "rear_turret", "tag_turret_rear", var_3[1]._id_129D4, var_3[1].turretmodel );
        var_2.runplunderextractsitetimer.frontturret.traincar = var_2.runplunderextractsitetimer;
        var_2.runplunderextractsitetimer.rearturret.traincar = var_2.runplunderextractsitetimer;
        var_2.runplunderextractsitetimer.battle_tracks_stoptogglethink = 2;
    }
}

_id_129CF()
{
    self endon( "death" );
    self endon( "disabled" );
    var_0 = level.turretsettings[self.weaponname];
    var_1 = var_0.cooldowntime;

    for (;;)
    {
        if ( !istrue( self.turreton ) )
        {
            waitframe();
            continue;
        }

        var_2 = _id_129BB();

        if ( isdefined( var_2 ) )
        {
            _id_129B8( var_2 );
            scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_1 );
        }

        wait 0.05;
    }
}

_id_129BB()
{
    var_0 = level.turretsettings[self.weaponname];
    var_1 = var_0._id_12667;
    var_2 = var_1 * var_1;
    var_3 = self.origin + anglestoforward( self.angles ) * var_1;
    var_4 = scripts\common\utility::playersinsphere( var_3, var_1 );
    var_5 = undefined;
    var_6 = undefined;

    foreach ( var_8 in var_4 )
    {
        var_9 = _id_129C2( var_8 );

        if ( !istrue( var_9 ) )
            continue;

        var_10 = self gettagorigin( "tag_barrel" );
        var_11 = var_8.origin;
        var_12 = distancesquared( var_10, var_11 );

        if ( !isdefined( var_5 ) && !isdefined( var_6 ) || var_12 < var_6 )
        {
            var_5 = var_8;
            var_6 = var_12;
        }
    }

    return var_5;
}

_id_129C2( var_0 )
{
    var_1 = 1;

    if ( !scripts\mp\utility\player::isreallyalive( var_0 ) )
        var_1 = 0;

    if ( scripts\mp\utility\player::proxtrigger( var_0 ) )
        var_1 = 0;

    if ( isdefined( var_0.is_bomb_use_allowed ) )
        var_1 = 0;

    if ( !_id_129AE( var_0 ) )
        var_1 = 0;

    return var_1;
}

_id_129CB( var_0 )
{
    var_1 = level.turretsettings[self.weaponname];
    var_2 = var_1._id_12667;
    var_3 = var_2 * var_2;

    if ( !_id_129C2( var_0 ) )
        return 0;

    if ( distancesquared( self gettagorigin( "tag_barrel" ), var_0.origin ) > var_3 )
        return 0;

    return 1;
}

_id_129AE( var_0 )
{
    var_1 = [ var_0 gettagorigin( "j_head" ), var_0 gettagorigin( "j_mainroot" ), var_0 gettagorigin( "tag_origin" ) ];
    var_2 = self gettagorigin( "tag_flash" );
    var_3 = var_0.origin;
    var_4 = vectornormalize( var_3 - var_2 );
    var_5 = vectornormalize( anglestoforward( self.angles ) );
    var_6 = [ self, var_0 ];
    var_7 = physics_createcontents( [ "physicscontents_solid", "physicscontents_glass", "physicscontents_water", "physicscontents_vehicle", "physicscontents_item" ] );
    var_8 = var_0 scripts\cp_mp\utility\player_utility::isinvehicle();

    if ( istrue( var_8 ) )
    {
        var_9 = var_0 scripts\cp_mp\utility\player_utility::getvehicle();
        var_6[var_6.size] = var_9;
        var_10 = var_9 getlinkedchildren();

        if ( isdefined( var_10 ) && var_10.size > 0 )
            var_6 = scripts\engine\utility::array_combine( var_6, var_10 );
    }

    for ( var_11 = 0; var_11 < var_1.size; var_11++ )
    {
        if ( scripts\engine\trace::ray_trace_passed( var_2, var_3, var_6, var_7 ) && vectordot( var_5, var_4 ) > cos( 120 ) )
            return 1;
    }

    return 0;
}

_id_129C1( var_0 )
{
    var_1 = self gettagorigin( "tag_flash" );
    var_2 = var_0.origin;
    var_3 = vectornormalize( var_2 - var_1 );
    var_4 = vectornormalize( anglestoforward( self gettagangles( "tag_aim_pivot" ) ) );

    if ( vectordot( var_4, var_3 ) > 0.3 )
        return 1;

    return 0;
}

_id_129B8( var_0 )
{
    self settargetentity( var_0 );
    self.attackingtarget = var_0;
    _id_129C8();
    _id_129AC( var_0 );
    _id_129AD();
    self cleartargetentity();
}

_id_129C8()
{
    self laseron();
    thread _id_129CA();
    var_0 = level.turretsettings[self.weaponname];

    while ( istrue( self.turreton ) && self.momentum < var_0.spinuptime )
    {
        self.momentum = self.momentum + 0.1;
        wait 0.1;
    }
}

_id_129C7()
{
    self laseroff();
    self.momentum = 0;
}

_id_129AC( var_0 )
{
    self endon( "disabled" );
    var_1 = level.turretsettings[self.weaponname];
    var_2 = var_1.burstmin;
    var_3 = var_1.burstmax;
    var_4 = var_1.pausemin;
    var_5 = var_1.pausemax;
    var_6 = var_1.lockstrength;

    while ( istrue( self.turreton ) && _id_129CB( var_0 ) )
    {
        var_7 = randomintrange( var_2, var_3 + 1 );

        for ( var_8 = 0; var_8 < var_7; var_8++ )
        {
            if ( istrue( self.turreton ) && _id_129CB( var_0 ) && _id_129C1( var_0 ) )
            {
                if ( self.weaponname == "armored_train_mortar_turret_mp" )
                {
                    var_9 = var_1.streakinfo;
                    smuggler_post_tele_kill( self.origin, var_0.origin, var_9 );
                    self shootturret( "tag_flash", var_6 );
                }
                else
                {
                    var_10 = weaponfiretime( var_1.weaponinfo );
                    self shootturret( "tag_flash", var_6 );
                    wait( var_10 );
                }

                continue;
            }

            break;
        }

        wait( randomfloatrange( var_4, var_5 ) );
    }
}

_id_129AD()
{
    _id_129C7();
}

_id_129CD()
{
    self endon( "death" );
    level waittill( "game_ended" );

    if ( isdefined( self ) )
    {
        self.escape_if_player_is_in_hangar delete();
        self delete();
    }
}

_id_129BE()
{
    self endon( "stopDamageMonitor" );
    level endon( "game_ended" );
    var_0 = undefined;
    var_1 = undefined;

    while ( self.health > 0 )
    {
        self waittill( "damage", var_2, var_0, var_3, var_4, var_1, var_5, var_6 );

        if ( isdefined( var_0 ) && isdefined( var_0.team ) && var_0.team == moderemovefromteamlives() )
            continue;

        var_7 = self.health;
        self.health = int( max( self.health - var_2, 0 ) );

        if ( var_7 > 0 )
        {
            if ( isplayer( var_0 ) )
            {
                var_0 scripts\mp\damagefeedback::updatehitmarker( "standard", self.health <= 0, 1, 1, "hitequip" );
                var_8 = int( min( var_2, var_7 ) );
                _id_12AF0( var_0, var_8 );
            }

            if ( scripts\mp\utility\game::missions_clearinappropriaterewards() == "x2" )
                scripts\mp\gametypes\br_gametype_x2.gsc::create_cypher_piece( var_0, var_2 );
        }
    }

    _id_129B3();
    self.traincar thread _id_129D0();
}

_id_129B3()
{
    if ( self.turreton )
    {
        if ( self.health > 0 )
        {
            self notify( "stopDamageMonitor" );
            self.health = 0;
        }

        self.turreton = 0;
        self setmode( self.shouldmodeplayfinalmoments );
        self cleartargetentity();
        self.attackingtarget = undefined;
        self notify( "disabled" );
        self hide();
        self.escape_if_player_is_in_hangar show();
        self.escape_if_player_is_in_hangar setscriptablepartstate( "base", "disabled" );
        self playsound( "sentry_explode" );
    }
}

_id_129B2()
{
    if ( self.frontturret.turreton )
        self.frontturret _id_129B3();

    if ( isdefined( self.rearturret ) && self.rearturret.turreton )
        self.rearturret _id_129B3();

    self.frontturret kill();

    if ( isdefined( self.rearturret ) )
        self.rearturret kill();

    if ( isdefined( self.frontturret ) || isdefined( self.rearturret ) )
    {
        self.frontturret hide();
        self.frontturret.escape_if_player_is_in_hangar hide();

        if ( isdefined( self.rearturret ) )
        {
            self.rearturret hide();
            self.rearturret.escape_if_player_is_in_hangar hide();
        }

        wait 5;
        self.frontturret.escape_if_player_is_in_hangar delete();
        self.frontturret delete();

        if ( isdefined( self.rearturret ) )
        {
            self.rearturret.escape_if_player_is_in_hangar delete();
            self.rearturret delete();
        }
    }
}

_id_129B4()
{
    var_0 = level._id_1303C.botdisablekillstreaks.scriptable_door_get_in_radius;

    foreach ( var_2 in level._id_1303C._id_12810 )
    {
        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == var_0 )
        {
            var_2.runplunderextractsitetimer.frontturret _id_129B3();
            continue;
        }
        else if ( var_2.runplunderextractsitetimer.getlootname != level._id_1307F.size - 1 )
        {
            var_2.runplunderextractsitetimer.frontturret _id_129B3();
            var_2.runplunderextractsitetimer.rearturret _id_129B3();
        }
    }
}

_id_129B5()
{
    if ( !self.turreton )
    {
        self show();
        self.escape_if_player_is_in_hangar hide();
        self.escape_if_player_is_in_hangar setscriptablepartstate( "base", "enabled" );
        self.health = self.maxhealth;
        self setmode( self.shouldoperatorhideaccessoryworldmodel );
        self.turreton = 1;
        thread _id_129CF();
        thread _id_129BE();
    }
}

_id_129B6()
{
    var_0 = level._id_1303C.botdisablekillstreaks.scriptable_door_get_in_radius;

    foreach ( var_2 in level._id_1303C._id_12810 )
    {
        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == var_0 )
        {
            var_2.runplunderextractsitetimer.frontturret _id_129B5();
            continue;
        }
        else if ( var_2.runplunderextractsitetimer.getlootname != level._id_1307F.size - 1 )
        {
            var_2.runplunderextractsitetimer.frontturret _id_129B5();
            var_2.runplunderextractsitetimer.rearturret _id_129B5();
        }
    }
}

_id_129CA()
{
    self endon( "death" );
    self endon( "stop_shooting" );
    level endon( "game_ended" );
    self playsound( "sentry_gun_target_lock_beep" );
    wait 0.19;
    self playsound( "sentry_gun_target_lock_beep" );
}

cruise_predator_direction_override()
{
    level.turretsettings["armored_train_mg_turret_mp"].weaponinfo = "armored_train_mg_turret_buffed_mp";
}

cruisepredator_assigntargetmarkers()
{
    level.turretsettings["armored_train_mortar_turret_mp"].weaponinfo = "armored_train_mortar_turret_buffed_mp";
}

cruisepredator_watchgameend()
{
    level.turretsettings["armored_train_tank_turret_mp"].weaponinfo = "armored_train_tank_turret_buffed_mp";
    level.turretsettings["armored_train_tank_turret_mp"].pausemin = 0.5;
    level.turretsettings["armored_train_tank_turret_mp"].pausemax = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"].weaponinfo = "armored_train_locomotive_turret_buffed_mp";
    level.turretsettings["armored_train_locomotive_turret_mp"].pausemin = 0.5;
    level.turretsettings["armored_train_locomotive_turret_mp"].pausemax = 1;
}

_id_11F07()
{
    level.turretsettings["armored_train_mg_turret_mp"].weaponinfo = "armored_train_mg_turret_mp";
    level.turretsettings["armored_train_mortar_turret_mp"].weaponinfo = "armored_train_mortar_turret_mp";
    level.turretsettings["armored_train_tank_turret_mp"].weaponinfo = "armored_train_tank_turret_mp";
    level.turretsettings["armored_train_tank_turret_mp"].pausemin = 2;
    level.turretsettings["armored_train_tank_turret_mp"].pausemax = 5;
    level.turretsettings["armored_train_locomotive_turret_mp"].weaponinfo = "armored_train_locomotive_turret_mp";
    level.turretsettings["armored_train_locomotive_turret_mp"].pausemin = 2;
    level.turretsettings["armored_train_locomotive_turret_mp"].pausemax = 5;
}

smuggler_post_tele_kill( var_0, var_1, var_2 )
{
    var_3 = is_ai_in_stealth();
    _id_11FBD( var_3, var_0, var_1, var_2 );
}

_id_129D0()
{
    level endon( "game_ended" );
    self.battle_tracks_stoptogglethink = max( self.battle_tracks_stoptogglethink - 1, 0 );

    if ( self.battle_tracks_stoptogglethink == 0 )
    {
        thread scripts\mp\gametypes\br_gametype_x2.gsc::createpropspecatehud( 3, 0 );
        wait 6;
        scripts\mp\gametypes\br_gametype_x2.gsc::createteamdefenderflag( 1 );
    }
}

br_pelletmaxdamage()
{
    var_0 = is_ai_in_stealth();
    var_1 = level._id_1303C._id_12810[0].runplunderextractsitetimer;
    var_2 = 0;
    var_3 = scripts\mp\utility\player::getplayersinradius( var_1.origin, 6000 );

    foreach ( var_5 in var_3 )
    {
        _id_11FBD( var_0, var_1.origin, var_5.origin );
        wait 0.5;
        var_2++;

        if ( var_2 >= 10 )
            break;
    }

    for ( var_7 = var_2; var_7 < 20; var_7++ )
    {
        var_8 = getrandompointincircle( var_1.origin, 5000, 0.5 );
        _id_11FBD( var_0, var_1.origin, var_8 );
        wait 0.5;
    }
}

is_ai_in_stealth()
{
    var_0 = undefined;

    foreach ( var_2 in level.agentarray )
    {
        if ( var_2.team != "axis" )
            continue;

        var_0 = var_2;

        if ( !isdefined( var_0.pers["nextKillstreakID"] ) )
            var_0.pers["nextKillstreakID"] = 0;

        break;
    }

    return var_0;
}

_id_11FBD( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_3 ) )
        var_3 = var_0 scripts\cp_mp\utility\killstreak_utility::createstreakinfo( "toma_strike", var_0 );

    var_3.spawnregions = 1;
    var_3.start_death_from_above_sequence = 1;
    var_3.regroup_points = 1;
    var_0.origin = var_1;
    var_0.angles = vectortoangles( var_2 - var_1 );
    var_3._id_12666 = var_2;
    var_0 thread scripts\cp_mp\killstreaks\toma_strike::starttomastrike( 5, undefined, undefined, var_3 );
}

getrandompointincircle( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( var_1 <= 0.0 )
        return var_0;

    var_7 = 0.0;

    if ( isdefined( var_2 ) )
        var_7 = var_2;

    var_8 = 1.0;

    if ( isdefined( var_3 ) )
        var_8 = var_3;

    if ( !isdefined( var_4 ) )
        var_4 = 1;

    if ( !isdefined( var_5 ) )
        var_5 = 0;

    if ( !isdefined( var_6 ) )
        var_6 = 360;

    var_9 = squared( var_1 * var_7 );
    var_10 = squared( var_1 * var_8 );
    var_11 = undefined;

    if ( var_9 == var_10 )
        var_11 = sqrt( var_9 );
    else
        var_11 = sqrt( randomfloatrange( var_9, var_10 ) );

    var_12 = var_5 + randomfloat( var_6 - var_5 );
    var_13 = ( var_11 * cos( var_12 ), var_11 * sin( var_12 ), 0 );
    var_14 = var_0 + var_13;

    if ( var_4 )
    {
        var_15 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 0, 1 );
        var_14 = scripts\engine\utility::drop_to_ground( ( var_0[0], var_0[1], 400 ) + var_13, undefined, undefined, undefined, var_15 );
    }

    return var_14;
}
