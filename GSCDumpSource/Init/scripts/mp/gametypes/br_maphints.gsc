// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( getdvarint( "scr_mapHints", 0 ) == 0 )
    {
        level thread getrewardvaluetype();
        return;
    }

    level.set_relic_hideobjicons = [];
    level.set_relic_hideobjicons["keypads"] = [];
    level.set_relic_hideobjicons["phones"] = [];
    level.set_relic_hideobjicons["computers"] = [];
    level thread onplayerconnect();
    level thread playerhudattractionobj();

    if ( scripts\cp_mp\utility\game_utility::getmapname() == "mp_br_mechanics" )
        playerupdatealivecounthuman();
    else
        playertimestart();

    scripts\engine\scriptable::_id_11CDB( "maphint_computer", ::set_relic_gas_martyr );

    if ( 0 )
        level thread set_relic_grounded();
}

getrewardvaluetype()
{
    wait 1.0;
    var_0 = tablelookupgetnumrows( "mp/intel_challenges.csv" );

    for ( var_1 = 0; var_1 < var_0; var_1++ )
    {
        var_2 = tablelookupbyrow( "mp/intel_challenges.csv", var_1, 0 );

        if ( isdefined( var_2 ) && var_2 != "" )
        {
            var_3 = getentitylessscriptablearrayinradius( var_2, "script_noteworthy" );

            foreach ( var_5 in var_3 )
                var_5 setscriptablepartstate( "hint", "off", 1 );
        }
    }
}

playertouching()
{
    level.set_relic_hideobjicons["keypads"] = [];
    level.set_relic_hideobjicons["keypads"][0] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][0].origin = ( -17261, -44265, 40 );
    level.set_relic_hideobjicons["keypads"][1] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][1].origin = ( -37520, -19013, 237 );
    level.set_relic_hideobjicons["keypads"][2] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][2].origin = ( -39523, -2395, 30 );
    level.set_relic_hideobjicons["keypads"][3] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][3].origin = ( -38640, -1902, -103 );
    level.set_relic_hideobjicons["keypads"][4] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][4].origin = ( -15513, 43307, 105 );
    level.set_relic_hideobjicons["keypads"][5] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][5].origin = ( 2495, 41096, 1670 );
    level.set_relic_hideobjicons["keypads"][6] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][6].origin = ( 47600, 34582, 500 );
    level.set_relic_hideobjicons["keypads"][7] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][7].origin = ( 18622, -34634, -478 );
    level.set_relic_hideobjicons["keypads"][8] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][8].origin = ( 54279, -33994, 173 );
    level.set_relic_hideobjicons["keypads"][9] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][9].origin = ( 36350, 13586, 26 );
    level.set_relic_hideobjicons["keypads"][10] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][10].origin = ( 37390, 13383, -117 );

    foreach ( var_2, var_1 in level.set_relic_hideobjicons["keypads"] )
        level.set_relic_hideobjicons["keypads"][var_2].scriptable = easepower( "maphint_keypad", var_1.origin );
}

playerumpedfromplane()
{
    level.set_relic_hideobjicons["phones"] = [];

    foreach ( var_2, var_1 in level.set_relic_hideobjicons["phones"] )
        level.set_relic_hideobjicons["phones"][var_2].scriptable = easepower( "maphint_phone", var_1.origin );
}

playertimestart()
{
    level.set_relic_hideobjicons["computers"] = [];
    level.set_relic_hideobjicons["computers"][0] = spawnstruct();
    level.set_relic_hideobjicons["computers"][0].origin = ( 8490, -11874, -239 );
    level.set_relic_hideobjicons["computers"][1] = spawnstruct();
    level.set_relic_hideobjicons["computers"][1].origin = ( -14585, 7982, -175 );
    level.set_relic_hideobjicons["computers"][2] = spawnstruct();
    level.set_relic_hideobjicons["computers"][2].origin = ( -34140, 3815, -55 );
    level.set_relic_hideobjicons["computers"][3] = spawnstruct();
    level.set_relic_hideobjicons["computers"][3].origin = ( 5358, 51419, 1080 );
    level.set_relic_hideobjicons["computers"][4] = spawnstruct();
    level.set_relic_hideobjicons["computers"][4].origin = ( 51078, -39445, 1125 );
    level.set_relic_hideobjicons["computers"][5] = spawnstruct();
    level.set_relic_hideobjicons["computers"][5].origin = ( 17796, -8300, 1349 );
    level.set_relic_hideobjicons["computers"][6] = spawnstruct();
    level.set_relic_hideobjicons["computers"][6].origin = ( 37275, -26745, -472 );

    foreach ( var_2, var_1 in level.set_relic_hideobjicons["computers"] )
        level.set_relic_hideobjicons["computers"][var_2].scriptable = easepower( "maphint_computer", var_1.origin );
}

playerunpackdatafromomnvar()
{
    level.set_relic_hideobjicons["radios"] = [];
    level.set_relic_hideobjicons["radios"][0] = spawnstruct();
    level.set_relic_hideobjicons["radios"][0].origin = ( -21440, 19434, -252 );
    level.set_relic_hideobjicons["radios"][1] = spawnstruct();
    level.set_relic_hideobjicons["radios"][1].origin = ( 2896, 45445, 1630 );

    foreach ( var_2, var_1 in level.set_relic_hideobjicons["radios"] )
        level.set_relic_hideobjicons["radios"][var_2].scriptable = easepower( "maphint_radio", var_1.origin );
}

set_relic_gun_game( var_0, var_1, var_2, var_3, var_4 )
{
    level thread add_trigger_to_oob_system( var_0, var_1, var_2, var_3, var_4 );
}

add_trigger_to_oob_system( var_0, var_1, var_2, var_3, var_4 )
{
    if ( var_2 == "on" )
    {
        playsoundatpos( var_3.origin, "br_keypad_deny" );
        var_0 setscriptablepartstate( "maphint_keypad", "off" );
        wait 3;
        var_0 setscriptablepartstate( "maphint_keypad", "on" );
    }
}

set_relic_healthpacks( var_0, var_1, var_2, var_3, var_4 )
{
    level thread add_wave_overrides_to_module( var_0, var_1, var_2, var_3, var_4 );
}

add_wave_overrides_to_module( var_0, var_1, var_2, var_3, var_4 )
{
    if ( var_2 == "on" )
    {
        playsoundatpos( var_3.origin, "br_phone_deny" );
        var_0 setscriptablepartstate( "maphint_phone", "off" );
        wait 3;
        var_0 setscriptablepartstate( "maphint_phone", "on" );
    }
}

set_relic_gas_martyr( var_0, var_1, var_2, var_3, var_4 )
{
    level thread add_track_points( var_0, var_1, var_2, var_3, var_4 );
}

add_track_points( var_0, var_1, var_2, var_3, var_4 )
{
    if ( var_2 == "on" )
    {
        playsoundatpos( var_3.origin, "br_computer_deny" );
        var_0 setscriptablepartstate( "maphint_computer", "off" );
        wait 3;
        var_0 setscriptablepartstate( "maphint_computer", "on" );
    }
}

playerupdatealivecounthuman()
{
    wait 5;
    level.set_relic_hideobjicons["keypads"] = [];
    level.set_relic_hideobjicons["keypads"][0] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][0].origin = ( -237, -2721, 60 );
    level.set_relic_hideobjicons["keypads"][1] = spawnstruct();
    level.set_relic_hideobjicons["keypads"][1].origin = ( -237, -2721, 260 );

    foreach ( var_1 in level.set_relic_hideobjicons["keypads"] )
        var_2 = easepower( "maphint_keypad", var_1.origin );

    level.set_relic_hideobjicons["phones"] = [];
    level.set_relic_hideobjicons["phones"][0] = spawnstruct();
    level.set_relic_hideobjicons["phones"][0].origin = ( -21, -2721, 60 );
    level.set_relic_hideobjicons["phones"][1] = spawnstruct();
    level.set_relic_hideobjicons["phones"][1].origin = ( -21, -2721, 260 );

    foreach ( var_1 in level.set_relic_hideobjicons["phones"] )
        var_2 = easepower( "maphint_phone", var_1.origin );

    level.set_relic_hideobjicons["computers"] = [];
    level.set_relic_hideobjicons["computers"][0] = spawnstruct();
    level.set_relic_hideobjicons["computers"][0].origin = ( 100, -2721, 60 );
    level.set_relic_hideobjicons["computers"][1] = spawnstruct();
    level.set_relic_hideobjicons["computers"][1].origin = ( 100, -2721, 260 );

    foreach ( var_1 in level.set_relic_hideobjicons["computers"] )
        var_2 = easepower( "maphint_computer", var_1.origin );
}

set_relic_grounded()
{
    var_0 = 1;

    for (;;)
    {
        if ( var_0 )
        {
            foreach ( var_2 in level.set_relic_hideobjicons["phones"] )
                thread scripts\mp\utility\debug::drawsphere( var_2.scriptable.origin, 64, 1, ( 0, 1, 0 ) );
        }

        if ( getdvarint( "scr_mapHint_debugReset", 0 ) == 1 )
        {
            foreach ( var_2 in level.set_relic_hideobjicons["keypads"] )
                var_2.scriptable freescriptable();

            foreach ( var_2 in level.set_relic_hideobjicons["phones"] )
                var_2.scriptable freescriptable();

            foreach ( var_2 in level.set_relic_hideobjicons["computers"] )
                var_2.scriptable freescriptable();

            playertouching();
            playerumpedfromplane();
            playertimestart();
        }

        wait 1;
    }
}

playerhudattractionobj()
{
    level.plunder_infils_ready = [];
    scripts\mp\flags::gameflaginit( "intel_challenges_setup_complete", 0 );
    var_0 = getdvarint( "LSQRKOSLTP", 0 );
    level.watchoverheat = getentitylessscriptablearrayinradius( "intel_challenge", "targetname" );
    var_1 = 0;

    for (;;)
    {
        var_2 = tablelookupbyrow( "mp/intel_challenges.csv", var_1, 0 );
        var_3 = tablelookupbyrow( "mp/intel_challenges.csv", var_1, 1 );

        if ( !isdefined( var_3 ) || var_3 == "" )
            break;

        var_4 = int( tablelookupbyrow( "mp/intel_challenges.csv", var_1, 3 ) );
        var_5 = int( tablelookupbyrow( "mp/intel_challenges.csv", var_1, 2 ) );

        if ( var_5 > var_0 && getdvarint( "scr_intel_challenges_debug", 0 ) == 0 )
        {
            var_1++;
            continue;
        }

        var_6 = tablelookupbyrow( "mp/intel_challenges.csv", var_1, 4 );
        var_7 = tablelookupbyrow( "mp/intel_challenges.csv", var_1, 5 );
        var_8 = float( tablelookupbyrow( "mp/intel_challenges.csv", var_1, 6 ) );
        var_9 = float( tablelookupbyrow( "mp/intel_challenges.csv", var_1, 7 ) );
        var_10 = float( tablelookupbyrow( "mp/intel_challenges.csv", var_1, 8 ) );
        var_11 = ( var_8, var_9, var_10 );
        var_12 = float( tablelookupbyrow( "mp/intel_challenges.csv", var_1, 9 ) );
        var_13 = float( tablelookupbyrow( "mp/intel_challenges.csv", var_1, 10 ) );
        var_14 = float( tablelookupbyrow( "mp/intel_challenges.csv", var_1, 11 ) );
        var_15 = ( var_12, var_13, var_14 );
        var_16 = tablelookupbyrow( "mp/intel_challenges.csv", var_1, 13 );

        if ( !isdefined( level.plunder_infils_ready[var_3] ) )
        {
            var_17 = spawnstruct();
            var_17.ref = var_3;
            var_17.playbattlechattersoundexpensive = var_4;
            var_17._id_12FF8 = var_5;
            var_17.brjugg_initexternalfeatures = var_6;
            var_17.origin = var_11;
            var_17.eomawardplayerxp = var_16;
            var_17.scriptables = [];
            level.plunder_infils_ready[var_3] = var_17;
        }

        if ( var_4 )
        {
            var_18 = getentitylessscriptablearrayinradius( var_2, "script_noteworthy" );
            var_19 = var_18[0];

            if ( !isdefined( var_19 ) )
                var_19 = easepower( "intel", var_11, var_15 );

            var_19.shouldhumanspawntags = var_7;
            var_19.get_alive_nonspecating_players = var_3;
            level.plunder_infils_ready[var_3].scriptables[var_2] = var_19;
        }

        var_1++;
    }

    level thread br_ammo_player_max_out();
    scripts\engine\scriptable::scriptable_addusedcallback( ::plunder_items_picked_up );
    var_20 = getentitylessscriptablearrayinradius( "intel_challenge", "targetname" );
    scripts\mp\flags::gameflagset( "intel_challenges_setup_complete" );
}

br_ammo_player_max_out()
{
    wait 1.0;

    foreach ( var_5, var_1 in level.plunder_infils_ready )
    {
        if ( !var_1.playbattlechattersoundexpensive )
            continue;

        foreach ( var_3 in level.plunder_infils_ready[var_5].scriptables )
            var_3 setscriptablepartstate( "model", var_3.shouldhumanspawntags );
    }
}

_id_1204A( var_0, var_1 )
{
    foreach ( var_3 in level.plunder_infils_ready[var_1].scriptables )
        var_3 enablescriptableplayeruse( var_0 );

    if ( isdefined( level.ammobox_getbufferedattachment ) )
    {
        foreach ( var_6 in level.ammobox_getbufferedattachment )
        {
            if ( var_6.get_alive_nonspecating_players == var_1 )
                var_6 showtoplayer( var_0 );
        }
    }
}

overheatreductiontime( var_0, var_1 )
{
    foreach ( var_3 in level.plunder_infils_ready[var_1].scriptables )
        var_3 disablescriptableplayeruse( var_0 );

    if ( isdefined( level.ammobox_getbufferedattachment ) )
    {
        foreach ( var_6 in level.ammobox_getbufferedattachment )
        {
            if ( var_6.get_alive_nonspecating_players == var_1 )
                var_6 hidefromplayer( var_0 );
        }
    }
}

onplayerconnect()
{
    for (;;)
    {
        level waittill( "connected", var_0 );
        var_0 thread br_alt_mode_impulse_player();
    }
}

br_alt_mode_impulse_player()
{
    self endon( "disconnect" );
    scripts\mp\flags::gameflagwait( "intel_challenges_setup_complete" );

    foreach ( var_1 in level.watchoverheat )
        var_1 disablescriptableplayeruse( self );

    foreach ( var_5, var_4 in level.plunder_infils_ready )
    {
        if ( !var_4.playbattlechattersoundexpensive )
            continue;

        overheatreductiontime( self, var_5 );
    }

    self.allassassin_teams = [];

    if ( getdvarint( "scr_intel_challenges_debug", 0 ) == 1 )
    {
        var_6 = [];

        foreach ( var_5, var_4 in level.plunder_infils_ready )
        {
            if ( !var_4.playbattlechattersoundexpensive )
                continue;

            var_6[var_6.size] = var_5;
        }

        self.allassassin_teams = var_6;
    }
    else
    {
        var_8 = 3001;
        var_9 = undefined;

        foreach ( var_5, var_4 in level.plunder_infils_ready )
        {
            if ( var_4._id_12FF8 < var_8 )
                continue;

            if ( var_8 < var_4._id_12FF8 )
                var_8 = var_4._id_12FF8;

            if ( isdefined( var_9 ) && var_9 < var_4._id_12FF8 )
                var_9 = undefined;

            var_11 = self getplayerdata( "mp", "missionComplete", var_5 );

            if ( !isdefined( var_9 ) && !var_11 )
            {
                var_9 = var_4._id_12FF8;
                var_8++;
                self.allassassin_teams[self.allassassin_teams.size] = var_5;
            }
        }
    }

    scripts\mp\flags::gameflagwait( "prematch_done" );

    foreach ( var_5, var_4 in level.plunder_infils_ready )
    {
        if ( !var_4.playbattlechattersoundexpensive )
            continue;

        if ( scripts\engine\utility::array_contains( self.allassassin_teams, var_5 ) )
            _id_1204A( self, var_5 );
    }
}

plunder_items_picked_up( var_0, var_1, var_2, var_3, var_4 )
{
    if ( isdefined( var_0 ) && isdefined( var_0.type ) && var_0.type == "intel" )
    {
        var_5 = 1;

        if ( !scripts\engine\utility::array_contains( var_3.allassassin_teams, var_0.get_alive_nonspecating_players ) )
            var_5 = 0;

        if ( var_0.get_alive_nonspecating_players == "ch_intel_season3_2_5" )
        {
            if ( !var_3 scripts\mp\utility\perk::_hasperk( "specialty_hack" ) )
            {
                var_5 = 0;
                playsoundatpos( var_3.origin, "br_computer_deny" );
            }
        }

        if ( var_5 )
        {
            if ( level.plunder_infils_ready[var_0.get_alive_nonspecating_players].scriptables.size > 1 && istrue( level.plunder_infils_ready[var_0.get_alive_nonspecating_players].eomawardplayerxp ) )
            {
                if ( !isdefined( var_3.pers[var_0.get_alive_nonspecating_players] ) )
                    var_3.pers[var_0.get_alive_nonspecating_players] = 1;
                else
                    var_3.pers[var_0.get_alive_nonspecating_players]++;

                var_6 = level.plunder_infils_ready[var_0.get_alive_nonspecating_players].scriptables.size;

                if ( var_3.pers[var_0.get_alive_nonspecating_players] < var_6 )
                {
                    var_0 disablescriptableplayeruse( var_3 );
                    var_3 playsoundtoplayer( "ui_intel_interact", var_3 );
                    return;
                }
            }

            overheatreductiontime( var_3, var_0.get_alive_nonspecating_players );
            var_3 reportchallengeuserevent( "collect_item", level.plunder_infils_ready[var_0.get_alive_nonspecating_players].brjugg_initexternalfeatures );
            var_3 playsoundtoplayer( "ui_intel_interact", var_3 );
        }
    }
}

quickdropcleanupcache( var_0, var_1 )
{
    return isdefined( var_0.allassassin_teams ) && scripts\engine\utility::array_contains( var_0.allassassin_teams, var_1 );
}

set_solution( var_0, var_1 )
{
    var_2 = scripts\mp\utility\teams::getfriendlyplayers( var_0.team, 0 );

    foreach ( var_4 in var_2 )
    {
        if ( quickdropcleanupcache( var_4, var_1.get_alive_nonspecating_players ) )
            plunder_items_picked_up( var_1, undefined, undefined, var_4 );
    }
}

safehouse_vo_return_end()
{
    level endon( "game_ended" );

    for (;;)
    {
        self waittill( "emp_applied", var_0 );
        var_1 = scripts\mp\utility\teams::getfriendlyplayers( var_0.attacker, 0 );

        foreach ( var_3 in var_1 )
        {
            if ( quickdropcleanupcache( var_3, self.get_alive_nonspecating_players ) )
                plunder_items_picked_up( self.scriptable, undefined, undefined, var_3 );
        }
    }
}
