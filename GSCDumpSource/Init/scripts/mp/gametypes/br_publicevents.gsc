// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    playersetisbecomingzombie();
    scripts\mp\gametypes\br_dev.gsc::zombiesdamagezombies( ::notifyteamonvehicledeath );

    if ( !waittill_wave_died_to_or_timeout() )
        return;

    level thread waittill_wave_spawned_or_timeout();
}

playersetisbecomingzombie()
{
    scripts\mp\gametypes\br_publicevent_bombardment.gsc::init();
    scripts\mp\gametypes\br_publicevent_choppers.gsc::init();
    scripts\mp\gametypes\br_publicevent_firesale.gsc::init();
    scripts\mp\gametypes\br_publicevent_jailbreak.gsc::init();
    scripts\mp\gametypes\br_publicevent_juggernaut.gsc::init();
}

_id_11955( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( level.chooseanim_arrival_forcode ) )
        level.chooseanim_arrival_forcode = [];

    var_5 = spawnstruct();
    var_5.active = 0;
    var_5._id_12BBF = var_1;
    var_5.weight = var_2;
    var_5._id_12E1D = var_3;
    var_5.all_gas_trap_structs = var_4;
    level.chooseanim_arrival_forcode[var_0] = var_5;
    return var_5;
}

defenderflagbases()
{
    level notify( "cancel_public_event" );
}

waittill_wave_died_to_or_timeout()
{
    var_0 = getdvarint( "scr_br_pe_force_type", 0 );

    if ( var_0 != 0 )
        return 1;

    if ( scripts\mp\utility\game::race_set_checkpoint() )
        return 0;

    var_1 = min_player_health();

    if ( !var_1 )
        return 0;

    var_2 = min_dist_sq_from_node();

    if ( var_2 <= 0.0 )
        return 0;

    return 1;
}

_id_11FF8()
{
    var_0 = min_dist_sq_from_node();

    if ( var_0 <= 0.0 )
        return 0;

    return randomfloat( 1.0 ) <= var_0;
}

min_player_health()
{
    return getdvarint( "scr_br_pe_count", 1 );
}

min_dist_sq_from_node()
{
    return getdvarfloat( "scr_br_pe_chance", 0.0 );
}

spawn_obit_model()
{
    var_0 = min_player_health();
    return var_0 != 1;
}

waittill_wave_spawned_or_timeout()
{
    level endon( "cancel_public_event" );
    scripts\mp\flags::gameflagwait( "prematch_done" );

    if ( spawn_obit_model() )
    {
        var_0 = getdvarfloat( "scr_br_pe_multi_wait_min", 240 );
        var_1 = getdvarfloat( "scr_br_pe_multi_wait_max", 360 );
        var_2 = min_player_health();

        while ( var_2 )
        {
            var_3 = randomfloatrange( var_0, var_1 );
            wait( var_3 );

            if ( _id_11FF8() )
            {
                dontspawnjeep( 1 );
                var_2--;
            }
        }
    }
    else if ( _id_11FF8() )
        dontspawnjeep( 0 );
}

_id_12BBD()
{
    var_0 = [];

    foreach ( var_3, var_2 in level.chooseanim_arrival_forcode )
    {
        if ( var_2.weight <= 0.0 )
            continue;

        if ( isdefined( var_2._id_12BBF ) && ![[ var_2._id_12BBF ]]() )
            continue;

        var_0[var_0.size] = var_3;
    }

    return var_0;
}

modifyplayer_damage( var_0 )
{
    var_1 = 0.0;

    foreach ( var_3 in var_0 )
    {
        var_4 = level.chooseanim_arrival_forcode[var_3];
        var_5 = var_4.weight;
        var_1 = var_1 + var_5;
    }

    return var_1;
}

is_opened( var_0, var_1 )
{
    var_2 = 0.0;

    if ( !var_0.size )
        return 0;

    foreach ( var_4 in var_0 )
    {
        var_5 = level.chooseanim_arrival_forcode[var_4];
        var_6 = var_5.weight;
        var_2 = var_2 + var_6;

        if ( var_1 <= var_2 )
            return var_4;
    }

    return 0;
}

dontspawnjeep( var_0 )
{
    var_1 = _id_12BBD();
    var_2 = modifyplayer_damage( var_1 );
    var_3 = randomfloat( var_2 );
    var_4 = is_opened( var_1, var_3 );
    var_5 = getdvarint( "scr_br_pe_force_type", 0 );

    if ( var_5 != 0 )
        var_4 = var_5;

    if ( var_4 == 0 )
        return;

    level _id_11BFD( var_4, var_0 );
}

_id_11BFD( var_0, var_1 )
{
    level endon( "game_ended" );
    level endon( "cancel_public_event" );
    var_2 = level.chooseanim_arrival_forcode[var_0];

    if ( isdefined( var_2._id_12E1D ) && !var_1 )
        var_2 [[ var_2._id_12E1D ]]();

    var_2.active = 1;
    scripts\mp\gametypes\br_analytics.gsc::circleposattime( var_0 );

    if ( isdefined( var_2.all_gas_trap_structs ) )
        var_2 [[ var_2.all_gas_trap_structs ]]();

    var_2.active = 0;
    scripts\mp\gametypes\br_analytics.gsc::circlepeeks( var_0 );
}

race_set_next_checkpoint( var_0 )
{
    var_1 = level.chooseanim_arrival_forcode[var_0];

    if ( !isdefined( var_1 ) )
        return 0;

    return istrue( var_1.active );
}

_id_1205D( var_0 )
{
    foreach ( var_2 in level.players )
        var_2 scripts\mp\hud_message::showsplash( var_0 );
}

dangercircletick( var_0, var_1 )
{
    scripts\mp\gametypes\br_publicevent_choppers.gsc::dangercircletick( var_0, var_1 );
}

notifyteamonvehicledeath( var_0, var_1 )
{

}
