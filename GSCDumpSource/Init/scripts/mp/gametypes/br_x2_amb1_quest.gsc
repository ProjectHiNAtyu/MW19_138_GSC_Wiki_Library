// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    var_0 = scripts\mp\gametypes\br_quest_util.gsc::registerquestcategory( "x2_amb1", 0 );

    if ( !var_0 )
        return;

    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "x2_amb1" ).should_do_vo_call = getdvarint( "scr_br_x2_amb1_missionTimeBase", 240 );
    scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "x2_amb1" ).binoculars_targetisvalidmark = getdvarint( "scr_br_x2_amb1_ambushCircleSize", 3000 );
    scripts\mp\gametypes\br_quest_util.gsc::registerremovequestinstance( "x2_amb1", ::_id_13089 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_1194E( "x2_amb1", ::_id_13088 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11950( "x2_amb1", ::_id_1308A );
    scripts\mp\gametypes\br_quest_util.gsc::registerquestthink( "x2_amb1", ::_id_1308B, 0.05 );
    scripts\mp\gametypes\br_quest_util.gsc::watch_for_player_going_belowmap_or_oob( "x2_amb1", 0 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_11951( "x2_amb1", ::_id_13087 );
    flashenemies();
}

flashenemies()
{
    var_0 = [];

    if ( level.mapname == "mp_br_mechanics" )
        var_0[0] = ( -483, -2260, 30 );
    else
    {
        var_0[0] = ( 4695, 306, -215 );
        var_0[1] = ( 2477, 18513, -237 );
        var_0[2] = ( -15901, 29619, -184 );
        var_0[3] = ( -31170, 9206, -380 );
        var_0[4] = ( -31620, -13572, -250 );
        var_0[5] = ( -27351, -33773, 42 );
        var_0[6] = ( -6732, -38470, 514.5 );
        var_0[7] = ( 3583, -33457, -23 );
    }

    foreach ( var_4, var_2 in var_0 )
    {
        var_0[var_4] = getdvarvector( "scr_br_x2_amb" + var_4 + "_destination", var_0[var_4] );
        var_3 = spawnstruct();
        var_3.origin = scripts\mp\gametypes\br_public.gsc::helihint_deposit( var_0[var_4], 0, -200 ) + ( 0, 0, 20 );
        var_3.gameobject = spawn( "script_model", var_3.origin );
        var_3.gameobject hide();
        scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "x2_amb1" ).destination[var_4] = var_3;
    }
}

_id_1308A( var_0 )
{
    if ( !disablespawningforplayer( var_0 ) )
        return;

    var_0 scripts\mp\gametypes\br_quest_util.gsc::uiobjectiveshow( "x2_amb1" );
    scripts\mp\gametypes\br_quest_util.gsc::_id_12058( var_0 );
}

_id_13087()
{
    level thread scripts\mp\gametypes\br_public.gsc::cloudanimfx( "mission_gen_fail", self.team, 1 );
}

_id_13089()
{
    getburnfxstatepriority();
    scripts\mp\gametypes\br_quest_util.gsc::releaseteamonquest( self.team );
}

_id_13088( var_0 )
{
    if ( var_0.team == self.team )
    {
        if ( !scripts\mp\gametypes\br_quest_util.gsc::isteamvalid( var_0.team ) )
        {
            self.result = "fail";
            scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();
        }
    }
}

disablespawningforplayer( var_0 )
{
    return scripts\mp\gametypes\br_gametype_x2.gsc::create_usb_anim_rig( var_0 );
}

monitor_player_near_truck( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = scripts\mp\gametypes\br_gametype_x2.gsc::create_vault_assault_loadout_selection( "x2_amb1", var_0, var_1, var_4 );
    var_5.fulton_interactions_disabled = level._id_1307D;
    var_6 = scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "x2_amb1" ).destination[var_5.fulton_interactions_disabled].origin;
    var_5 scripts\mp\gametypes\br_quest_util.gsc::force_ai_to_drop_thermites( 4, 12, 0, var_6 );
    var_5 scripts\mp\gametypes\br_quest_util.gsc::_id_11EBE( scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "x2_amb1" ).binoculars_targetisvalidmark );

    foreach ( var_2 in var_5.playerlist )
        var_2.watch_for_level_weapons_free = var_6;

    var_5 _id_12B3D();
    scripts\mp\gametypes\br_quest_util.gsc::uiobjectiveshowtoteam( "x2_amb1", self.team );
    var_5 scripts\mp\gametypes\br_quest_util.gsc::watch_for_player_in_gulag( scripts\mp\gametypes\br_quest_util.gsc::getquestdata( "x2_amb1" ).should_do_vo_call, 4 );
    scripts\mp\gametypes\br_quest_util.gsc::addquestinstance( "x2_amb1", var_5 );
    scripts\mp\gametypes\br_quest_util.gsc::_id_124A9( "x2_amb1", self, self.team );
    var_9 = spawnstruct();
    var_9.vehicleoutline = scripts\mp\gametypes\br_quest_util.gsc::min_z( "x2_amb1", scripts\mp\gametypes\br_quest_util.gsc::mine_caves_cell_support_internal( self.team ) );
    scripts\mp\gametypes\br_quest_util.gsc::displayteamsplash( self.team, "br_x2_amb1_quest_start_team_notify", var_9 );
    return var_5;
}

_id_12B3D()
{
    foreach ( var_1 in self.playerlist )
    {
        var_1 scripts\mp\gametypes\br_quest_util.gsc::uiobjectiveshow( "x2_amb1" );
        scripts\mp\gametypes\br_quest_util.gsc::_id_12056( var_1 );
    }
}

bonus_target_score()
{
    return scripts\mp\gametypes\br_gametype_x2.gsc::cp_smuggler_sound_load( "x2_amb1", ::monitor_player_near_truck );
}

_id_1308B()
{
    if ( istrue( self.issnipersemi ) || scripts\mp\flags::gameflag( "x2_train_destroyed" ) || scripts\mp\flags::gameflag( "x2_train_one_cart_left" ) )
        inner();

    if ( scripts\mp\flags::gameflag( "x2_ambush" + ( self.fulton_interactions_disabled + 1 ) + "_completed" ) )
        _id_13086();
}

_id_13086()
{
    var_0 = spawnstruct();
    var_1 = scripts\mp\gametypes\br_quest_util.gsc::mine_caves_cell_support_internal( self.team );
    var_2 = scripts\mp\gametypes\br_quest_util.gsc::getquestindex( "x2_amb1" );
    var_3 = scripts\mp\gametypes\br_quest_util.gsc::mine_caves_ambush( scripts\mp\gametypes\br_quest_util.gsc::mine_cave_turrets( "x2_amb1" ) );
    var_0.target_show_damage_damage_watch = scripts\mp\gametypes\br_quest_util.gsc::target_wavespawning_to_jammer5( var_2, var_1, var_3 );
    self._id_11B21 = self.playerlist[0].origin;
    self._id_11B1E = self.playerlist[0].angles;
    self.result = "success";
    self.spawntvfix = 1;
    scripts\mp\gametypes\br_gametype_x2.gsc::create_vehicle_omnvars_data( self );
    scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();
}

inner()
{
    scripts\mp\gametypes\br_gametype_x2.gsc::create_vehicle_omnvars_data( self );
    self.result = "fail";
    scripts\mp\gametypes\br_quest_util.gsc::removequestinstance();
}

outline_ent_index( var_0 )
{
    scripts\mp\gametypes\br_quest_util.gsc::overrideviewkickscaledmr( var_0 );
    var_0 scripts\mp\gametypes\br_quest_util.gsc::uiobjectivehide();
}

getburnfxstatepriority()
{
    foreach ( var_1 in self.playerlist )
    {
        if ( isdefined( var_1 ) )
            outline_ent_index( var_1 );
    }
}
