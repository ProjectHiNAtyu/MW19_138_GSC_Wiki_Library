// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

scriptable_setinitcallback( var_0 )
{
    if ( !isdefined( level.scriptable_init ) )
        level.scriptable_init = [];

    level.scriptable_init = scripts\engine\utility::array_add( level.scriptable_init, var_0 );
}

scriptable_engineinitialize()
{
    if ( isdefined( level.scriptable_init ) )
    {
        foreach ( var_1 in level.scriptable_init )
            [[ var_1 ]]();
    }
}

scriptable_addpostinitcallback( var_0 )
{
    if ( !isdefined( level.scriptable_postinit ) )
        level.scriptable_postinit = [];

    level.scriptable_postinit = scripts\engine\utility::array_add( level.scriptable_postinit, var_0 );
}

scriptable_enginepostinitialize()
{
    if ( isdefined( level.scriptable_postinit ) )
    {
        foreach ( var_1 in level.scriptable_postinit )
            [[ var_1 ]]();
    }
}

scriptable_addusedcallback( var_0 )
{
    if ( !isdefined( level.scriptable_used_funcs ) )
        level.scriptable_used_funcs = [];

    level.scriptable_used_funcs = scripts\engine\utility::array_add( level.scriptable_used_funcs, var_0 );
}

_id_11CDB( var_0, var_1 )
{
    if ( !isdefined( level._id_11CEB ) )
        level._id_11CEB = [];

    if ( !isdefined( level._id_11CEB[var_0] ) )
        level._id_11CEB[var_0] = [];

    level._id_11CEB[var_0][level._id_11CEB[var_0].size] = var_1;
}

_id_11CD8( var_0 )
{
    if ( !isdefined( level._id_11CDC ) )
        level._id_11CDC = [];

    level._id_11CDC = scripts\engine\utility::array_add( level._id_11CDC, var_0 );
}

_id_11CD9( var_0 )
{
    if ( !isdefined( level._id_11CDE ) )
        level._id_11CDE = [];

    level._id_11CDE = scripts\engine\utility::array_add( level._id_11CDE, var_0 );
}

scriptable_engineused( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( istrue( var_5 ) )
    {
        if ( isdefined( level._id_11CDE ) )
        {
            foreach ( var_7 in level._id_11CDE )
                [[ var_7 ]]( var_0, var_1, var_2, var_3, 0 );
        }

        return;
    }

    if ( istrue( var_4 ) )
    {
        if ( isdefined( level._id_11CDC ) )
        {
            foreach ( var_7 in level._id_11CDC )
                [[ var_7 ]]( var_0, var_1, var_2, var_3, 1 );
        }
    }
    else
    {
        if ( isdefined( level.scriptable_used_funcs ) )
        {
            foreach ( var_7 in level.scriptable_used_funcs )
                [[ var_7 ]]( var_0, var_1, var_2, var_3, 0 );
        }

        if ( isdefined( level._id_11CEB ) && isdefined( level._id_11CEB[var_1] ) )
        {
            foreach ( var_7 in level._id_11CEB[var_1] )
                [[ var_7 ]]( var_0, var_1, var_2, var_3, 1 );
        }
    }
}

scriptable_addtouchedcallback( var_0 )
{
    if ( !isdefined( level.scriptable_touched_funcs ) )
        level.scriptable_touched_funcs = [];

    level.scriptable_touched_funcs = scripts\engine\utility::array_add( level.scriptable_touched_funcs, var_0 );
}

scriptable_enginetouched( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( level.scriptable_touched_funcs ) )
    {
        foreach ( var_5 in level.scriptable_touched_funcs )
            [[ var_5 ]]( var_0, var_1, var_2, var_3 );
    }
}

_id_11CDA( var_0 )
{
    if ( !isdefined( level._id_11CE3 ) )
        level._id_11CE3 = [];

    level._id_11CE3 = scripts\engine\utility::array_add( level._id_11CE3, var_0 );
}

_id_11CE7( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 )
{
    if ( isdefined( level._id_11CE3 ) )
    {
        foreach ( var_12 in level._id_11CE3 )
            [[ var_12 ]]( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );
    }
}

scriptable_addnotifycallback( var_0, var_1 )
{
    if ( !isdefined( level.scriptable_notify_callback_funcs ) )
        level.scriptable_notify_callback_funcs = [];

    if ( !isdefined( level.scriptable_notify_callback_funcs[var_0] ) )
        level.scriptable_notify_callback_funcs[var_0] = [];

    level.scriptable_notify_callback_funcs[var_0][level.scriptable_notify_callback_funcs.size] = var_1;
}

scriptable_enginenotifycallback( var_0, var_1, var_2 )
{
    var_3 = var_0;

    if ( !isdefined( level.scriptable_notify_callback_funcs ) )
        return;

    var_4 = level.scriptable_notify_callback_funcs[var_3];

    if ( !isdefined( var_4 ) || var_4.size == 0 )
        return;

    foreach ( var_6 in var_4 )
    {
        if ( isdefined( var_2 ) )
        {
            var_2 [[ var_6 ]]( var_0, var_1 );
            continue;
        }

        level [[ var_6 ]]( var_0, var_1 );
    }
}
