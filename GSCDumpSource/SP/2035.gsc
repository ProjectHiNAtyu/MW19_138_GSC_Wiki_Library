// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init_callbacks()
{
    level.global_callbacks = [];

    foreach ( var_1 in [ "_autosave_stealthcheck", "_patrol_endon_spotted_flag", "_spawner_stealth_default", "_idle_call_idle_func" ] )
        level.global_callbacks[var_1] = ::global_empty_callback;

    scripts\engine\utility::flag_init( "stealth_spotted" );
    scripts\engine\utility::flag_init( "stealth_enabled" );
    scripts\engine\utility::flag_init( "stealth_music_pause" );
}

global_empty_callback( var_0, var_1, var_2, var_3, var_4 )
{

}

stealth_get_func( var_0 )
{
    if ( isdefined( self.stealth ) && isdefined( self.stealth.funcs ) && isdefined( self.stealth.funcs[var_0] ) )
        return self.stealth.funcs[var_0];

    if ( isdefined( level.stealth ) && isdefined( level.stealth.funcs ) )
        return level.stealth.funcs[var_0];

    return undefined;
}

stealth_call( var_0, var_1, var_2, var_3 )
{
    var_4 = stealth_get_func( var_0 );

    if ( isdefined( var_4 ) )
    {
        if ( isdefined( var_3 ) )
            return self [[ var_4 ]]( var_1, var_2, var_3 );
        else if ( isdefined( var_2 ) )
            return self [[ var_4 ]]( var_1, var_2 );
        else if ( isdefined( var_1 ) )
            return self [[ var_4 ]]( var_1 );
        else
            return self [[ var_4 ]]();
    }

    return undefined;
}

stealth_call_thread( var_0, var_1, var_2, var_3 )
{
    var_4 = stealth_get_func( var_0 );

    if ( isdefined( var_4 ) )
    {
        if ( isdefined( var_3 ) )
            return self thread [[ var_4 ]]( var_1, var_2, var_3 );
        else if ( isdefined( var_2 ) )
            return self thread [[ var_4 ]]( var_1, var_2 );
        else if ( isdefined( var_1 ) )
            return self thread [[ var_4 ]]( var_1 );
        else
            return self thread [[ var_4 ]]();
    }

    return undefined;
}
