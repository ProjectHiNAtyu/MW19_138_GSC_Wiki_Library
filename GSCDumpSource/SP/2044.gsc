// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( isdefined( level.stealth ) )
        return;

    init();

    if ( !scripts\common\utility::issp() )
        level.players[0] thread update_stealth_spotted_thread();
    else
        level.player thread update_stealth_spotted_thread();

    level thread manager_thread();
    level thread teams_thread();
    level thread hunt_thread();

    if ( getdvarint( "scr_suspicious_stealth_doors" ) )
        stealth_suspicious_doors_init();
}

init()
{
    scripts\engine\utility::flag_set( "stealth_enabled" );
    level.stealth = spawnstruct();
    level.stealth.detect = spawnstruct();
    level.stealth.save = spawnstruct();
    level.stealth.ai_event = [];
    level.stealth.funcs = [];
    level.stealth.detect.state = "hidden";
    level.stealth.detect.range = [];
    level.stealth.detect.range["hidden"] = [];
    level.stealth.detect.range["spotted"] = [];
    level.stealth.detect.minrangedarkness["hidden"] = [];
    level.stealth.detect.minrangedarkness["spotted"] = [];
    level.stealth.detect.timeout = 5;
    scripts\stealth\corpse::corpse_init_level();
    scripts\stealth\event::event_init_level();
    level.stealth.next_sound_wait = 3000;
    level.stealth.head_shot_dist = 8;
    level.stealth.group = spawnstruct();
    level.stealth.group.flags = [];
    level.stealth.group.groups = [];
    level.stealth.group.ally_groups = [];
    level.stealth.group.death_alert_timeout = [];
    level.stealth.hunting_groups = [];
    set_default_settings();
    init_stealth_volumes();
    scripts\stealth\clear_regions::init_hunt_regions();
    init_save();
    scripts\stealth\utility::alertlevel_init_map();
    level.stealth.min_alert_level_duration = 1;
    setup_stealth_funcs();
}

setup_stealth_funcs()
{
    level scripts\stealth\utility::set_stealth_func( "do_stealth", scripts\stealth\utility::do_stealth );
    scripts\stealth\enemy::set_default_stealth_funcs();
    level.stealth.fngroupspottedflag = scripts\stealth\utility::group_spotted_flag;
    level.stealth.fninitenemygame = undefined;
    level.stealth.fnsetdisguised = scripts\stealth\utility::set_disguised_default;
}

set_default_settings()
{
    var_0 = [];
    var_0["prone"] = 400;
    var_0["crouch"] = 800;
    var_0["stand"] = 1500;
    var_1 = [];
    var_1["prone"] = 800;
    var_1["crouch"] = 1500;
    var_1["stand"] = 3000;
    scripts\stealth\utility::set_detect_ranges( var_0, var_1 );
    var_2 = [];
    var_2["prone"] = 130;
    var_2["crouch"] = 215;
    var_2["stand"] = 300;
    var_3 = [];
    var_3["prone"] = 300;
    var_3["crouch"] = 375;
    var_3["stand"] = 450;
    scripts\stealth\utility::set_min_detect_range_darkness( var_2, var_3 );
    scripts\stealth\corpse::set_corpse_ranges_default();
    init_event_distances();
    scripts\stealth\utility::set_disguised( 0 );
    event_change( "hidden" );
}

init_event_distances()
{
    var_0["ai_eventDistDeath"]["spotted"] = getdvarint( "ai_eventDistDeath" );
    var_0["ai_eventDistDeath"]["hidden"] = 512;
    var_0["ai_eventDistPain"]["spotted"] = getdvarint( "ai_eventDistPain" );
    var_0["ai_eventDistPain"]["hidden"] = 256;
    var_0["ai_eventDistExplosion"]["spotted"] = getdvarint( "ai_eventDistExplosion" );
    var_0["ai_eventDistExplosion"]["hidden"] = 2048;
    var_0["ai_eventDistBullet"]["spotted"] = getdvarint( "ai_eventDistBullet" );
    var_0["ai_eventDistBullet"]["hidden"] = 64;
    var_0["ai_eventDistFootstepWalk"]["spotted"] = getdvarint( "ai_eventDistFootstepWalk" );
    var_0["ai_eventDistFootstepWalk"]["hidden"] = 50;
    var_0["ai_eventDistFootstep"]["spotted"] = getdvarint( "ai_eventDistFootstep" );
    var_0["ai_eventDistFootstep"]["hidden"] = 100;
    var_0["ai_eventDistFootstepSprint"]["spotted"] = getdvarint( "ai_eventDistFootstepSprint" );
    var_0["ai_eventDistFootstepSprint"]["hidden"] = 400;
    var_0["ai_eventDistGunShot"]["spotted"] = getdvarint( "ai_eventDistGunShot" );
    var_0["ai_eventDistGunShot"]["hidden"] = 1500;
    var_0["ai_eventDistSilencedShot"]["spotted"] = getdvarint( "ai_eventDistSilencedShot" );
    var_0["ai_eventDistSilencedShot"]["hidden"] = 180;
    var_0["ai_eventDistGlassDestroyed"]["spotted"] = getdvarint( "ai_eventDistGlassDestroyed" );
    var_0["ai_eventDistGlassDestroyed"]["hidden"] = 384;

    if ( getdvarint( "greenlight", 0 ) )
    {
        var_0["ai_eventDistGunShotTeam"]["spotted"] = 256;
        var_0["ai_eventDistGunShotTeam"]["hidden"] = 256;
    }
    else
    {
        var_0["ai_eventDistGunShotTeam"]["spotted"] = getdvarint( "ai_eventDistGunShotTeam" );
        var_0["ai_eventDistGunShotTeam"]["hidden"] = 750;
    }

    var_0["ai_eventDistNewEnemy"]["spotted"] = 128;
    var_0["ai_eventDistNewEnemy"]["hidden"] = 128;
    set_event_distances( var_0 );
}

set_event_distances( var_0 )
{
    foreach ( var_6, var_2 in var_0 )
    {
        foreach ( var_5, var_4 in var_2 )
            level.stealth.ai_event[var_6][var_5] = var_4;
    }
}

set_custom_distances( var_0 )
{
    foreach ( var_7, var_2 in var_0 )
    {
        foreach ( var_6, var_4 in var_2 )
        {
            level.stealth.ai_event[var_7][var_6] = var_4;

            if ( level.stealth.detect.state == var_6 )
            {
                setsaveddvar( var_7, var_4 );
                var_5 = "ai_busyEvent" + getsubstr( var_7, 8 );
                setsaveddvar( var_5, var_4 );
            }
        }
    }
}

set_detect_ranges_internal( var_0, var_1 )
{
    var_2 = 0.25;

    if ( isdefined( var_0 ) )
    {
        level.stealth.detect.range["hidden"]["prone"] = var_0["prone"];
        level.stealth.detect.range["hidden"]["crouch"] = var_0["crouch"];
        level.stealth.detect.range["hidden"]["stand"] = var_0["stand"];

        if ( !isdefined( var_0["shadow"] ) )
            var_0["shadow"] = var_2;

        level.stealth.detect.range["hidden"]["shadow"] = var_0["shadow"];
    }

    if ( isdefined( var_1 ) )
    {
        level.stealth.detect.range["spotted"]["prone"] = var_1["prone"];
        level.stealth.detect.range["spotted"]["crouch"] = var_1["crouch"];
        level.stealth.detect.range["spotted"]["stand"] = var_1["stand"];

        if ( !isdefined( var_1["shadow"] ) )
            var_1["shadow"] = var_2;

        level.stealth.detect.range["spotted"]["shadow"] = var_1["shadow"];
    }
}

manager_thread()
{
    for (;;)
    {
        scripts\engine\utility::flag_wait( "stealth_enabled" );
        scripts\stealth\threat_sight::threat_sight_set_dvar( 1 );

        if ( !playerlootenabled() )
            setsaveddvar( "MQSNSOSMPN", 1 );

        scripts\engine\utility::flag_wait( "stealth_spotted" );

        if ( !playerlootenabled() )
            setsaveddvar( "MQSNSOSMPN", 0 );

        if ( !scripts\engine\utility::flag( "stealth_enabled" ) )
            continue;

        event_change( "spotted" );
        scripts\engine\utility::flag_waitopen( "stealth_spotted" );

        if ( !scripts\engine\utility::flag( "stealth_enabled" ) )
            continue;

        event_change( "hidden" );
        waittillframeend;
    }
}

anyone_in_combat()
{
    if ( isdefined( level.stealth.groupdata ) )
    {
        foreach ( var_1 in level.stealth.groupdata.groups )
        {
            if ( scripts\stealth\group::group_anyoneincombat( var_1.name ) )
                return 1;
        }
    }

    var_3 = getaiunittypearray( "bad_guys", "all" );

    foreach ( var_5 in var_3 )
    {
        if ( !isdefined( var_5.stealth ) && isdefined( var_5.enemy ) && var_5.enemy == self )
            return 1;
    }

    return 0;
}

update_stealth_spotted_thread()
{
    waitframe();
    var_0 = 0;

    for (;;)
    {
        var_1 = anyone_in_combat();

        if ( var_1 )
        {
            if ( !var_0 && isdefined( level.stealth.stealth_spotted_delay ) )
            {
                wait( level.stealth.stealth_spotted_delay );

                if ( !anyone_in_combat() )
                {
                    waitframe();
                    continue;
                }
            }

            if ( !scripts\engine\utility::flag( "stealth_spotted" ) )
            {
                scripts\engine\utility::flag_set( "stealth_spotted" );

                if ( isdefined( self.stealth ) )
                {
                    var_2 = scripts\stealth\utility::get_group_flagname( "stealth_spotted" );
                    scripts\engine\utility::flag_set( var_2 );
                }
            }
        }
        else if ( scripts\engine\utility::flag( "stealth_spotted" ) )
        {
            scripts\engine\utility::flag_clear( "stealth_spotted" );

            if ( isdefined( self.stealth ) )
            {
                var_2 = scripts\stealth\utility::get_group_flagname( "stealth_spotted" );
                scripts\engine\utility::flag_clear( var_2 );
            }
        }

        var_0 = var_1;
        waitframe();
    }
}

teams_thread()
{
    level.stealth.enemies["axis"] = [];
    level.stealth.enemies["allies"] = [];

    for (;;)
    {
        scripts\engine\utility::flag_wait( "stealth_enabled" );
        level.stealth.enemies["axis"] = level.players;
        level.stealth.enemies["allies"] = getaiarray( "axis" );
        wait 0.05;
    }
}

hunt_thread()
{
    for (;;)
    {
        scripts\engine\utility::flag_wait( "stealth_enabled" );

        if ( isdefined( level.stealth.hunt_stealth_group_region_sets ) && level.stealth.hunt_stealth_group_region_sets.size != 0 )
        {
            foreach ( var_2, var_1 in level.stealth.hunt_stealth_group_region_sets )
            {
                scripts\stealth\clear_regions::huntcomputeaiindependentregionscores( var_2, var_1 );
                wait 0.2;
            }

            continue;
        }

        wait 0.5;
    }
}

event_change( var_0 )
{
    level.stealth.detect.state = var_0;

    foreach ( var_4, var_2 in level.stealth.ai_event )
    {
        setsaveddvar( var_4, var_2[var_0] );
        var_3 = "ai_busyEvent" + getsubstr( var_4, 8 );
        setsaveddvar( var_3, var_2[var_0] );
    }
}

init_save()
{
    scripts\engine\utility::flag_init( "stealth_player_nade" );
    level.stealth.save.player_nades = 0;
    scripts\engine\utility::array_thread( level.players, ::player_grenade_check );
}

player_grenade_check()
{
    for (;;)
    {
        self waittill( "grenade_pullback" );
        scripts\engine\utility::flag_set( "stealth_player_nade" );
        self waittill( "grenade_fire", var_0 );
        thread player_grenade_check_dieout( var_0 );
    }
}

player_grenade_check_dieout( var_0 )
{
    level.stealth.save.player_nades++;
    var_0 scripts\engine\utility::waittill_notify_or_timeout( "death", 10 );
    level.stealth.save.player_nades--;
    waittillframeend;

    if ( !level.stealth.save.player_nades )
        scripts\engine\utility::flag_clear( "stealth_player_nade" );
}

stealth_suspicious_doors_init()
{
    if ( istrue( level.ship_assault ) )
        return;

    if ( isdefined( level.stealth ) )
    {
        if ( !isdefined( level.stealth.suspicious_door ) )
        {
            level.stealth.suspicious_door = spawnstruct();
            level.stealth.suspicious_door.doors = [];
            level.stealth.suspicious_door.reset_time = 30;
            level.stealth.suspicious_door.sight_distsqrd = squared( 600 );
            level.stealth.suspicious_door.detect_distsqrd = squared( 500 );
            level.stealth.suspicious_door.found_distsqrd = squared( 300 );
        }

        level scripts\stealth\utility::set_stealth_func( "suspicious_door", scripts\stealth\corpse::suspicious_door_found );
        level scripts\stealth\event::event_severity_set( "investigate", "suspicious_door", 20 );
    }
}

init_stealth_volumes()
{
    level.stealth.combat_volumes = [];
    level.stealth.hunt_volumes = [];
    level.stealth.investigate_volumes = [];
    var_0 = getentarray( "info_volume_stealth_all", "classname" );
    var_1 = getentarray( "info_volume_stealth_combat", "classname" );
    var_1 = scripts\engine\utility::array_combine( var_1, var_0 );

    if ( isdefined( var_1 ) )
    {
        foreach ( var_3 in var_1 )
        {
            var_4 = strtok( var_3.script_stealthgroup, " " );

            foreach ( var_6 in var_4 )
                level.stealth.combat_volumes[var_6] = var_3;
        }
    }

    var_1 = getentarray( "info_volume_stealth_hunt", "classname" );
    var_1 = scripts\engine\utility::array_combine( var_1, var_0 );

    if ( isdefined( var_1 ) )
    {
        foreach ( var_3 in var_1 )
        {
            var_4 = strtok( var_3.script_stealthgroup, " " );

            foreach ( var_6 in var_4 )
                level.stealth.hunt_volumes[var_6] = var_3;
        }
    }

    var_1 = getentarray( "info_volume_stealth_investigate", "classname" );
    var_1 = scripts\engine\utility::array_combine( var_1, var_0 );

    if ( isdefined( var_1 ) )
    {
        foreach ( var_3 in var_1 )
        {
            var_4 = strtok( var_3.script_stealthgroup, " " );

            foreach ( var_6 in var_4 )
                level.stealth.investigate_volumes[var_6] = var_3;
        }
    }
}

playerlootenabled()
{
    if ( isdefined( level.stealth ) && isdefined( level.stealth.fnplayerlootenabled ) )
        return [[ level.stealth.fnplayerlootenabled ]]();

    return 0;
}
